<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AnalysisUIOptions">
    <option name="ANALYZE_INJECTED_CODE" value="false" />
    <option name="SCOPE_TYPE" value="10" />
  </component>
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="13d9711e-af47-4516-9a74-091c329d410d" name="Changes" comment="Refactor progress bar update logic and clean up duplicated code&#10;&#10;Enhanced progress bar update by modifying the calculation and update logic. Now, it accurately calculates the progress as a percentage and stores it as an integer, improving performance. This update applies across multiple files. Redundant code lines were also eliminated for a cleaner, more readable code.">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Python Script" />
      </list>
    </option>
  </component>
  <component name="FlaskConsoleOptions" custom-start-script="import sys&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;from flask.cli import ScriptInfo&#10;locals().update(ScriptInfo(create_app=None).load_app().make_shell_context())&#10;print(&quot;Python %s on %s\nApp: %s [%s]\nInstance: %s&quot; % (sys.version, sys.platform, app.import_name, app.env, app.instance_path))" module-name="pyarchinit" is-module-sdk="true">
    <envs>
      <env key="FLASK_APP" value="app" />
    </envs>
    <option name="myCustomStartScript" value="import sys&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;from flask.cli import ScriptInfo&#10;locals().update(ScriptInfo(create_app=None).load_app().make_shell_context())&#10;print(&quot;Python %s on %s\nApp: %s [%s]\nInstance: %s&quot; % (sys.version, sys.platform, app.import_name, app.env, app.instance_path))" />
    <option name="myUseModuleSdk" value="true" />
    <option name="myModuleName" value="pyarchinit" />
    <option name="myEnvs">
      <map>
        <entry key="FLASK_APP" value="app" />
      </map>
    </option>
  </component>
  <component name="Git.Pull.Settings">
    <option name="OPTIONS">
      <set>
        <option value="REBASE" />
      </set>
    </option>
  </component>
  <component name="Git.Settings">
    <favorite-branches>
      <branch-storage>
        <map>
          <entry type="LOCAL">
            <value>
              <list>
                <branch-info repo="$PROJECT_DIR$" source="pyarchinit_db_english" />
              </list>
            </value>
          </entry>
        </map>
      </branch-storage>
    </favorite-branches>
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="dev28052025" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
    <option name="UPDATE_TYPE" value="REBASE" />
  </component>
  <component name="GithubPullRequestsUISettings">
    <option name="selectedUrlAndAccountId">
      <UrlAndAccount>
        <option name="accountId" value="fbeabf17-dfef-4802-bd10-e0de1b65fbb3" />
        <option name="url" value="https://github.com/pyarchinit/pyarchinit.git" />
      </UrlAndAccount>
    </option>
  </component>
  <component name="HighlightingSettingsPerFile">
    <setting file="file://$PROJECT_DIR$/tabs/Campioni.py" root0="SKIP_INSPECTION" />
  </component>
  <component name="InstanceColorv3">
    <option name="map">
      <map>
        <entry key="$PROJECT_DIR$/Writerside/in.tree">
          <value>
            <ColorState>
              <option name="customOrder" value="2" />
              <option name="first">
                <RgbState>
                  <option name="blue" value="225" />
                  <option name="darkBlue" value="225" />
                  <option name="darkGreen" value="149" />
                  <option name="darkRed" value="56" />
                  <option name="green" value="149" />
                  <option name="red" value="56" />
                </RgbState>
              </option>
              <option name="second">
                <RgbState>
                  <option name="blue" value="234" />
                  <option name="darkBlue" value="234" />
                  <option name="darkGreen" value="197" />
                  <option name="darkRed" value="81" />
                  <option name="green" value="197" />
                  <option name="red" value="81" />
                </RgbState>
              </option>
            </ColorState>
          </value>
        </entry>
        <entry key="in.tree">
          <value>
            <ColorState>
              <option name="customOrder" value="1" />
              <option name="first">
                <RgbState>
                  <option name="blue" value="60" />
                  <option name="darkBlue" value="60" />
                  <option name="darkGreen" value="68" />
                  <option name="darkRed" value="206" />
                  <option name="green" value="68" />
                  <option name="red" value="206" />
                </RgbState>
              </option>
              <option name="second">
                <RgbState>
                  <option name="blue" value="65" />
                  <option name="darkBlue" value="65" />
                  <option name="darkGreen" value="126" />
                  <option name="darkRed" value="231" />
                  <option name="green" value="126" />
                  <option name="red" value="231" />
                </RgbState>
              </option>
            </ColorState>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProblemsViewState">
    <option name="groupByToolId" value="true" />
    <option name="selectedTabId" value="CurrentFile" />
    <option name="showPreview" value="true" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 3
}</component>
  <component name="ProjectCucumberState">
    <option name="filterByTags" value="true" />
    <option name="groupTag" value="true" />
    <option name="sourcePathOnly" value="false" />
  </component>
  <component name="ProjectId" id="20rwfAzsos20ovIIkbZMDo8dqP6" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;Python tests.Python tests for test1.test_field.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests for unitest.TestYourModule.test_openai_not_installed.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests in test1.py.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests in test_4707.py.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests in test_matrix.py.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests in test_renem_file.py.executor&quot;: &quot;Run&quot;,
    &quot;Python.__init__.executor&quot;: &quot;Run&quot;,
    &quot;Python.archaeological_data_mapping.executor&quot;: &quot;Run&quot;,
    &quot;Python.archeo_analysis.executor&quot;: &quot;Run&quot;,
    &quot;Python.autoemotive.executor&quot;: &quot;Run&quot;,
    &quot;Python.copy_excelfile.executor&quot;: &quot;Run&quot;,
    &quot;Python.grok-1.executor&quot;: &quot;Run&quot;,
    &quot;Python.reformat_dir.executor&quot;: &quot;Run&quot;,
    &quot;Python.skatch_gpt_US.executor&quot;: &quot;Run&quot;,
    &quot;Python.t_4707.executor&quot;: &quot;Run&quot;,
    &quot;Python.test_matrix.executor&quot;: &quot;Run&quot;,
    &quot;Python.test_renem_file.executor&quot;: &quot;Run&quot;,
    &quot;Python.train_groq.executor&quot;: &quot;Run&quot;,
    &quot;Python.update_entities_us_field.executor&quot;: &quot;Run&quot;,
    &quot;Python.update_forms_us_field.executor&quot;: &quot;Run&quot;,
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,
    &quot;ToolWindowCodeGPT.ShowToolbar&quot;: &quot;false&quot;,
    &quot;git-widget-placeholder&quot;: &quot;dev28052025&quot;,
    &quot;junie.onboarding.icon.badge.shown&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;/Users/enzo/Library/Application Support/QGIS/QGIS3/profiles/default/python/plugins/pyarchinit/modules/gis&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;run.code.analysis.last.selected.profile&quot;: &quot;aDefault&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;,
    &quot;tasks.open.task.update.state.enabled&quot;: &quot;true&quot;
  },
  &quot;keyToStringList&quot;: {
    &quot;DatabaseDriversLRU&quot;: [
      &quot;sqlite&quot;,
      &quot;postgresql&quot;
    ],
    &quot;GitStage.ChangesTree.GroupingKeys&quot;: [
      &quot;directory&quot;,
      &quot;module&quot;,
      &quot;repository&quot;
    ],
    &quot;stardust.markdown.MarkdownSplitEditorSuppressor:keyList&quot;: []
  }
}</component>
  <component name="PyConsoleOptionsProvider">
    <option name="myPythonConsoleState">
      <console-settings module-name="pyarchinit" is-module-sdk="true">
        <option name="myUseModuleSdk" value="true" />
        <option name="myModuleName" value="pyarchinit" />
      </console-settings>
    </option>
  </component>
  <component name="PyDebuggerOptionsProvider">
    <option name="myPyQtBackend" value="pyqt5" />
  </component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/modules/gis" />
      <recent name="$PROJECT_DIR$/tabs" />
      <recent name="$PROJECT_DIR$" />
      <recent name="$PROJECT_DIR$/resources/dbfiles" />
      <recent name="$PROJECT_DIR$/resources" />
    </key>
    <key name="ImportExportFile.TargetDir.RECENT_KEYS">
      <recent name="$USER_HOME$/Desktop" />
    </key>
  </component>
  <component name="RunManager" selected="Python.update_forms_us_field">
    <configuration name="test_matrix" type="PythonConfigurationType" factoryName="Python" nameIsGenerated="true">
      <module name="pyarchinit" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="SDK_NAME" value="Python 3.9" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/test_matrix.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="update_entities_us_field" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
      <module name="pyarchinit" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/scripts" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/scripts/update_entities_us_field.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="update_forms_us_field" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
      <module name="pyarchinit" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/scripts" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/scripts/update_forms_us_field.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests for unitest.TestYourModule.test_openai_not_installed" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="pyarchinit" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/modules/utility" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;unitest.TestYourModule.test_openai_not_installed&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests in /Users/enzo/Library/Application Support/QGIS/QGIS3/profiles/default/python/plugins/pyarchinit/test1.py" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="pyarchinit" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;$PROJECT_DIR$/test1.py&quot;" />
      <option name="_new_targetType" value="&quot;PATH&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests in t_4707.py" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="pyarchinit" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;$PROJECT_DIR$/t_4707.py&quot;" />
      <option name="_new_targetType" value="&quot;PATH&quot;" />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Python.test_matrix" />
      <item itemvalue="Python.update_entities_us_field" />
      <item itemvalue="Python.update_forms_us_field" />
      <item itemvalue="Python tests.Python tests for unitest.TestYourModule.test_openai_not_installed" />
      <item itemvalue="Python tests.Python tests in /Users/enzo/Library/Application Support/QGIS/QGIS3/profiles/default/python/plugins/pyarchinit/test1.py" />
      <item itemvalue="Python tests.Python tests in t_4707.py" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Python.update_forms_us_field" />
        <item itemvalue="Python.update_entities_us_field" />
        <item itemvalue="Python tests.Python tests for unitest.TestYourModule.test_openai_not_installed" />
        <item itemvalue="Python tests.Python tests in t_4707.py" />
        <item itemvalue="Python tests.Python tests in /Users/enzo/Library/Application Support/QGIS/QGIS3/profiles/default/python/plugins/pyarchinit/test1.py" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-js-predefined-d6986cc7102b-09060db00ec0-JavaScript-PY-251.26927.90" />
        <option value="bundled-python-sdk-41e8cd69c857-64d779b69b7a-com.jetbrains.pycharm.pro.sharedIndexes.bundled-PY-251.26927.90" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <branch name="master" repository="$PROJECT_DIR$" />
      <changelist id="13d9711e-af47-4516-9a74-091c329d410d" name="Changes" comment="" />
      <created>1636816115136</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1740675338965</updated>
      <workItem from="1710665556962" duration="32821000" />
      <workItem from="1710877623360" duration="3000" />
      <workItem from="1710917677280" duration="28429000" />
      <workItem from="1710969336339" duration="681000" />
      <workItem from="1710998877027" duration="8758000" />
      <workItem from="1711008218392" duration="2244000" />
      <workItem from="1711085657572" duration="11229000" />
      <workItem from="1711109265814" duration="1770000" />
      <workItem from="1711118126197" duration="2680000" />
      <workItem from="1711173790119" duration="12729000" />
      <workItem from="1711259017304" duration="6295000" />
      <workItem from="1711277021529" duration="3862000" />
      <workItem from="1711290061233" duration="1805000" />
      <workItem from="1711291899337" duration="27000" />
      <workItem from="1711357189127" duration="31898000" />
      <workItem from="1711430971802" duration="12823000" />
      <workItem from="1711528614512" duration="18000" />
      <workItem from="1711528843875" duration="2402000" />
      <workItem from="1711640881305" duration="127000" />
      <workItem from="1711641028986" duration="4251000" />
      <workItem from="1711715545928" duration="1013000" />
      <workItem from="1711784754575" duration="88000" />
      <workItem from="1711784866847" duration="36000" />
      <workItem from="1711784918322" duration="15086000" />
      <workItem from="1711827975275" duration="6087000" />
      <workItem from="1711864980067" duration="6321000" />
      <workItem from="1711877837448" duration="446000" />
      <workItem from="1711878542890" duration="745000" />
      <workItem from="1711901508394" duration="2655000" />
      <workItem from="1711950760128" duration="1582000" />
      <workItem from="1711958295107" duration="3390000" />
      <workItem from="1711990798519" duration="9849000" />
      <workItem from="1712054402761" duration="3509000" />
      <workItem from="1712119393884" duration="1772000" />
      <workItem from="1712121204262" duration="12426000" />
      <workItem from="1712228269753" duration="2194000" />
      <workItem from="1712232597847" duration="740000" />
      <workItem from="1712242751571" duration="1344000" />
      <workItem from="1712251342979" duration="6198000" />
      <workItem from="1712294961222" duration="3723000" />
      <workItem from="1712383535714" duration="3788000" />
      <workItem from="1712583569899" duration="2625000" />
      <workItem from="1712644612580" duration="1321000" />
      <workItem from="1713859217686" duration="8797000" />
      <workItem from="1713940486625" duration="9783000" />
      <workItem from="1714028405225" duration="126000" />
      <workItem from="1714028552955" duration="7718000" />
      <workItem from="1714112352715" duration="16350000" />
      <workItem from="1714198190776" duration="5664000" />
      <workItem from="1714226176881" duration="43000" />
      <workItem from="1714712663530" duration="2103000" />
      <workItem from="1715021570534" duration="1060000" />
      <workItem from="1715065245845" duration="7000" />
      <workItem from="1715065544027" duration="2671000" />
      <workItem from="1715245401310" duration="2658000" />
      <workItem from="1715258055233" duration="6000" />
      <workItem from="1715597889457" duration="1240000" />
      <workItem from="1715872674797" duration="2635000" />
      <workItem from="1715925113441" duration="8436000" />
      <workItem from="1716012526596" duration="1809000" />
      <workItem from="1716037474590" duration="16000" />
      <workItem from="1716370475731" duration="7195000" />
      <workItem from="1716443458225" duration="71000" />
      <workItem from="1716615823639" duration="4366000" />
      <workItem from="1716622182359" duration="2582000" />
      <workItem from="1716624807977" duration="1209000" />
      <workItem from="1719036483915" duration="12000" />
      <workItem from="1719036506333" duration="706000" />
      <workItem from="1719152615154" duration="3778000" />
      <workItem from="1719248749850" duration="17000" />
      <workItem from="1719297774407" duration="46000" />
      <workItem from="1719297830745" duration="28000" />
      <workItem from="1719337332856" duration="11000" />
      <workItem from="1719390728359" duration="913000" />
      <workItem from="1719392327182" duration="17000" />
      <workItem from="1719393200112" duration="300000" />
      <workItem from="1723891799111" duration="105000" />
      <workItem from="1723891994448" duration="629000" />
      <workItem from="1723971861442" duration="5639000" />
      <workItem from="1724233961626" duration="2726000" />
      <workItem from="1724309796775" duration="1597000" />
      <workItem from="1724670932102" duration="1831000" />
      <workItem from="1724733608951" duration="5506000" />
      <workItem from="1725244490753" duration="1500000" />
      <workItem from="1725358165708" duration="2369000" />
      <workItem from="1725425918348" duration="1925000" />
      <workItem from="1725433856491" duration="115000" />
      <workItem from="1725441255158" duration="10962000" />
      <workItem from="1725596824847" duration="1694000" />
      <workItem from="1725613114056" duration="7000" />
      <workItem from="1725686886690" duration="1680000" />
      <workItem from="1725713211158" duration="14249000" />
      <workItem from="1725940244130" duration="12506000" />
      <workItem from="1725972051423" duration="2914000" />
      <workItem from="1726587028033" duration="41702000" />
      <workItem from="1726839832987" duration="8961000" />
      <workItem from="1726859904809" duration="3882000" />
      <workItem from="1726900061797" duration="6962000" />
      <workItem from="1726986779692" duration="3905000" />
      <workItem from="1727075894048" duration="5510000" />
      <workItem from="1727081825017" duration="7403000" />
      <workItem from="1727161793467" duration="2758000" />
      <workItem from="1727178018259" duration="6903000" />
      <workItem from="1727247570516" duration="14959000" />
      <workItem from="1727332728003" duration="3137000" />
      <workItem from="1727346577081" duration="2518000" />
      <workItem from="1727361344800" duration="9867000" />
      <workItem from="1727418805144" duration="6930000" />
      <workItem from="1727443352190" duration="9415000" />
      <workItem from="1727500231256" duration="2825000" />
      <workItem from="1727503069522" duration="211000" />
      <workItem from="1727503285913" duration="448000" />
      <workItem from="1727503843962" duration="24659000" />
      <workItem from="1727702658064" duration="13000" />
      <workItem from="1727702687281" duration="10817000" />
      <workItem from="1727788433874" duration="10740000" />
      <workItem from="1727851943004" duration="67000" />
      <workItem from="1727852039771" duration="15776000" />
      <workItem from="1727929000380" duration="22212000" />
      <workItem from="1728114519157" duration="9989000" />
      <workItem from="1728124646692" duration="109000" />
      <workItem from="1728136507005" duration="14789000" />
      <workItem from="1728200857952" duration="9112000" />
      <workItem from="1728287269500" duration="11486000" />
      <workItem from="1728417746871" duration="126000" />
      <workItem from="1728457015618" duration="22673000" />
      <workItem from="1728540156492" duration="17160000" />
      <workItem from="1728642778045" duration="36000" />
      <workItem from="1728642829407" duration="4089000" />
      <workItem from="1728883124454" duration="24929000" />
      <workItem from="1728933363094" duration="697000" />
      <workItem from="1728973091638" duration="12841000" />
      <workItem from="1729063474105" duration="702000" />
      <workItem from="1729064247305" duration="646000" />
      <workItem from="1729065155331" duration="14691000" />
      <workItem from="1729180338683" duration="17000" />
      <workItem from="1729318620916" duration="30000" />
      <workItem from="1729318664167" duration="7691000" />
      <workItem from="1730517705034" duration="17002000" />
      <workItem from="1731149325259" duration="19000" />
      <workItem from="1733121435021" duration="1360000" />
      <workItem from="1733123617534" duration="81000" />
      <workItem from="1733537540683" duration="54000" />
      <workItem from="1733833435583" duration="15000" />
      <workItem from="1733968489879" duration="5540000" />
      <workItem from="1734056841516" duration="1337000" />
      <workItem from="1734628520862" duration="46000" />
      <workItem from="1734669172271" duration="2419000" />
      <workItem from="1734767726463" duration="1308000" />
      <workItem from="1734899890303" duration="595000" />
      <workItem from="1735841139175" duration="1858000" />
      <workItem from="1736350468620" duration="16000" />
      <workItem from="1736350491923" duration="49550000" />
      <workItem from="1736502388730" duration="9165000" />
      <workItem from="1736526028260" duration="620000" />
      <workItem from="1736580239925" duration="61837000" />
      <workItem from="1736774617574" duration="19952000" />
      <workItem from="1736800816621" duration="24412000" />
      <workItem from="1737029642489" duration="3697000" />
      <workItem from="1737104120178" duration="37000" />
      <workItem from="1738347633120" duration="665000" />
      <workItem from="1739694768233" duration="2119000" />
      <workItem from="1739721741590" duration="1802000" />
      <workItem from="1739875484976" duration="1192000" />
      <workItem from="1739886202564" duration="594000" />
      <workItem from="1739971344628" duration="58801000" />
      <workItem from="1740410661242" duration="7515000" />
      <workItem from="1740567708692" duration="1610000" />
      <workItem from="1740672396963" duration="1599000" />
      <workItem from="1740675339019" duration="27000" />
      <workItem from="1740993676982" duration="1211000" />
      <workItem from="1741021838801" duration="1499000" />
      <workItem from="1741024604402" duration="7412000" />
      <workItem from="1741097004978" duration="552000" />
      <workItem from="1741102878402" duration="6102000" />
      <workItem from="1741158363149" duration="1715000" />
      <workItem from="1741160535705" duration="22000" />
      <workItem from="1741422330102" duration="1123000" />
      <workItem from="1741423623483" duration="12719000" />
      <workItem from="1741595623443" duration="7681000" />
      <workItem from="1741617181347" duration="13774000" />
      <workItem from="1746807950310" duration="924000" />
      <workItem from="1747029681872" duration="89000" />
      <workItem from="1747029795837" duration="14753000" />
      <workItem from="1747193406847" duration="2956000" />
      <workItem from="1747200785735" duration="14081000" />
      <workItem from="1747233864732" duration="1898000" />
      <workItem from="1747292190660" duration="456000" />
      <workItem from="1747299626431" duration="1432000" />
      <workItem from="1747305398230" duration="10559000" />
      <workItem from="1747376621430" duration="3227000" />
      <workItem from="1747382749454" duration="6966000" />
      <workItem from="1752464361956" duration="49000" />
      <workItem from="1752501324632" duration="1008000" />
      <workItem from="1753102597814" duration="7529000" />
      <workItem from="1753263637917" duration="6198000" />
      <workItem from="1753273797592" duration="19235000" />
      <workItem from="1753344403815" duration="14329000" />
      <workItem from="1753381459824" duration="287000" />
      <workItem from="1753382171685" duration="597000" />
      <workItem from="1753382968382" duration="1444000" />
      <workItem from="1753412221148" duration="1015000" />
      <workItem from="1753413693449" duration="25620000" />
    </task>
    <task id="LOCAL-00022" summary="v3.9.14">
      <created>1649165457258</created>
      <option name="number" value="00022" />
      <option name="presentableId" value="LOCAL-00022" />
      <option name="project" value="LOCAL" />
      <updated>1649165457258</updated>
    </task>
    <task id="LOCAL-00023" summary="fix minor bug">
      <created>1649401469775</created>
      <option name="number" value="00023" />
      <option name="presentableId" value="LOCAL-00023" />
      <option name="project" value="LOCAL" />
      <updated>1649401469775</updated>
    </task>
    <task id="LOCAL-00024" summary="fix minor bug">
      <created>1649401483094</created>
      <option name="number" value="00024" />
      <option name="presentableId" value="LOCAL-00024" />
      <option name="project" value="LOCAL" />
      <updated>1649401483094</updated>
    </task>
    <task id="LOCAL-00025" summary="v.3.9.15">
      <created>1649401549447</created>
      <option name="number" value="00025" />
      <option name="presentableId" value="LOCAL-00025" />
      <option name="project" value="LOCAL" />
      <updated>1649401549447</updated>
    </task>
    <task id="LOCAL-00026" summary="pyarchini tomba view">
      <created>1649660794989</created>
      <option name="number" value="00026" />
      <option name="presentableId" value="LOCAL-00026" />
      <option name="project" value="LOCAL" />
      <updated>1649660794990</updated>
    </task>
    <task id="LOCAL-00027" summary="v3.9.18">
      <created>1649660860116</created>
      <option name="number" value="00027" />
      <option name="presentableId" value="LOCAL-00027" />
      <option name="project" value="LOCAL" />
      <updated>1649660860116</updated>
    </task>
    <task id="LOCAL-00028" summary="#460">
      <created>1649667987618</created>
      <option name="number" value="00028" />
      <option name="presentableId" value="LOCAL-00028" />
      <option name="project" value="LOCAL" />
      <updated>1649667987618</updated>
    </task>
    <task id="LOCAL-00029" summary="v3.9.18">
      <created>1649668034713</created>
      <option name="number" value="00029" />
      <option name="presentableId" value="LOCAL-00029" />
      <option name="project" value="LOCAL" />
      <updated>1649668034713</updated>
    </task>
    <task id="LOCAL-00030" summary="v3.9.19">
      <created>1651472386957</created>
      <option name="number" value="00030" />
      <option name="presentableId" value="LOCAL-00030" />
      <option name="project" value="LOCAL" />
      <updated>1651472386958</updated>
    </task>
    <task id="LOCAL-00031" summary="v4.0.0">
      <created>1651492155682</created>
      <option name="number" value="00031" />
      <option name="presentableId" value="LOCAL-00031" />
      <option name="project" value="LOCAL" />
      <updated>1651492155682</updated>
    </task>
    <task id="LOCAL-00032" summary="v4.0.0">
      <created>1651492952651</created>
      <option name="number" value="00032" />
      <option name="presentableId" value="LOCAL-00032" />
      <option name="project" value="LOCAL" />
      <updated>1651492952651</updated>
    </task>
    <task id="LOCAL-00033" summary="v4.0.0">
      <created>1651494049907</created>
      <option name="number" value="00033" />
      <option name="presentableId" value="LOCAL-00033" />
      <option name="project" value="LOCAL" />
      <updated>1651494049907</updated>
    </task>
    <task id="LOCAL-00034" summary="v4.0.0">
      <created>1651495346518</created>
      <option name="number" value="00034" />
      <option name="presentableId" value="LOCAL-00034" />
      <option name="project" value="LOCAL" />
      <updated>1651495346518</updated>
    </task>
    <task id="LOCAL-00035" summary="add">
      <created>1651504420174</created>
      <option name="number" value="00035" />
      <option name="presentableId" value="LOCAL-00035" />
      <option name="project" value="LOCAL" />
      <updated>1651504420174</updated>
    </task>
    <task id="LOCAL-00036" summary="fix minor bug gui matrix">
      <created>1651822893845</created>
      <option name="number" value="00036" />
      <option name="presentableId" value="LOCAL-00036" />
      <option name="project" value="LOCAL" />
      <updated>1651822893845</updated>
    </task>
    <task id="LOCAL-00037" summary="v4.0.1">
      <created>1651822923542</created>
      <option name="number" value="00037" />
      <option name="presentableId" value="LOCAL-00037" />
      <option name="project" value="LOCAL" />
      <updated>1651822923542</updated>
    </task>
    <task id="LOCAL-00038" summary="v4.0.1">
      <created>1651823712115</created>
      <option name="number" value="00038" />
      <option name="presentableId" value="LOCAL-00038" />
      <option name="project" value="LOCAL" />
      <updated>1651823712115</updated>
    </task>
    <task id="LOCAL-00039" summary="v4.0.1">
      <created>1651823850984</created>
      <option name="number" value="00039" />
      <option name="presentableId" value="LOCAL-00039" />
      <option name="project" value="LOCAL" />
      <updated>1651823850984</updated>
    </task>
    <task id="LOCAL-00040" summary="update _mod_spatialite.so for mac">
      <created>1652333772965</created>
      <option name="number" value="00040" />
      <option name="presentableId" value="LOCAL-00040" />
      <option name="project" value="LOCAL" />
      <updated>1652333772965</updated>
    </task>
    <task id="LOCAL-00041" summary="#471 fix bug for mac">
      <created>1652355755187</created>
      <option name="number" value="00041" />
      <option name="presentableId" value="LOCAL-00041" />
      <option name="project" value="LOCAL" />
      <updated>1652355755187</updated>
    </task>
    <task id="LOCAL-00042" summary="#471 fix bug for mac">
      <created>1652365504495</created>
      <option name="number" value="00042" />
      <option name="presentableId" value="LOCAL-00042" />
      <option name="project" value="LOCAL" />
      <updated>1652365504495</updated>
    </task>
    <task id="LOCAL-00043" summary="fix bug load video for mac">
      <created>1652507626723</created>
      <option name="number" value="00043" />
      <option name="presentableId" value="LOCAL-00043" />
      <option name="project" value="LOCAL" />
      <updated>1652507626723</updated>
    </task>
    <task id="LOCAL-00044" summary="fix bug load video for mac">
      <created>1652508073598</created>
      <option name="number" value="00044" />
      <option name="presentableId" value="LOCAL-00044" />
      <option name="project" value="LOCAL" />
      <updated>1652508073598</updated>
    </task>
    <task id="LOCAL-00045" summary="fix bug #486">
      <created>1652853371901</created>
      <option name="number" value="00045" />
      <option name="presentableId" value="LOCAL-00045" />
      <option name="project" value="LOCAL" />
      <updated>1652853371901</updated>
    </task>
    <task id="LOCAL-00046" summary="fix bug #486">
      <created>1652853567183</created>
      <option name="number" value="00046" />
      <option name="presentableId" value="LOCAL-00046" />
      <option name="project" value="LOCAL" />
      <updated>1652853567183</updated>
    </task>
    <task id="LOCAL-00047" summary="fix bug #486">
      <created>1653023334687</created>
      <option name="number" value="00047" />
      <option name="presentableId" value="LOCAL-00047" />
      <option name="project" value="LOCAL" />
      <updated>1653023334687</updated>
    </task>
    <task id="LOCAL-00048" summary="readme update">
      <created>1653290385894</created>
      <option name="number" value="00048" />
      <option name="presentableId" value="LOCAL-00048" />
      <option name="project" value="LOCAL" />
      <updated>1653290385894</updated>
    </task>
    <task id="LOCAL-00049" summary="readme update">
      <created>1653290451547</created>
      <option name="number" value="00049" />
      <option name="presentableId" value="LOCAL-00049" />
      <option name="project" value="LOCAL" />
      <updated>1653290451547</updated>
    </task>
    <task id="LOCAL-00050" summary="v4.3.2_seper">
      <created>1665934356520</created>
      <option name="number" value="00050" />
      <option name="presentableId" value="LOCAL-00050" />
      <option name="project" value="LOCAL" />
      <updated>1665934356520</updated>
    </task>
    <task id="LOCAL-00051" summary="v4.3.3">
      <created>1666097826481</created>
      <option name="number" value="00051" />
      <option name="presentableId" value="LOCAL-00051" />
      <option name="project" value="LOCAL" />
      <updated>1666097826482</updated>
    </task>
    <task id="LOCAL-00052" summary="import csv for thesaurus">
      <created>1666097860653</created>
      <option name="number" value="00052" />
      <option name="presentableId" value="LOCAL-00052" />
      <option name="project" value="LOCAL" />
      <updated>1666097860653</updated>
    </task>
    <task id="LOCAL-00053" summary="fix english automatic form">
      <created>1666792712608</created>
      <option name="number" value="00053" />
      <option name="presentableId" value="LOCAL-00053" />
      <option name="project" value="LOCAL" />
      <updated>1666792712609</updated>
    </task>
    <task id="LOCAL-00054" summary="thesaurus template">
      <created>1666792725048</created>
      <option name="number" value="00054" />
      <option name="presentableId" value="LOCAL-00054" />
      <option name="project" value="LOCAL" />
      <updated>1666792725048</updated>
    </task>
    <task id="LOCAL-00055" summary="fix update tablewidget relationships for EM">
      <created>1666792759973</created>
      <option name="number" value="00055" />
      <option name="presentableId" value="LOCAL-00055" />
      <option name="project" value="LOCAL" />
      <updated>1666792759973</updated>
    </task>
    <task id="LOCAL-00056" summary="fix update tablewidget relationships for EM">
      <created>1666792785971</created>
      <option name="number" value="00056" />
      <option name="presentableId" value="LOCAL-00056" />
      <option name="project" value="LOCAL" />
      <updated>1666792785971</updated>
    </task>
    <task id="LOCAL-00057" summary="v4.3.3">
      <created>1666793003829</created>
      <option name="number" value="00057" />
      <option name="presentableId" value="LOCAL-00057" />
      <option name="project" value="LOCAL" />
      <updated>1666793003829</updated>
    </task>
    <task id="LOCAL-00058" summary="v4.3.3">
      <created>1668772722029</created>
      <option name="number" value="00058" />
      <option name="presentableId" value="LOCAL-00058" />
      <option name="project" value="LOCAL" />
      <updated>1668772722029</updated>
    </task>
    <task id="LOCAL-00059" summary="fix minor bug">
      <created>1668772905034</created>
      <option name="number" value="00059" />
      <option name="presentableId" value="LOCAL-00059" />
      <option name="project" value="LOCAL" />
      <updated>1668772905034</updated>
    </task>
    <task id="LOCAL-00060" summary="update metadata">
      <created>1675189795154</created>
      <option name="number" value="00060" />
      <option name="presentableId" value="LOCAL-00060" />
      <option name="project" value="LOCAL" />
      <updated>1675189795154</updated>
    </task>
    <task id="LOCAL-00061" summary="#525">
      <created>1675594710744</created>
      <option name="number" value="00061" />
      <option name="presentableId" value="LOCAL-00061" />
      <option name="project" value="LOCAL" />
      <updated>1675594710745</updated>
    </task>
    <task id="LOCAL-00062" summary="v4.4.0">
      <created>1675594731401</created>
      <option name="number" value="00062" />
      <option name="presentableId" value="LOCAL-00062" />
      <option name="project" value="LOCAL" />
      <updated>1675594731401</updated>
    </task>
    <task id="LOCAL-00063" summary="fix bug on schedatore fields">
      <created>1676364385259</created>
      <option name="number" value="00063" />
      <option name="presentableId" value="LOCAL-00063" />
      <option name="project" value="LOCAL" />
      <updated>1676364385259</updated>
    </task>
    <task id="LOCAL-00064" summary="v4.4.1">
      <created>1676364467912</created>
      <option name="number" value="00064" />
      <option name="presentableId" value="LOCAL-00064" />
      <option name="project" value="LOCAL" />
      <updated>1676364467912</updated>
    </task>
    <task id="LOCAL-00065" summary="fix bug matrix export without period">
      <created>1676914047586</created>
      <option name="number" value="00065" />
      <option name="presentableId" value="LOCAL-00065" />
      <option name="project" value="LOCAL" />
      <updated>1676914047586</updated>
    </task>
    <task id="LOCAL-00066" summary="v4.4.2">
      <created>1676914115542</created>
      <option name="number" value="00066" />
      <option name="presentableId" value="LOCAL-00066" />
      <option name="project" value="LOCAL" />
      <updated>1676914115542</updated>
    </task>
    <task id="LOCAL-00067" summary="v4.4.3">
      <created>1679660836831</created>
      <option name="number" value="00067" />
      <option name="presentableId" value="LOCAL-00067" />
      <option name="project" value="LOCAL" />
      <updated>1679660836832</updated>
    </task>
    <task id="LOCAL-00068" summary="v4.4.3">
      <created>1679660896243</created>
      <option name="number" value="00068" />
      <option name="presentableId" value="LOCAL-00068" />
      <option name="project" value="LOCAL" />
      <updated>1679660896243</updated>
    </task>
    <task id="LOCAL-00069" summary="fixed update reverese rapport">
      <created>1679661991338</created>
      <option name="number" value="00069" />
      <option name="presentableId" value="LOCAL-00069" />
      <option name="project" value="LOCAL" />
      <updated>1679661991338</updated>
    </task>
    <task id="LOCAL-00070" summary="fixed update reverese rapport">
      <created>1679662089681</created>
      <option name="number" value="00070" />
      <option name="presentableId" value="LOCAL-00070" />
      <option name="project" value="LOCAL" />
      <updated>1679662089681</updated>
    </task>
    <option name="localTasksCounter" value="229" />
    <option name="createChangelist" value="false" />
    <servers>
      <GitHub url="https://github.com">
        <option name="repoAuthor" value="enzococca" />
        <option name="repoName" value="HFF" />
      </GitHub>
      <GitHub url="https://github.com">
        <option name="repoAuthor" value="pyarchinit" />
        <option name="repoName" value="pyarchinit" />
      </GitHub>
    </servers>
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="OPEN_GENERIC_TABS">
      <map>
        <entry key="4539992f-5cb8-4d2e-afc9-af252a561edb" value="TOOL_WINDOW" />
      </map>
    </option>
    <option name="TAB_STATES">
      <map>
        <entry key="4539992f-5cb8-4d2e-afc9-af252a561edb">
          <value>
            <State />
          </value>
        </entry>
        <entry key="MAIN">
          <value>
            <State>
              <option name="FILTERS">
                <map>
                  <entry key="branch">
                    <value>
                      <list>
                        <option value="origin/dev28052025" />
                      </list>
                    </value>
                  </entry>
                </map>
              </option>
            </State>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
    <ignored-roots>
      <path value="$PROJECT_DIR$/ext-libs/totalopenstation-0.5.2-py3.9.egg/totalopenstation_" />
    </ignored-roots>
    <MESSAGE value="- Add initial implementation of US_USM.py.backup with GUI components, language selection, and report generation dependencies&#10;- Add UI sections for language selection, table filtering, and data validation with corresponding backend logic for retrieving and validating excavation data.&#10;- Add pottery data retrieval with filtering, implement checkable combo box for table selection, and create a styled report preview dialog with terminal output and clipboard/save functionality.&#10;- Implement mouse click handling on text edit to open local or external URLs, add logging with color-coded messages, and generate Word reports with TOC and headers.&#10;- Add HTML-to-Word conversion with heading, image, table, and markdown formatting support&#10;- Add support for bold, italic, images with captions, and HTML table conversion to Word document export&#10;- Add support for bolded table headers, image processing with thumbnail replacement and resizing, clipboard copy functionality, and vector database creation for RAG-based data retrieval.&#10;- Add prompt formatting, language-specific instructions, token estimation, and validation methods for archaeological data&#10;- Add image and markdown processing functions to format archaeological content for widget display in HTML.&#10;- Add HTML conversion logic for structured report formatting including headings, lists, tables, and images&#10;- Implement robust data conversion and validation logic with detailed logging and error handling for archaeological analysis steps.&#10;- Refactor report generation to dynamically summarize available data and conditionally retrieve and organize images by section and entity type.&#10;- Add support for pottery summaries, image grouping by entity type, and RAG-based processing for large datasets&#10;- Add RAG-based analysis with support for image-specific questions and integrated report generation per data section.&#10;- Add RAG-based fallback for token limit errors and improve error handling during section processing.&#10;- Add RAG-based error recovery with contextual image inclusion and post-processing to enhance report generation robustness and clarity.&#10;- Add methods to clean text and generate multilingual prompts and tables for materials, pottery, tombs, periodization, and structures data.&#10;- Add markdown table formatter, progress dialog class, and localized initialization for US form&#10;- Add new field mappings for Italian and German localization to support Archeo 3.0 and ICCD alignment.&#10;- Add German and English to Italian field name mappings for archaeological data conversion to support multilingual input normalization.&#10;- Add Italian and German translations for new USM-related fields and update SORT_ITEMS accordingly.&#10;- Add support for German localization of field labels and align them with existing English and Italian mappings for USM and archaeological data fields.&#10;- Add extensive new data fields, initialize GUI components, set up caching and signal connections, and implement natural sorting function for alphanumeric values.&#10;- Connect GUI elements to their respective event handlers and implement get_images_for_entities to retrieve media thumbnails for various entity types with detailed logging.&#10;- Add methods for vector database creation, RAG chain construction, and token-aware data chunking to support retrieval-augmented generation.&#10;- Add data analysis and validation methods for stratigraphy, materials, and pottery with token-aware chunking logic and truncation warnings.&#10;- Add functions to format and generate tables for archaeological data including materials, pottery, US, tombs, structures, and periodization for report generation.&#10;- Add analysis and validation tool generation methods and data processing functions for archaeological site, stratigraphy, materials, and pottery tables.&#10;- Add data processing functions for various archaeological tables with filtering by year or range and site context.&#10;- Add support for 'periodizzazione' and 'struttura' tables with structured extraction and enhance prompt generation for detailed archaeological reports&#10;- Add data extraction, filtering, and validation logic for multiple tables in report generation process.&#10;- Add missing data validation and report generation workflow with OpenAI agent integration and structured formatting.&#10;- Add report generation workflow with user prompts, section parsing, fallback content, and output to Word template&#10;- Add parsing and processing logic for report sections with fallback content for missing data and support for subsections in DOCX generation.&#10;- Improve heading parsing by supporting both hash-prefixed and underline styles and enhance image handling with validation and fallback paths.&#10;- Add logic to populate Word document with metadata, structured sections, formatting, and tables from report data.&#10;- Add method to convert markdown-formatted tables to Word tables with styling and error handling.&#10;- Add support for detecting and cleaning markdown-style headings and placeholders, including fallback handling for missing content with default section text and structured subsection processing.&#10;- Add support for parsing images and markdown tables in subsection content with error handling and formatting options&#10;- Add support for parsing headings, images, and markdown tables in report content and fallback to manual section insertion if placeholders are missing.&#10;- Add formatted tables for pottery, tombs, structures, and periodization to the document with headers and data, and ensure document has meaningful content before saving.&#10;- Improve table styling fallback logic and add robust error handling for applying styles and borders; implement sketchgpt feature for media selection and GPT window launch; add keyboard shortcuts dialog and localized user prompts and warnings.&#10;- Add progress dialog and detailed logging to rapporti update process, and implement area-specific data filtering for enhanced control and error tracking.&#10;- Implement robust update routine for US table entries with error logging, area correction, and UTF-8 validation.&#10;- Add error logging and improve data extraction from GraphML to CSV for archaeological data processing&#10;- Add CSV processing for US table import, deduplicate entries, and enhance relationship validation with inverse mapping for archaeological units&#10;- Add logic to handle and insert rapporti rows based on existing matches and validate inverse relationships in reports&#10;- Add automatic inverse relationship creation with validation and UI update for unit relationships, enhancing consistency and user feedback.&#10;- Add methods for refreshing data, inserting reference records, and filtering the 'Unità Stratigrafiche' table with support for both SQLite and PostgreSQL backends.&#10;- Add database query and UI update logic for filtering and saving 'Unità Stratigrafiche' records with multi-language support and error handling.&#10;- Add methods to populate period, phase, and dating comboboxes from the 'Periodizzazione' table with error handling and UI updates.&#10;- Add methods to update and display 'Dating' fields based on periodization data and enhance document handling and save logic&#10;- Add US navigation and selection logic with progress updates and conditional save prompts.&#10;- Add US record search and selection functionality with localized messages and UI state handling&#10;- Add database connection logic with multilingual error handling and UI initialization for empty and populated states.&#10;- Add multilingual error messages and customize GUI components based on user locale and context.&#10;- Add ComboBox delegates for multiple USM table columns using localized thesaurus data for documentation types, colors, inclusions, textures, and components.&#10;- Add support for drag-and-drop media upload with validation, map preview loading, and media database insertion including thumbnails and associations.&#10;- Add methods to associate media with entities, generate US records, and process media files with type-specific handling and validation&#10;- Add support for 3D model file types and improve media import with thumbnail generation, resize handling, tag assignment, and localized user messages.&#10;- Add multilingual support and logic for selecting and removing tags from US-related images with confirmation dialogs.&#10;- Add pagination, search filtering, and UI enhancements for displaying and tagging untagged images in QListWidget.&#10;- Implement image caching with LRU eviction and enhance QListWidget population with US entity details and pagination.&#10;- Implement navigation and filtering for paginated image lists and enhance item tagging with media-US association and thumbnail preview updates.&#10;- Add 3D model loading, thumbnail generation, and interactive viewer with measurement and debug tools&#10;- Add distance measurement, coordinate verification, and image export functions with debug messages and label rendering in 3D plot.&#10;- Add bounding box measurement toggle with labeled edges and implement 3D model thumbnail generation and media handling enhancements.&#10;- Add error handling for database queries and implement dynamic population of UI combo boxes based on query results with localization support.&#10;- Populate multiple combo boxes with sorted, unique values from thesaurus queries based on specific 'tipologia_sigla' codes.&#10;- Populate multiple combo boxes with sorted unique values from the thesaurus based on specific 'tipologia_sigla' filters for improved data entry consistency.&#10;- Populate multiple combo boxes with distinct, sorted values from the thesaurus based on specific 'tipologia_sigla' codes to support laterizi and litici material attributes.&#10;- Populate multiple comboBoxes with sorted, unique values from database queries based on different 'tipologia_sigla' codes for construction-related attributes.&#10;- Add site connection checks, localized user messages, and media list generation for photos and PDFs with error handling and configuration prompts.&#10;- Add support for additional archaeological USM data fields including dimensions and elevations with language localization for GIS-based descriptions.&#10;- Add extensive field mappings for archaeological data export including USM properties, ICCD alignment, and GIS-derived values&#10;- Add support for exporting US and photo metadata to PDF with multilingual options and progress tracking&#10;- Add German export options, file path setters, and GraphML conversion with UI integration and error handling&#10;- Add support for SQLite data export with recursive query handling for SU context and relationship mapping.&#10;- Add logic to parse and clean stratigraphic relationships, generate an Excel sheet with formatted columns, and display Harris Matrix image with matplotlib.&#10;- Add logic for interactive matrix generation and stratigraphic relationship validation with multilingual support&#10;- Implementa la generazione e salvataggio di report su errori di ordinamento con messaggi localizzati e gestione degli aggiornamenti al database.&#10;- Add UI handlers for GIS and preview toggle buttons, implement feature sorting and selection with multilingual support and error handling.&#10;- Add new record and save functionalities with UI updates and multilingual support for validation messages&#10;- Add interactive API key management and GPT-based error explanation with multilingual success messages for stratigraphic checks&#10;- Add input validation for required text fields and numeric float fields with warning messages for invalid or empty entries.&#10;- Add numeric and length validation with localized warnings for multiple input fields in the form.&#10;- Add input validation for multiple fields with localized error messages and remove strict numeric check on US field to allow alphanumeric values.&#10;- Add input validation for field length and logical consistency in period and phase selection, and implement automatic form check reporting per site.&#10;- Add stratigraphic relationship consistency check with multilingual logging and reciprocal validation&#10;- Add validation for reciprocal stratigraphic relationships and generate multilingual error reports when inconsistencies are found.&#10;- Comment out detailed relationship verification logic to simplify debugging and improve code maintainability.&#10;- Add function to validate consistency between stratigraphic definitions and relationships across different languages.&#10;- Add stratigraphic relationship report generation with multilingual support and logical consistency checks.&#10;- Add stratigraphic relationship validation logic with multilingual report generation for excavation records.&#10;- Add detailed temporal consistency checks for relationship types and generate corresponding multilingual report messages.&#10;- Add support for extracting and saving additional USM layer attributes and related table data from UI inputs with proper type handling and null checks.&#10;- Add new fields to data export for Archeo 3.0 and align with ICCD standards, including detailed USM and LAT attributes&#10;- Add data insertion logic with input validation, error handling, and UI row management for multiple table widgets&#10;- Refactor record navigation and implement site-based filtering in view_all to improve database interaction and user experience.&#10;- Add record navigation and multilingual record deletion confirmation with database cleanup and UI updates&#10;- Add methods for deleting filtered records, resetting search filters, showing selected GIS layers, and updating excavation period codes with multilingual support.&#10;- Add switchable search mode with UI field toggling and multilingual feedback for improved user experience and error handling.&#10;- Enable form fields and table widgets during search and implement search parameter collection with input validation.&#10;- Add support for capturing and saving additional archaeological record fields including dimensions, catalog numbers, references, and excavation details.&#10;- Add support for additional form fields in search dictionary and handle empty searches with warning message.&#10;- Add support for selecting 'AND' or 'OR' logical operator in search queries with multilingual result messages and GIS layer updates.&#10;- Add record management and error handling methods for data update, loading, and table manipulation with encoding error logging and multilingual support.&#10;- Add method to reset all UI fields and tables to initial empty state, including new USM attributes and conditional date logic&#10;- Clear all input fields and reset UI components in the USM form to ensure a clean state for new data entry.&#10;- Clear all input fields and reset relevant UI tables to initial state when creating a new record.&#10;- Clear all form fields and populate them with data from DATA_LIST using the fill_fields method.&#10;- Populate UI fields with additional excavation record attributes to support Archeo 3.0 and ICCD alignment.&#10;- Populate UI fields with corresponding values from DATA_LIST, handling empty or missing numerical fields by setting them to empty strings.&#10;- Add TM field synchronization from TMA table and improve UI data restoration and form field handling with error logging.&#10;- Handle optional numeric input fields by setting them to None if left empty and update DATA_LIST_REC_TEMP to include new USM attributes and catalog fields for Archeo 3.0 and ICCD alignment.&#10;- Add comprehensive data extraction and comparison methods for form fields to support record validation and synchronization.&#10;- Add utility methods for tab enabling, directory access, data type casting, and CSV import into SQLite with platform-specific file handling&#10;- Add support for importing and filtering additional USM-related fields, including UI updates and error handling.&#10;- Add SQLPromptDialog UI for text-to-SQL conversion with mode selection, prompt history, and execution options.&#10;- Add support for Text2SQL API key management, model download, and SQL generation via API or local model with spatial view detection&#10;- Add support for identifying geometry columns and handling spatial queries with result validation and display in table format.&#10;- Add functionality to display SQL query results and geometry info in a table with support for SpatiaLite views and geometry validation&#10;- Add result table population, Excel export, graph plotting, and geometry alias detection functionalities&#10;- Implement feature selection and zoom based on table row selection by matching row data with layer fields and applying appropriate expressions.&#10;- Implement geometry type inference from SQL and add method to create spatial views in PostGIS with geometry registration.&#10;- Add support for creating and loading spatial layers from PostgreSQL and SpatiaLite views with dynamic geometry column selection and connection parameter parsing.&#10;- Add helper methods for detecting geometry columns and enhance spatial view creation for PostGIS and Sp&#10;- Add GraphWindow" />
    <MESSAGE value="- Add initial implementation of US_USM.py.backup with GUI components, language selection, and report generation dependencies&#10;- Add UI sections for language selection, table filtering, and data validation with corresponding backend logic for retrieving and validating excavation data.&#10;- Add pottery data retrieval with filtering, implement checkable combo box for table selection, and create a styled report preview dialog with terminal output and clipboard/save functionality.&#10;- Implement mouse click handling on text edit to open local or external URLs, add logging with color-coded messages, and generate Word reports with TOC and headers.&#10;- Add HTML-to-Word conversion with heading, image, table, and markdown formatting support&#10;- Add support for bold, italic, images with captions, and HTML table conversion to Word document export&#10;- Add support for bolded table headers, image processing with thumbnail replacement and resizing, clipboard copy functionality, and vector database creation for RAG-based data retrieval.&#10;- Add prompt formatting, language-specific instructions, token estimation, and validation methods for archaeological data&#10;- Add image and markdown processing functions to format archaeological content for widget display in HTML.&#10;- Add HTML conversion logic for structured report formatting including headings, lists, tables, and images&#10;- Implement robust data conversion and validation logic with detailed logging and error handling for archaeological analysis steps.&#10;- Refactor report generation to dynamically summarize available data and conditionally retrieve and organize images by section and entity type.&#10;- Add support for pottery summaries, image grouping by entity type, and RAG-based processing for large datasets&#10;- Add RAG-based analysis with support for image-specific questions and integrated report generation per data section.&#10;- Add RAG-based fallback for token limit errors and improve error handling during section processing.&#10;- Add RAG-based error recovery with contextual image inclusion and post-processing to enhance report generation robustness and clarity.&#10;- Add methods to clean text and generate multilingual prompts and tables for materials, pottery, tombs, periodization, and structures data.&#10;- Add markdown table formatter, progress dialog class, and localized initialization for US form&#10;- Add new field mappings for Italian and German localization to support Archeo 3.0 and ICCD alignment.&#10;- Add German and English to Italian field name mappings for archaeological data conversion to support multilingual input normalization.&#10;- Add Italian and German translations for new USM-related fields and update SORT_ITEMS accordingly.&#10;- Add support for German localization of field labels and align them with existing English and Italian mappings for USM and archaeological data fields.&#10;- Add extensive new data fields, initialize GUI components, set up caching and signal connections, and implement natural sorting function for alphanumeric values.&#10;- Connect GUI elements to their respective event handlers and implement get_images_for_entities to retrieve media thumbnails for various entity types with detailed logging.&#10;- Add methods for vector database creation, RAG chain construction, and token-aware data chunking to support retrieval-augmented generation.&#10;- Add data analysis and validation methods for stratigraphy, materials, and pottery with token-aware chunking logic and truncation warnings.&#10;- Add functions to format and generate tables for archaeological data including materials, pottery, US, tombs, structures, and periodization for report generation.&#10;- Add analysis and validation tool generation methods and data processing functions for archaeological site, stratigraphy, materials, and pottery tables.&#10;- Add data processing functions for various archaeological tables with filtering by year or range and site context.&#10;- Add support for 'periodizzazione' and 'struttura' tables with structured extraction and enhance prompt generation for detailed archaeological reports&#10;- Add data extraction, filtering, and validation logic for multiple tables in report generation process.&#10;- Add missing data validation and report generation workflow with OpenAI agent integration and structured formatting.&#10;- Add report generation workflow with user prompts, section parsing, fallback content, and output to Word template&#10;- Add parsing and processing logic for report sections with fallback content for missing data and support for subsections in DOCX generation.&#10;- Improve heading parsing by supporting both hash-prefixed and underline styles and enhance image handling with validation and fallback paths.&#10;- Add logic to populate Word document with metadata, structured sections, formatting, and tables from report data.&#10;- Add method to convert markdown-formatted tables to Word tables with styling and error handling.&#10;- Add support for detecting and cleaning markdown-style headings and placeholders, including fallback handling for missing content with default section text and structured subsection processing.&#10;- Add support for parsing images and markdown tables in subsection content with error handling and formatting options&#10;- Add support for parsing headings, images, and markdown tables in report content and fallback to manual section insertion if placeholders are missing.&#10;- Add formatted tables for pottery, tombs, structures, and periodization to the document with headers and data, and ensure document has meaningful content before saving.&#10;- Improve table styling fallback logic and add robust error handling for applying styles and borders; implement sketchgpt feature for media selection and GPT window launch; add keyboard shortcuts dialog and localized user prompts and warnings.&#10;- Add progress dialog and detailed logging to rapporti update process, and implement area-specific data filtering for enhanced control and error tracking.&#10;- Implement robust update routine for US table entries with error logging, area correction, and UTF-8 validation.&#10;- Add error logging and improve data extraction from GraphML to CSV for archaeological data processing&#10;- Add CSV processing for US table import, deduplicate entries, and enhance relationship validation with inverse mapping for archaeological units&#10;- Add logic to handle and insert rapporti rows based on existing matches and validate inverse relationships in reports&#10;- Add automatic inverse relationship creation with validation and UI update for unit relationships, enhancing consistency and user feedback.&#10;- Add methods for refreshing data, inserting reference records, and filtering the 'Unità Stratigrafiche' table with support for both SQLite and PostgreSQL backends.&#10;- Add database query and UI update logic for filtering and saving 'Unità Stratigrafiche' records with multi-language support and error handling.&#10;- Add methods to populate period, phase, and dating comboboxes from the 'Periodizzazione' table with error handling and UI updates.&#10;- Add methods to update and display 'Dating' fields based on periodization data and enhance document handling and save logic&#10;- Add US navigation and selection logic with progress updates and conditional save prompts.&#10;- Add US record search and selection functionality with localized messages and UI state handling&#10;- Add database connection logic with multilingual error handling and UI initialization for empty and populated states.&#10;- Add multilingual error messages and customize GUI components based on user locale and context.&#10;- Add ComboBox delegates for multiple USM table columns using localized thesaurus data for documentation types, colors, inclusions, textures, and components.&#10;- Add support for drag-and-drop media upload with validation, map preview loading, and media database insertion including thumbnails and associations.&#10;- Add methods to associate media with entities, generate US records, and process media files with type-specific handling and validation&#10;- Add support for 3D model file types and improve media import with thumbnail generation, resize handling, tag assignment, and localized user messages.&#10;- Add multilingual support and logic for selecting and removing tags from US-related images with confirmation dialogs.&#10;- Add pagination, search filtering, and UI enhancements for displaying and tagging untagged images in QListWidget.&#10;- Implement image caching with LRU eviction and enhance QListWidget population with US entity details and pagination.&#10;- Implement navigation and filtering for paginated image lists and enhance item tagging with media-US association and thumbnail preview updates.&#10;- Add 3D model loading, thumbnail generation, and interactive viewer with measurement and debug tools&#10;- Add distance measurement, coordinate verification, and image export functions with debug messages and label rendering in 3D plot.&#10;- Add bounding box measurement toggle with labeled edges and implement 3D model thumbnail generation and media handling enhancements.&#10;- Add error handling for database queries and implement dynamic population of UI combo boxes based on query results with localization support.&#10;- Populate multiple combo boxes with sorted, unique values from thesaurus queries based on specific 'tipologia_sigla' codes.&#10;- Populate multiple combo boxes with sorted unique values from the thesaurus based on specific 'tipologia_sigla' filters for improved data entry consistency.&#10;- Populate multiple combo boxes with distinct, sorted values from the thesaurus based on specific 'tipologia_sigla' codes to support laterizi and litici material attributes.&#10;- Populate multiple comboBoxes with sorted, unique values from database queries based on different 'tipologia_sigla' codes for construction-related attributes.&#10;- Add site connection checks, localized user messages, and media list generation for photos and PDFs with error handling and configuration prompts.&#10;- Add support for additional archaeological USM data fields including dimensions and elevations with language localization for GIS-based descriptions.&#10;- Add extensive field mappings for archaeological data export including USM properties, ICCD alignment, and GIS-derived values&#10;- Add support for exporting US and photo metadata to PDF with multilingual options and progress tracking&#10;- Add German export options, file path setters, and GraphML conversion with UI integration and error handling&#10;- Add support for SQLite data export with recursive query handling for SU context and relationship mapping.&#10;- Add logic to parse and clean stratigraphic relationships, generate an Excel sheet with formatted columns, and display Harris Matrix image with matplotlib.&#10;- Add logic for interactive matrix generation and stratigraphic relationship validation with multilingual support&#10;- Implementa la generazione e salvataggio di report su errori di ordinamento con messaggi localizzati e gestione degli aggiornamenti al database.&#10;- Add UI handlers for GIS and preview toggle buttons, implement feature sorting and selection with multilingual support and error handling.&#10;- Add new record and save functionalities with UI updates and multilingual support for validation messages&#10;- Add interactive API key management and GPT-based error explanation with multilingual success messages for stratigraphic checks&#10;- Add input validation for required text fields and numeric float fields with warning messages for invalid or empty entries.&#10;- Add numeric and length validation with localized warnings for multiple input fields in the form.&#10;- Add input validation for multiple fields with localized error messages and remove strict numeric check on US field to allow alphanumeric values.&#10;- Add input validation for field length and logical consistency in period and phase selection, and implement automatic form check reporting per site.&#10;- Add stratigraphic relationship consistency check with multilingual logging and reciprocal validation&#10;- Add validation for reciprocal stratigraphic relationships and generate multilingual error reports when inconsistencies are found.&#10;- Comment out detailed relationship verification logic to simplify debugging and improve code maintainability.&#10;- Add function to validate consistency between stratigraphic definitions and relationships across different languages.&#10;- Add stratigraphic relationship report generation with multilingual support and logical consistency checks.&#10;- Add stratigraphic relationship validation logic with multilingual report generation for excavation records.&#10;- Add detailed temporal consistency checks for relationship types and generate corresponding multilingual report messages.&#10;- Add support for extracting and saving additional USM layer attributes and related table data from UI inputs with proper type handling and null checks.&#10;- Add new fields to data export for Archeo 3.0 and align with ICCD standards, including detailed USM and LAT attributes&#10;- Add data insertion logic with input validation, error handling, and UI row management for multiple table widgets&#10;- Refactor record navigation and implement site-based filtering in view_all to improve database interaction and user experience.&#10;- Add record navigation and multilingual record deletion confirmation with database cleanup and UI updates&#10;- Add methods for deleting filtered records, resetting search filters, showing selected GIS layers, and updating excavation period codes with multilingual support.&#10;- Add switchable search mode with UI field toggling and multilingual feedback for improved user experience and error handling.&#10;- Enable form fields and table widgets during search and implement search parameter collection with input validation.&#10;- Add support for capturing and saving additional archaeological record fields including dimensions, catalog numbers, references, and excavation details.&#10;- Add support for additional form fields in search dictionary and handle empty searches with warning message.&#10;- Add support for selecting 'AND' or 'OR' logical operator in search queries with multilingual result messages and GIS layer updates.&#10;- Add record management and error handling methods for data update, loading, and table manipulation with encoding error logging and multilingual support.&#10;- Add method to reset all UI fields and tables to initial empty state, including new USM attributes and conditional date logic&#10;- Clear all input fields and reset UI components in the USM form to ensure a clean state for new data entry.&#10;- Clear all input fields and reset relevant UI tables to initial state when creating a new record.&#10;- Clear all form fields and populate them with data from DATA_LIST using the fill_fields method.&#10;- Populate UI fields with additional excavation record attributes to support Archeo 3.0 and ICCD alignment.&#10;- Populate UI fields with corresponding values from DATA_LIST, handling empty or missing numerical fields by setting them to empty strings.&#10;- Add TM field synchronization from TMA table and improve UI data restoration and form field handling with error logging.&#10;- Handle optional numeric input fields by setting them to None if left empty and update DATA_LIST_REC_TEMP to include new USM attributes and catalog fields for Archeo 3.0 and ICCD alignment.&#10;- Add comprehensive data extraction and comparison methods for form fields to support record validation and synchronization.&#10;- Add utility methods for tab enabling, directory access, data type casting, and CSV import into SQLite with platform-specific file handling&#10;- Add support for importing and filtering additional USM-related fields, including UI updates and error handling.&#10;- Add SQLPromptDialog UI for text-to-SQL conversion with mode selection, prompt history, and execution options.&#10;- Add support for Text2SQL API key management, model download, and SQL generation via API or local model with spatial view detection&#10;- Add support for identifying geometry columns and handling spatial queries with result validation and display in table format.&#10;- Add functionality to display SQL query results and geometry info in a table with support for SpatiaLite views and geometry validation&#10;- Add result table population, Excel export, graph plotting, and geometry alias detection functionalities&#10;- Implement feature selection and zoom based on table row selection by matching row data with layer fields and applying appropriate expressions.&#10;- Implement geometry type inference from SQL and add method to create spatial views in PostGIS with geometry registration.&#10;- Add support for creating and loading spatial layers from PostgreSQL and SpatiaLite views with dynamic geometry column selection and connection parameter parsing.&#10;- Add helper methods for detecting geometry columns and enhance spatial view creation for PostGIS and Sp&#10;- Add GraphWindow for" />
    <MESSAGE value="- Add initial implementation of US_USM.py.backup with GUI components, language selection, and report generation dependencies&#10;- Add UI sections for language selection, table filtering, and data validation with corresponding backend logic for retrieving and validating excavation data.&#10;- Add pottery data retrieval with filtering, implement checkable combo box for table selection, and create a styled report preview dialog with terminal output and clipboard/save functionality.&#10;- Implement mouse click handling on text edit to open local or external URLs, add logging with color-coded messages, and generate Word reports with TOC and headers.&#10;- Add HTML-to-Word conversion with heading, image, table, and markdown formatting support&#10;- Add support for bold, italic, images with captions, and HTML table conversion to Word document export&#10;- Add support for bolded table headers, image processing with thumbnail replacement and resizing, clipboard copy functionality, and vector database creation for RAG-based data retrieval.&#10;- Add prompt formatting, language-specific instructions, token estimation, and validation methods for archaeological data&#10;- Add image and markdown processing functions to format archaeological content for widget display in HTML.&#10;- Add HTML conversion logic for structured report formatting including headings, lists, tables, and images&#10;- Implement robust data conversion and validation logic with detailed logging and error handling for archaeological analysis steps.&#10;- Refactor report generation to dynamically summarize available data and conditionally retrieve and organize images by section and entity type.&#10;- Add support for pottery summaries, image grouping by entity type, and RAG-based processing for large datasets&#10;- Add RAG-based analysis with support for image-specific questions and integrated report generation per data section.&#10;- Add RAG-based fallback for token limit errors and improve error handling during section processing.&#10;- Add RAG-based error recovery with contextual image inclusion and post-processing to enhance report generation robustness and clarity.&#10;- Add methods to clean text and generate multilingual prompts and tables for materials, pottery, tombs, periodization, and structures data.&#10;- Add markdown table formatter, progress dialog class, and localized initialization for US form&#10;- Add new field mappings for Italian and German localization to support Archeo 3.0 and ICCD alignment.&#10;- Add German and English to Italian field name mappings for archaeological data conversion to support multilingual input normalization.&#10;- Add Italian and German translations for new USM-related fields and update SORT_ITEMS accordingly.&#10;- Add support for German localization of field labels and align them with existing English and Italian mappings for USM and archaeological data fields.&#10;- Add extensive new data fields, initialize GUI components, set up caching and signal connections, and implement natural sorting function for alphanumeric values.&#10;- Connect GUI elements to their respective event handlers and implement get_images_for_entities to retrieve media thumbnails for various entity types with detailed logging.&#10;- Add methods for vector database creation, RAG chain construction, and token-aware data chunking to support retrieval-augmented generation.&#10;- Add data analysis and validation methods for stratigraphy, materials, and pottery with token-aware chunking logic and truncation warnings.&#10;- Add functions to format and generate tables for archaeological data including materials, pottery, US, tombs, structures, and periodization for report generation.&#10;- Add analysis and validation tool generation methods and data processing functions for archaeological site, stratigraphy, materials, and pottery tables.&#10;- Add data processing functions for various archaeological tables with filtering by year or range and site context.&#10;- Add support for 'periodizzazione' and 'struttura' tables with structured extraction and enhance prompt generation for detailed archaeological reports&#10;- Add data extraction, filtering, and validation logic for multiple tables in report generation process.&#10;- Add missing data validation and report generation workflow with OpenAI agent integration and structured formatting.&#10;- Add report generation workflow with user prompts, section parsing, fallback content, and output to Word template&#10;- Add parsing and processing logic for report sections with fallback content for missing data and support for subsections in DOCX generation.&#10;- Improve heading parsing by supporting both hash-prefixed and underline styles and enhance image handling with validation and fallback paths.&#10;- Add logic to populate Word document with metadata, structured sections, formatting, and tables from report data.&#10;- Add method to convert markdown-formatted tables to Word tables with styling and error handling.&#10;- Add support for detecting and cleaning markdown-style headings and placeholders, including fallback handling for missing content with default section text and structured subsection processing.&#10;- Add support for parsing images and markdown tables in subsection content with error handling and formatting options&#10;- Add support for parsing headings, images, and markdown tables in report content and fallback to manual section insertion if placeholders are missing.&#10;- Add formatted tables for pottery, tombs, structures, and periodization to the document with headers and data, and ensure document has meaningful content before saving.&#10;- Improve table styling fallback logic and add robust error handling for applying styles and borders; implement sketchgpt feature for media selection and GPT window launch; add keyboard shortcuts dialog and localized user prompts and warnings.&#10;- Add progress dialog and detailed logging to rapporti update process, and implement area-specific data filtering for enhanced control and error tracking.&#10;- Implement robust update routine for US table entries with error logging, area correction, and UTF-8 validation.&#10;- Add error logging and improve data extraction from GraphML to CSV for archaeological data processing&#10;- Add CSV processing for US table import, deduplicate entries, and enhance relationship validation with inverse mapping for archaeological units&#10;- Add logic to handle and insert rapporti rows based on existing matches and validate inverse relationships in reports&#10;- Add automatic inverse relationship creation with validation and UI update for unit relationships, enhancing consistency and user feedback.&#10;- Add methods for refreshing data, inserting reference records, and filtering the 'Unità Stratigrafiche' table with support for both SQLite and PostgreSQL backends.&#10;- Add database query and UI update logic for filtering and saving 'Unità Stratigrafiche' records with multi-language support and error handling.&#10;- Add methods to populate period, phase, and dating comboboxes from the 'Periodizzazione' table with error handling and UI updates.&#10;- Add methods to update and display 'Dating' fields based on periodization data and enhance document handling and save logic&#10;- Add US navigation and selection logic with progress updates and conditional save prompts.&#10;- Add US record search and selection functionality with localized messages and UI state handling&#10;- Add database connection logic with multilingual error handling and UI initialization for empty and populated states.&#10;- Add multilingual error messages and customize GUI components based on user locale and context.&#10;- Add ComboBox delegates for multiple USM table columns using localized thesaurus data for documentation types, colors, inclusions, textures, and components.&#10;- Add support for drag-and-drop media upload with validation, map preview loading, and media database insertion including thumbnails and associations.&#10;- Add methods to associate media with entities, generate US records, and process media files with type-specific handling and validation&#10;- Add support for 3D model file types and improve media import with thumbnail generation, resize handling, tag assignment, and localized user messages.&#10;- Add multilingual support and logic for selecting and removing tags from US-related images with confirmation dialogs.&#10;- Add pagination, search filtering, and UI enhancements for displaying and tagging untagged images in QListWidget.&#10;- Implement image caching with LRU eviction and enhance QListWidget population with US entity details and pagination.&#10;- Implement navigation and filtering for paginated image lists and enhance item tagging with media-US association and thumbnail preview updates.&#10;- Add 3D model loading, thumbnail generation, and interactive viewer with measurement and debug tools&#10;- Add distance measurement, coordinate verification, and image export functions with debug messages and label rendering in 3D plot.&#10;- Add bounding box measurement toggle with labeled edges and implement 3D model thumbnail generation and media handling enhancements.&#10;- Add error handling for database queries and implement dynamic population of UI combo boxes based on query results with localization support.&#10;- Populate multiple combo boxes with sorted, unique values from thesaurus queries based on specific 'tipologia_sigla' codes.&#10;- Populate multiple combo boxes with sorted unique values from the thesaurus based on specific 'tipologia_sigla' filters for improved data entry consistency.&#10;- Populate multiple combo boxes with distinct, sorted values from the thesaurus based on specific 'tipologia_sigla' codes to support laterizi and litici material attributes.&#10;- Populate multiple comboBoxes with sorted, unique values from database queries based on different 'tipologia_sigla' codes for construction-related attributes.&#10;- Add site connection checks, localized user messages, and media list generation for photos and PDFs with error handling and configuration prompts.&#10;- Add support for additional archaeological USM data fields including dimensions and elevations with language localization for GIS-based descriptions.&#10;- Add extensive field mappings for archaeological data export including USM properties, ICCD alignment, and GIS-derived values&#10;- Add support for exporting US and photo metadata to PDF with multilingual options and progress tracking&#10;- Add German export options, file path setters, and GraphML conversion with UI integration and error handling&#10;- Add support for SQLite data export with recursive query handling for SU context and relationship mapping.&#10;- Add logic to parse and clean stratigraphic relationships, generate an Excel sheet with formatted columns, and display Harris Matrix image with matplotlib.&#10;- Add logic for interactive matrix generation and stratigraphic relationship validation with multilingual support&#10;- Implementa la generazione e salvataggio di report su errori di ordinamento con messaggi localizzati e gestione degli aggiornamenti al database.&#10;- Add UI handlers for GIS and preview toggle buttons, implement feature sorting and selection with multilingual support and error handling.&#10;- Add new record and save functionalities with UI updates and multilingual support for validation messages&#10;- Add interactive API key management and GPT-based error explanation with multilingual success messages for stratigraphic checks&#10;- Add input validation for required text fields and numeric float fields with warning messages for invalid or empty entries.&#10;- Add numeric and length validation with localized warnings for multiple input fields in the form.&#10;- Add input validation for multiple fields with localized error messages and remove strict numeric check on US field to allow alphanumeric values.&#10;- Add input validation for field length and logical consistency in period and phase selection, and implement automatic form check reporting per site.&#10;- Add stratigraphic relationship consistency check with multilingual logging and reciprocal validation&#10;- Add validation for reciprocal stratigraphic relationships and generate multilingual error reports when inconsistencies are found.&#10;- Comment out detailed relationship verification logic to simplify debugging and improve code maintainability.&#10;- Add function to validate consistency between stratigraphic definitions and relationships across different languages.&#10;- Add stratigraphic relationship report generation with multilingual support and logical consistency checks.&#10;- Add stratigraphic relationship validation logic with multilingual report generation for excavation records.&#10;- Add detailed temporal consistency checks for relationship types and generate corresponding multilingual report messages.&#10;- Add support for extracting and saving additional USM layer attributes and related table data from UI inputs with proper type handling and null checks.&#10;- Add new fields to data export for Archeo 3.0 and align with ICCD standards, including detailed USM and LAT attributes&#10;- Add data insertion logic with input validation, error handling, and UI row management for multiple table widgets&#10;- Refactor record navigation and implement site-based filtering in view_all to improve database interaction and user experience.&#10;- Add record navigation and multilingual record deletion confirmation with database cleanup and UI updates&#10;- Add methods for deleting filtered records, resetting search filters, showing selected GIS layers, and updating excavation period codes with multilingual support.&#10;- Add switchable search mode with UI field toggling and multilingual feedback for improved user experience and error handling.&#10;- Enable form fields and table widgets during search and implement search parameter collection with input validation.&#10;- Add support for capturing and saving additional archaeological record fields including dimensions, catalog numbers, references, and excavation details.&#10;- Add support for additional form fields in search dictionary and handle empty searches with warning message.&#10;- Add support for selecting 'AND' or 'OR' logical operator in search queries with multilingual result messages and GIS layer updates.&#10;- Add record management and error handling methods for data update, loading, and table manipulation with encoding error logging and multilingual support.&#10;- Add method to reset all UI fields and tables to initial empty state, including new USM attributes and conditional date logic&#10;- Clear all input fields and reset UI components in the USM form to ensure a clean state for new data entry.&#10;- Clear all input fields and reset relevant UI tables to initial state when creating a new record.&#10;- Clear all form fields and populate them with data from DATA_LIST using the fill_fields method.&#10;- Populate UI fields with additional excavation record attributes to support Archeo 3.0 and ICCD alignment.&#10;- Populate UI fields with corresponding values from DATA_LIST, handling empty or missing numerical fields by setting them to empty strings.&#10;- Add TM field synchronization from TMA table and improve UI data restoration and form field handling with error logging.&#10;- Handle optional numeric input fields by setting them to None if left empty and update DATA_LIST_REC_TEMP to include new USM attributes and catalog fields for Archeo 3.0 and ICCD alignment.&#10;- Add comprehensive data extraction and comparison methods for form fields to support record validation and synchronization.&#10;- Add utility methods for tab enabling, directory access, data type casting, and CSV import into SQLite with platform-specific file handling&#10;- Add support for importing and filtering additional USM-related fields, including UI updates and error handling.&#10;- Add SQLPromptDialog UI for text-to-SQL conversion with mode selection, prompt history, and execution options.&#10;- Add support for Text2SQL API key management, model download, and SQL generation via API or local model with spatial view detection&#10;- Add support for identifying geometry columns and handling spatial queries with result validation and display in table format.&#10;- Add functionality to display SQL query results and geometry info in a table with support for SpatiaLite views and geometry validation&#10;- Add result table population, Excel export, graph plotting, and geometry alias detection functionalities&#10;- Implement feature selection and zoom based on table row selection by matching row data with layer fields and applying appropriate expressions.&#10;- Implement geometry type inference from SQL and add method to create spatial views in PostGIS with geometry registration.&#10;- Add support for creating and loading spatial layers from PostgreSQL and SpatiaLite views with dynamic geometry column selection and connection parameter parsing.&#10;- Add helper methods for detecting geometry columns and enhance spatial view creation for PostGIS and Spatia&#10;- Add GraphWindow for" />
    <MESSAGE value="- Add initial implementation of US_USM.py.backup with GUI components, language selection, and report generation dependencies&#10;- Add UI sections for language selection, table filtering, and data validation with corresponding backend logic for retrieving and validating excavation data.&#10;- Add pottery data retrieval with filtering, implement checkable combo box for table selection, and create a styled report preview dialog with terminal output and clipboard/save functionality.&#10;- Implement mouse click handling on text edit to open local or external URLs, add logging with color-coded messages, and generate Word reports with TOC and headers.&#10;- Add HTML-to-Word conversion with heading, image, table, and markdown formatting support&#10;- Add support for bold, italic, images with captions, and HTML table conversion to Word document export&#10;- Add support for bolded table headers, image processing with thumbnail replacement and resizing, clipboard copy functionality, and vector database creation for RAG-based data retrieval.&#10;- Add prompt formatting, language-specific instructions, token estimation, and validation methods for archaeological data&#10;- Add image and markdown processing functions to format archaeological content for widget display in HTML.&#10;- Add HTML conversion logic for structured report formatting including headings, lists, tables, and images&#10;- Implement robust data conversion and validation logic with detailed logging and error handling for archaeological analysis steps.&#10;- Refactor report generation to dynamically summarize available data and conditionally retrieve and organize images by section and entity type.&#10;- Add support for pottery summaries, image grouping by entity type, and RAG-based processing for large datasets&#10;- Add RAG-based analysis with support for image-specific questions and integrated report generation per data section.&#10;- Add RAG-based fallback for token limit errors and improve error handling during section processing.&#10;- Add RAG-based error recovery with contextual image inclusion and post-processing to enhance report generation robustness and clarity.&#10;- Add methods to clean text and generate multilingual prompts and tables for materials, pottery, tombs, periodization, and structures data.&#10;- Add markdown table formatter, progress dialog class, and localized initialization for US form&#10;- Add new field mappings for Italian and German localization to support Archeo 3.0 and ICCD alignment.&#10;- Add German and English to Italian field name mappings for archaeological data conversion to support multilingual input normalization.&#10;- Add Italian and German translations for new USM-related fields and update SORT_ITEMS accordingly.&#10;- Add support for German localization of field labels and align them with existing English and Italian mappings for USM and archaeological data fields.&#10;- Add extensive new data fields, initialize GUI components, set up caching and signal connections, and implement natural sorting function for alphanumeric values.&#10;- Connect GUI elements to their respective event handlers and implement get_images_for_entities to retrieve media thumbnails for various entity types with detailed logging.&#10;- Add methods for vector database creation, RAG chain construction, and token-aware data chunking to support retrieval-augmented generation.&#10;- Add data analysis and validation methods for stratigraphy, materials, and pottery with token-aware chunking logic and truncation warnings.&#10;- Add functions to format and generate tables for archaeological data including materials, pottery, US, tombs, structures, and periodization for report generation.&#10;- Add analysis and validation tool generation methods and data processing functions for archaeological site, stratigraphy, materials, and pottery tables.&#10;- Add data processing functions for various archaeological tables with filtering by year or range and site context.&#10;- Add support for 'periodizzazione' and 'struttura' tables with structured extraction and enhance prompt generation for detailed archaeological reports&#10;- Add data extraction, filtering, and validation logic for multiple tables in report generation process.&#10;- Add missing data validation and report generation workflow with OpenAI agent integration and structured formatting.&#10;- Add report generation workflow with user prompts, section parsing, fallback content, and output to Word template&#10;- Add parsing and processing logic for report sections with fallback content for missing data and support for subsections in DOCX generation.&#10;- Improve heading parsing by supporting both hash-prefixed and underline styles and enhance image handling with validation and fallback paths.&#10;- Add logic to populate Word document with metadata, structured sections, formatting, and tables from report data.&#10;- Add method to convert markdown-formatted tables to Word tables with styling and error handling.&#10;- Add support for detecting and cleaning markdown-style headings and placeholders, including fallback handling for missing content with default section text and structured subsection processing.&#10;- Add support for parsing images and markdown tables in subsection content with error handling and formatting options&#10;- Add support for parsing headings, images, and markdown tables in report content and fallback to manual section insertion if placeholders are missing.&#10;- Add formatted tables for pottery, tombs, structures, and periodization to the document with headers and data, and ensure document has meaningful content before saving.&#10;- Improve table styling fallback logic and add robust error handling for applying styles and borders; implement sketchgpt feature for media selection and GPT window launch; add keyboard shortcuts dialog and localized user prompts and warnings.&#10;- Add progress dialog and detailed logging to rapporti update process, and implement area-specific data filtering for enhanced control and error tracking.&#10;- Implement robust update routine for US table entries with error logging, area correction, and UTF-8 validation.&#10;- Add error logging and improve data extraction from GraphML to CSV for archaeological data processing&#10;- Add CSV processing for US table import, deduplicate entries, and enhance relationship validation with inverse mapping for archaeological units&#10;- Add logic to handle and insert rapporti rows based on existing matches and validate inverse relationships in reports&#10;- Add automatic inverse relationship creation with validation and UI update for unit relationships, enhancing consistency and user feedback.&#10;- Add methods for refreshing data, inserting reference records, and filtering the 'Unità Stratigrafiche' table with support for both SQLite and PostgreSQL backends.&#10;- Add database query and UI update logic for filtering and saving 'Unità Stratigrafiche' records with multi-language support and error handling.&#10;- Add methods to populate period, phase, and dating comboboxes from the 'Periodizzazione' table with error handling and UI updates.&#10;- Add methods to update and display 'Dating' fields based on periodization data and enhance document handling and save logic&#10;- Add US navigation and selection logic with progress updates and conditional save prompts.&#10;- Add US record search and selection functionality with localized messages and UI state handling&#10;- Add database connection logic with multilingual error handling and UI initialization for empty and populated states.&#10;- Add multilingual error messages and customize GUI components based on user locale and context.&#10;- Add ComboBox delegates for multiple USM table columns using localized thesaurus data for documentation types, colors, inclusions, textures, and components.&#10;- Add support for drag-and-drop media upload with validation, map preview loading, and media database insertion including thumbnails and associations.&#10;- Add methods to associate media with entities, generate US records, and process media files with type-specific handling and validation&#10;- Add support for 3D model file types and improve media import with thumbnail generation, resize handling, tag assignment, and localized user messages.&#10;- Add multilingual support and logic for selecting and removing tags from US-related images with confirmation dialogs.&#10;- Add pagination, search filtering, and UI enhancements for displaying and tagging untagged images in QListWidget.&#10;- Implement image caching with LRU eviction and enhance QListWidget population with US entity details and pagination.&#10;- Implement navigation and filtering for paginated image lists and enhance item tagging with media-US association and thumbnail preview updates.&#10;- Add 3D model loading, thumbnail generation, and interactive viewer with measurement and debug tools&#10;- Add distance measurement, coordinate verification, and image export functions with debug messages and label rendering in 3D plot.&#10;- Add bounding box measurement toggle with labeled edges and implement 3D model thumbnail generation and media handling enhancements.&#10;- Add error handling for database queries and implement dynamic population of UI combo boxes based on query results with localization support.&#10;- Populate multiple combo boxes with sorted, unique values from thesaurus queries based on specific 'tipologia_sigla' codes.&#10;- Populate multiple combo boxes with sorted unique values from the thesaurus based on specific 'tipologia_sigla' filters for improved data entry consistency.&#10;- Populate multiple combo boxes with distinct, sorted values from the thesaurus based on specific 'tipologia_sigla' codes to support laterizi and litici material attributes.&#10;- Populate multiple comboBoxes with sorted, unique values from database queries based on different 'tipologia_sigla' codes for construction-related attributes.&#10;- Add site connection checks, localized user messages, and media list generation for photos and PDFs with error handling and configuration prompts.&#10;- Add support for additional archaeological USM data fields including dimensions and elevations with language localization for GIS-based descriptions.&#10;- Add extensive field mappings for archaeological data export including USM properties, ICCD alignment, and GIS-derived values&#10;- Add support for exporting US and photo metadata to PDF with multilingual options and progress tracking&#10;- Add German export options, file path setters, and GraphML conversion with UI integration and error handling&#10;- Add support for SQLite data export with recursive query handling for SU context and relationship mapping.&#10;- Add logic to parse and clean stratigraphic relationships, generate an Excel sheet with formatted columns, and display Harris Matrix image with matplotlib.&#10;- Add logic for interactive matrix generation and stratigraphic relationship validation with multilingual support&#10;- Implementa la generazione e salvataggio di report su errori di ordinamento con messaggi localizzati e gestione degli aggiornamenti al database.&#10;- Add UI handlers for GIS and preview toggle buttons, implement feature sorting and selection with multilingual support and error handling.&#10;- Add new record and save functionalities with UI updates and multilingual support for validation messages&#10;- Add interactive API key management and GPT-based error explanation with multilingual success messages for stratigraphic checks&#10;- Add input validation for required text fields and numeric float fields with warning messages for invalid or empty entries.&#10;- Add numeric and length validation with localized warnings for multiple input fields in the form.&#10;- Add input validation for multiple fields with localized error messages and remove strict numeric check on US field to allow alphanumeric values.&#10;- Add input validation for field length and logical consistency in period and phase selection, and implement automatic form check reporting per site.&#10;- Add stratigraphic relationship consistency check with multilingual logging and reciprocal validation&#10;- Add validation for reciprocal stratigraphic relationships and generate multilingual error reports when inconsistencies are found.&#10;- Comment out detailed relationship verification logic to simplify debugging and improve code maintainability.&#10;- Add function to validate consistency between stratigraphic definitions and relationships across different languages.&#10;- Add stratigraphic relationship report generation with multilingual support and logical consistency checks.&#10;- Add stratigraphic relationship validation logic with multilingual report generation for excavation records.&#10;- Add detailed temporal consistency checks for relationship types and generate corresponding multilingual report messages.&#10;- Add support for extracting and saving additional USM layer attributes and related table data from UI inputs with proper type handling and null checks.&#10;- Add new fields to data export for Archeo 3.0 and align with ICCD standards, including detailed USM and LAT attributes&#10;- Add data insertion logic with input validation, error handling, and UI row management for multiple table widgets&#10;- Refactor record navigation and implement site-based filtering in view_all to improve database interaction and user experience.&#10;- Add record navigation and multilingual record deletion confirmation with database cleanup and UI updates&#10;- Add methods for deleting filtered records, resetting search filters, showing selected GIS layers, and updating excavation period codes with multilingual support.&#10;- Add switchable search mode with UI field toggling and multilingual feedback for improved user experience and error handling.&#10;- Enable form fields and table widgets during search and implement search parameter collection with input validation.&#10;- Add support for capturing and saving additional archaeological record fields including dimensions, catalog numbers, references, and excavation details.&#10;- Add support for additional form fields in search dictionary and handle empty searches with warning message.&#10;- Add support for selecting 'AND' or 'OR' logical operator in search queries with multilingual result messages and GIS layer updates.&#10;- Add record management and error handling methods for data update, loading, and table manipulation with encoding error logging and multilingual support.&#10;- Add method to reset all UI fields and tables to initial empty state, including new USM attributes and conditional date logic&#10;- Clear all input fields and reset UI components in the USM form to ensure a clean state for new data entry.&#10;- Clear all input fields and reset relevant UI tables to initial state when creating a new record.&#10;- Clear all form fields and populate them with data from DATA_LIST using the fill_fields method.&#10;- Populate UI fields with additional excavation record attributes to support Archeo 3.0 and ICCD alignment.&#10;- Populate UI fields with corresponding values from DATA_LIST, handling empty or missing numerical fields by setting them to empty strings.&#10;- Add TM field synchronization from TMA table and improve UI data restoration and form field handling with error logging.&#10;- Handle optional numeric input fields by setting them to None if left empty and update DATA_LIST_REC_TEMP to include new USM attributes and catalog fields for Archeo 3.0 and ICCD alignment.&#10;- Add comprehensive data extraction and comparison methods for form fields to support record validation and synchronization.&#10;- Add utility methods for tab enabling, directory access, data type casting, and CSV import into SQLite with platform-specific file handling&#10;- Add support for importing and filtering additional USM-related fields, including UI updates and error handling.&#10;- Add SQLPromptDialog UI for text-to-SQL conversion with mode selection, prompt history, and execution options.&#10;- Add support for Text2SQL API key management, model download, and SQL generation via API or local model with spatial view detection&#10;- Add support for identifying geometry columns and handling spatial queries with result validation and display in table format.&#10;- Add functionality to display SQL query results and geometry info in a table with support for SpatiaLite views and geometry validation&#10;- Add result table population, Excel export, graph plotting, and geometry alias detection functionalities&#10;- Implement feature selection and zoom based on table row selection by matching row data with layer fields and applying appropriate expressions.&#10;- Implement geometry type inference from SQL and add method to create spatial views in PostGIS with geometry registration.&#10;- Add support for creating and loading spatial layers from PostgreSQL and SpatiaLite views with dynamic geometry column selection and connection parameter parsing.&#10;- Add helper methods for detecting geometry columns and enhance spatial view creation for PostGIS and Spatia&#10;- Add GraphWindow for plotting" />
    <MESSAGE value="- Add initial implementation of US_USM.py.backup with GUI components, language selection, and report generation dependencies&#10;- Add UI sections for language selection, table filtering, and data validation with corresponding backend logic for retrieving and validating excavation data.&#10;- Add pottery data retrieval with filtering, implement checkable combo box for table selection, and create a styled report preview dialog with terminal output and clipboard/save functionality.&#10;- Implement mouse click handling on text edit to open local or external URLs, add logging with color-coded messages, and generate Word reports with TOC and headers.&#10;- Add HTML-to-Word conversion with heading, image, table, and markdown formatting support&#10;- Add support for bold, italic, images with captions, and HTML table conversion to Word document export&#10;- Add support for bolded table headers, image processing with thumbnail replacement and resizing, clipboard copy functionality, and vector database creation for RAG-based data retrieval.&#10;- Add prompt formatting, language-specific instructions, token estimation, and validation methods for archaeological data&#10;- Add image and markdown processing functions to format archaeological content for widget display in HTML.&#10;- Add HTML conversion logic for structured report formatting including headings, lists, tables, and images&#10;- Implement robust data conversion and validation logic with detailed logging and error handling for archaeological analysis steps.&#10;- Refactor report generation to dynamically summarize available data and conditionally retrieve and organize images by section and entity type.&#10;- Add support for pottery summaries, image grouping by entity type, and RAG-based processing for large datasets&#10;- Add RAG-based analysis with support for image-specific questions and integrated report generation per data section.&#10;- Add RAG-based fallback for token limit errors and improve error handling during section processing.&#10;- Add RAG-based error recovery with contextual image inclusion and post-processing to enhance report generation robustness and clarity.&#10;- Add methods to clean text and generate multilingual prompts and tables for materials, pottery, tombs, periodization, and structures data.&#10;- Add markdown table formatter, progress dialog class, and localized initialization for US form&#10;- Add new field mappings for Italian and German localization to support Archeo 3.0 and ICCD alignment.&#10;- Add German and English to Italian field name mappings for archaeological data conversion to support multilingual input normalization.&#10;- Add Italian and German translations for new USM-related fields and update SORT_ITEMS accordingly.&#10;- Add support for German localization of field labels and align them with existing English and Italian mappings for USM and archaeological data fields.&#10;- Add extensive new data fields, initialize GUI components, set up caching and signal connections, and implement natural sorting function for alphanumeric values.&#10;- Connect GUI elements to their respective event handlers and implement get_images_for_entities to retrieve media thumbnails for various entity types with detailed logging.&#10;- Add methods for vector database creation, RAG chain construction, and token-aware data chunking to support retrieval-augmented generation.&#10;- Add data analysis and validation methods for stratigraphy, materials, and pottery with token-aware chunking logic and truncation warnings.&#10;- Add functions to format and generate tables for archaeological data including materials, pottery, US, tombs, structures, and periodization for report generation.&#10;- Add analysis and validation tool generation methods and data processing functions for archaeological site, stratigraphy, materials, and pottery tables.&#10;- Add data processing functions for various archaeological tables with filtering by year or range and site context.&#10;- Add support for 'periodizzazione' and 'struttura' tables with structured extraction and enhance prompt generation for detailed archaeological reports&#10;- Add data extraction, filtering, and validation logic for multiple tables in report generation process.&#10;- Add missing data validation and report generation workflow with OpenAI agent integration and structured formatting.&#10;- Add report generation workflow with user prompts, section parsing, fallback content, and output to Word template&#10;- Add parsing and processing logic for report sections with fallback content for missing data and support for subsections in DOCX generation.&#10;- Improve heading parsing by supporting both hash-prefixed and underline styles and enhance image handling with validation and fallback paths.&#10;- Add logic to populate Word document with metadata, structured sections, formatting, and tables from report data.&#10;- Add method to convert markdown-formatted tables to Word tables with styling and error handling.&#10;- Add support for detecting and cleaning markdown-style headings and placeholders, including fallback handling for missing content with default section text and structured subsection processing.&#10;- Add support for parsing images and markdown tables in subsection content with error handling and formatting options&#10;- Add support for parsing headings, images, and markdown tables in report content and fallback to manual section insertion if placeholders are missing.&#10;- Add formatted tables for pottery, tombs, structures, and periodization to the document with headers and data, and ensure document has meaningful content before saving.&#10;- Improve table styling fallback logic and add robust error handling for applying styles and borders; implement sketchgpt feature for media selection and GPT window launch; add keyboard shortcuts dialog and localized user prompts and warnings.&#10;- Add progress dialog and detailed logging to rapporti update process, and implement area-specific data filtering for enhanced control and error tracking.&#10;- Implement robust update routine for US table entries with error logging, area correction, and UTF-8 validation.&#10;- Add error logging and improve data extraction from GraphML to CSV for archaeological data processing&#10;- Add CSV processing for US table import, deduplicate entries, and enhance relationship validation with inverse mapping for archaeological units&#10;- Add logic to handle and insert rapporti rows based on existing matches and validate inverse relationships in reports&#10;- Add automatic inverse relationship creation with validation and UI update for unit relationships, enhancing consistency and user feedback.&#10;- Add methods for refreshing data, inserting reference records, and filtering the 'Unità Stratigrafiche' table with support for both SQLite and PostgreSQL backends.&#10;- Add database query and UI update logic for filtering and saving 'Unità Stratigrafiche' records with multi-language support and error handling.&#10;- Add methods to populate period, phase, and dating comboboxes from the 'Periodizzazione' table with error handling and UI updates.&#10;- Add methods to update and display 'Dating' fields based on periodization data and enhance document handling and save logic&#10;- Add US navigation and selection logic with progress updates and conditional save prompts.&#10;- Add US record search and selection functionality with localized messages and UI state handling&#10;- Add database connection logic with multilingual error handling and UI initialization for empty and populated states.&#10;- Add multilingual error messages and customize GUI components based on user locale and context.&#10;- Add ComboBox delegates for multiple USM table columns using localized thesaurus data for documentation types, colors, inclusions, textures, and components.&#10;- Add support for drag-and-drop media upload with validation, map preview loading, and media database insertion including thumbnails and associations.&#10;- Add methods to associate media with entities, generate US records, and process media files with type-specific handling and validation&#10;- Add support for 3D model file types and improve media import with thumbnail generation, resize handling, tag assignment, and localized user messages.&#10;- Add multilingual support and logic for selecting and removing tags from US-related images with confirmation dialogs.&#10;- Add pagination, search filtering, and UI enhancements for displaying and tagging untagged images in QListWidget.&#10;- Implement image caching with LRU eviction and enhance QListWidget population with US entity details and pagination.&#10;- Implement navigation and filtering for paginated image lists and enhance item tagging with media-US association and thumbnail preview updates.&#10;- Add 3D model loading, thumbnail generation, and interactive viewer with measurement and debug tools&#10;- Add distance measurement, coordinate verification, and image export functions with debug messages and label rendering in 3D plot.&#10;- Add bounding box measurement toggle with labeled edges and implement 3D model thumbnail generation and media handling enhancements.&#10;- Add error handling for database queries and implement dynamic population of UI combo boxes based on query results with localization support.&#10;- Populate multiple combo boxes with sorted, unique values from thesaurus queries based on specific 'tipologia_sigla' codes.&#10;- Populate multiple combo boxes with sorted unique values from the thesaurus based on specific 'tipologia_sigla' filters for improved data entry consistency.&#10;- Populate multiple combo boxes with distinct, sorted values from the thesaurus based on specific 'tipologia_sigla' codes to support laterizi and litici material attributes.&#10;- Populate multiple comboBoxes with sorted, unique values from database queries based on different 'tipologia_sigla' codes for construction-related attributes.&#10;- Add site connection checks, localized user messages, and media list generation for photos and PDFs with error handling and configuration prompts.&#10;- Add support for additional archaeological USM data fields including dimensions and elevations with language localization for GIS-based descriptions.&#10;- Add extensive field mappings for archaeological data export including USM properties, ICCD alignment, and GIS-derived values&#10;- Add support for exporting US and photo metadata to PDF with multilingual options and progress tracking&#10;- Add German export options, file path setters, and GraphML conversion with UI integration and error handling&#10;- Add support for SQLite data export with recursive query handling for SU context and relationship mapping.&#10;- Add logic to parse and clean stratigraphic relationships, generate an Excel sheet with formatted columns, and display Harris Matrix image with matplotlib.&#10;- Add logic for interactive matrix generation and stratigraphic relationship validation with multilingual support&#10;- Implementa la generazione e salvataggio di report su errori di ordinamento con messaggi localizzati e gestione degli aggiornamenti al database.&#10;- Add UI handlers for GIS and preview toggle buttons, implement feature sorting and selection with multilingual support and error handling.&#10;- Add new record and save functionalities with UI updates and multilingual support for validation messages&#10;- Add interactive API key management and GPT-based error explanation with multilingual success messages for stratigraphic checks&#10;- Add input validation for required text fields and numeric float fields with warning messages for invalid or empty entries.&#10;- Add numeric and length validation with localized warnings for multiple input fields in the form.&#10;- Add input validation for multiple fields with localized error messages and remove strict numeric check on US field to allow alphanumeric values.&#10;- Add input validation for field length and logical consistency in period and phase selection, and implement automatic form check reporting per site.&#10;- Add stratigraphic relationship consistency check with multilingual logging and reciprocal validation&#10;- Add validation for reciprocal stratigraphic relationships and generate multilingual error reports when inconsistencies are found.&#10;- Comment out detailed relationship verification logic to simplify debugging and improve code maintainability.&#10;- Add function to validate consistency between stratigraphic definitions and relationships across different languages.&#10;- Add stratigraphic relationship report generation with multilingual support and logical consistency checks.&#10;- Add stratigraphic relationship validation logic with multilingual report generation for excavation records.&#10;- Add detailed temporal consistency checks for relationship types and generate corresponding multilingual report messages.&#10;- Add support for extracting and saving additional USM layer attributes and related table data from UI inputs with proper type handling and null checks.&#10;- Add new fields to data export for Archeo 3.0 and align with ICCD standards, including detailed USM and LAT attributes&#10;- Add data insertion logic with input validation, error handling, and UI row management for multiple table widgets&#10;- Refactor record navigation and implement site-based filtering in view_all to improve database interaction and user experience.&#10;- Add record navigation and multilingual record deletion confirmation with database cleanup and UI updates&#10;- Add methods for deleting filtered records, resetting search filters, showing selected GIS layers, and updating excavation period codes with multilingual support.&#10;- Add switchable search mode with UI field toggling and multilingual feedback for improved user experience and error handling.&#10;- Enable form fields and table widgets during search and implement search parameter collection with input validation.&#10;- Add support for capturing and saving additional archaeological record fields including dimensions, catalog numbers, references, and excavation details.&#10;- Add support for additional form fields in search dictionary and handle empty searches with warning message.&#10;- Add support for selecting 'AND' or 'OR' logical operator in search queries with multilingual result messages and GIS layer updates.&#10;- Add record management and error handling methods for data update, loading, and table manipulation with encoding error logging and multilingual support.&#10;- Add method to reset all UI fields and tables to initial empty state, including new USM attributes and conditional date logic&#10;- Clear all input fields and reset UI components in the USM form to ensure a clean state for new data entry.&#10;- Clear all input fields and reset relevant UI tables to initial state when creating a new record.&#10;- Clear all form fields and populate them with data from DATA_LIST using the fill_fields method.&#10;- Populate UI fields with additional excavation record attributes to support Archeo 3.0 and ICCD alignment.&#10;- Populate UI fields with corresponding values from DATA_LIST, handling empty or missing numerical fields by setting them to empty strings.&#10;- Add TM field synchronization from TMA table and improve UI data restoration and form field handling with error logging.&#10;- Handle optional numeric input fields by setting them to None if left empty and update DATA_LIST_REC_TEMP to include new USM attributes and catalog fields for Archeo 3.0 and ICCD alignment.&#10;- Add comprehensive data extraction and comparison methods for form fields to support record validation and synchronization.&#10;- Add utility methods for tab enabling, directory access, data type casting, and CSV import into SQLite with platform-specific file handling&#10;- Add support for importing and filtering additional USM-related fields, including UI updates and error handling.&#10;- Add SQLPromptDialog UI for text-to-SQL conversion with mode selection, prompt history, and execution options.&#10;- Add support for Text2SQL API key management, model download, and SQL generation via API or local model with spatial view detection&#10;- Add support for identifying geometry columns and handling spatial queries with result validation and display in table format.&#10;- Add functionality to display SQL query results and geometry info in a table with support for SpatiaLite views and geometry validation&#10;- Add result table population, Excel export, graph plotting, and geometry alias detection functionalities&#10;- Implement feature selection and zoom based on table row selection by matching row data with layer fields and applying appropriate expressions.&#10;- Implement geometry type inference from SQL and add method to create spatial views in PostGIS with geometry registration.&#10;- Add support for creating and loading spatial layers from PostgreSQL and SpatiaLite views with dynamic geometry column selection and connection parameter parsing.&#10;- Add helper methods for detecting geometry columns and enhance spatial view creation for PostGIS and SpatiaLite&#10;- Add GraphWindow for plotting" />
    <MESSAGE value="- Add initial implementation of US_USM.py.backup with GUI components, language selection, and report generation dependencies&#10;- Add UI sections for language selection, table filtering, and data validation with corresponding backend logic for retrieving and validating excavation data.&#10;- Add pottery data retrieval with filtering, implement checkable combo box for table selection, and create a styled report preview dialog with terminal output and clipboard/save functionality.&#10;- Implement mouse click handling on text edit to open local or external URLs, add logging with color-coded messages, and generate Word reports with TOC and headers.&#10;- Add HTML-to-Word conversion with heading, image, table, and markdown formatting support&#10;- Add support for bold, italic, images with captions, and HTML table conversion to Word document export&#10;- Add support for bolded table headers, image processing with thumbnail replacement and resizing, clipboard copy functionality, and vector database creation for RAG-based data retrieval.&#10;- Add prompt formatting, language-specific instructions, token estimation, and validation methods for archaeological data&#10;- Add image and markdown processing functions to format archaeological content for widget display in HTML.&#10;- Add HTML conversion logic for structured report formatting including headings, lists, tables, and images&#10;- Implement robust data conversion and validation logic with detailed logging and error handling for archaeological analysis steps.&#10;- Refactor report generation to dynamically summarize available data and conditionally retrieve and organize images by section and entity type.&#10;- Add support for pottery summaries, image grouping by entity type, and RAG-based processing for large datasets&#10;- Add RAG-based analysis with support for image-specific questions and integrated report generation per data section.&#10;- Add RAG-based fallback for token limit errors and improve error handling during section processing.&#10;- Add RAG-based error recovery with contextual image inclusion and post-processing to enhance report generation robustness and clarity.&#10;- Add methods to clean text and generate multilingual prompts and tables for materials, pottery, tombs, periodization, and structures data.&#10;- Add markdown table formatter, progress dialog class, and localized initialization for US form&#10;- Add new field mappings for Italian and German localization to support Archeo 3.0 and ICCD alignment.&#10;- Add German and English to Italian field name mappings for archaeological data conversion to support multilingual input normalization.&#10;- Add Italian and German translations for new USM-related fields and update SORT_ITEMS accordingly.&#10;- Add support for German localization of field labels and align them with existing English and Italian mappings for USM and archaeological data fields.&#10;- Add extensive new data fields, initialize GUI components, set up caching and signal connections, and implement natural sorting function for alphanumeric values.&#10;- Connect GUI elements to their respective event handlers and implement get_images_for_entities to retrieve media thumbnails for various entity types with detailed logging.&#10;- Add methods for vector database creation, RAG chain construction, and token-aware data chunking to support retrieval-augmented generation.&#10;- Add data analysis and validation methods for stratigraphy, materials, and pottery with token-aware chunking logic and truncation warnings.&#10;- Add functions to format and generate tables for archaeological data including materials, pottery, US, tombs, structures, and periodization for report generation.&#10;- Add analysis and validation tool generation methods and data processing functions for archaeological site, stratigraphy, materials, and pottery tables.&#10;- Add data processing functions for various archaeological tables with filtering by year or range and site context.&#10;- Add support for 'periodizzazione' and 'struttura' tables with structured extraction and enhance prompt generation for detailed archaeological reports&#10;- Add data extraction, filtering, and validation logic for multiple tables in report generation process.&#10;- Add missing data validation and report generation workflow with OpenAI agent integration and structured formatting.&#10;- Add report generation workflow with user prompts, section parsing, fallback content, and output to Word template&#10;- Add parsing and processing logic for report sections with fallback content for missing data and support for subsections in DOCX generation.&#10;- Improve heading parsing by supporting both hash-prefixed and underline styles and enhance image handling with validation and fallback paths.&#10;- Add logic to populate Word document with metadata, structured sections, formatting, and tables from report data.&#10;- Add method to convert markdown-formatted tables to Word tables with styling and error handling.&#10;- Add support for detecting and cleaning markdown-style headings and placeholders, including fallback handling for missing content with default section text and structured subsection processing.&#10;- Add support for parsing images and markdown tables in subsection content with error handling and formatting options&#10;- Add support for parsing headings, images, and markdown tables in report content and fallback to manual section insertion if placeholders are missing.&#10;- Add formatted tables for pottery, tombs, structures, and periodization to the document with headers and data, and ensure document has meaningful content before saving.&#10;- Improve table styling fallback logic and add robust error handling for applying styles and borders; implement sketchgpt feature for media selection and GPT window launch; add keyboard shortcuts dialog and localized user prompts and warnings.&#10;- Add progress dialog and detailed logging to rapporti update process, and implement area-specific data filtering for enhanced control and error tracking.&#10;- Implement robust update routine for US table entries with error logging, area correction, and UTF-8 validation.&#10;- Add error logging and improve data extraction from GraphML to CSV for archaeological data processing&#10;- Add CSV processing for US table import, deduplicate entries, and enhance relationship validation with inverse mapping for archaeological units&#10;- Add logic to handle and insert rapporti rows based on existing matches and validate inverse relationships in reports&#10;- Add automatic inverse relationship creation with validation and UI update for unit relationships, enhancing consistency and user feedback.&#10;- Add methods for refreshing data, inserting reference records, and filtering the 'Unità Stratigrafiche' table with support for both SQLite and PostgreSQL backends.&#10;- Add database query and UI update logic for filtering and saving 'Unità Stratigrafiche' records with multi-language support and error handling.&#10;- Add methods to populate period, phase, and dating comboboxes from the 'Periodizzazione' table with error handling and UI updates.&#10;- Add methods to update and display 'Dating' fields based on periodization data and enhance document handling and save logic&#10;- Add US navigation and selection logic with progress updates and conditional save prompts.&#10;- Add US record search and selection functionality with localized messages and UI state handling&#10;- Add database connection logic with multilingual error handling and UI initialization for empty and populated states.&#10;- Add multilingual error messages and customize GUI components based on user locale and context.&#10;- Add ComboBox delegates for multiple USM table columns using localized thesaurus data for documentation types, colors, inclusions, textures, and components.&#10;- Add support for drag-and-drop media upload with validation, map preview loading, and media database insertion including thumbnails and associations.&#10;- Add methods to associate media with entities, generate US records, and process media files with type-specific handling and validation&#10;- Add support for 3D model file types and improve media import with thumbnail generation, resize handling, tag assignment, and localized user messages.&#10;- Add multilingual support and logic for selecting and removing tags from US-related images with confirmation dialogs.&#10;- Add pagination, search filtering, and UI enhancements for displaying and tagging untagged images in QListWidget.&#10;- Implement image caching with LRU eviction and enhance QListWidget population with US entity details and pagination.&#10;- Implement navigation and filtering for paginated image lists and enhance item tagging with media-US association and thumbnail preview updates.&#10;- Add 3D model loading, thumbnail generation, and interactive viewer with measurement and debug tools&#10;- Add distance measurement, coordinate verification, and image export functions with debug messages and label rendering in 3D plot.&#10;- Add bounding box measurement toggle with labeled edges and implement 3D model thumbnail generation and media handling enhancements.&#10;- Add error handling for database queries and implement dynamic population of UI combo boxes based on query results with localization support.&#10;- Populate multiple combo boxes with sorted, unique values from thesaurus queries based on specific 'tipologia_sigla' codes.&#10;- Populate multiple combo boxes with sorted unique values from the thesaurus based on specific 'tipologia_sigla' filters for improved data entry consistency.&#10;- Populate multiple combo boxes with distinct, sorted values from the thesaurus based on specific 'tipologia_sigla' codes to support laterizi and litici material attributes.&#10;- Populate multiple comboBoxes with sorted, unique values from database queries based on different 'tipologia_sigla' codes for construction-related attributes.&#10;- Add site connection checks, localized user messages, and media list generation for photos and PDFs with error handling and configuration prompts.&#10;- Add support for additional archaeological USM data fields including dimensions and elevations with language localization for GIS-based descriptions.&#10;- Add extensive field mappings for archaeological data export including USM properties, ICCD alignment, and GIS-derived values&#10;- Add support for exporting US and photo metadata to PDF with multilingual options and progress tracking&#10;- Add German export options, file path setters, and GraphML conversion with UI integration and error handling&#10;- Add support for SQLite data export with recursive query handling for SU context and relationship mapping.&#10;- Add logic to parse and clean stratigraphic relationships, generate an Excel sheet with formatted columns, and display Harris Matrix image with matplotlib.&#10;- Add logic for interactive matrix generation and stratigraphic relationship validation with multilingual support&#10;- Implementa la generazione e salvataggio di report su errori di ordinamento con messaggi localizzati e gestione degli aggiornamenti al database.&#10;- Add UI handlers for GIS and preview toggle buttons, implement feature sorting and selection with multilingual support and error handling.&#10;- Add new record and save functionalities with UI updates and multilingual support for validation messages&#10;- Add interactive API key management and GPT-based error explanation with multilingual success messages for stratigraphic checks&#10;- Add input validation for required text fields and numeric float fields with warning messages for invalid or empty entries.&#10;- Add numeric and length validation with localized warnings for multiple input fields in the form.&#10;- Add input validation for multiple fields with localized error messages and remove strict numeric check on US field to allow alphanumeric values.&#10;- Add input validation for field length and logical consistency in period and phase selection, and implement automatic form check reporting per site.&#10;- Add stratigraphic relationship consistency check with multilingual logging and reciprocal validation&#10;- Add validation for reciprocal stratigraphic relationships and generate multilingual error reports when inconsistencies are found.&#10;- Comment out detailed relationship verification logic to simplify debugging and improve code maintainability.&#10;- Add function to validate consistency between stratigraphic definitions and relationships across different languages.&#10;- Add stratigraphic relationship report generation with multilingual support and logical consistency checks.&#10;- Add stratigraphic relationship validation logic with multilingual report generation for excavation records.&#10;- Add detailed temporal consistency checks for relationship types and generate corresponding multilingual report messages.&#10;- Add support for extracting and saving additional USM layer attributes and related table data from UI inputs with proper type handling and null checks.&#10;- Add new fields to data export for Archeo 3.0 and align with ICCD standards, including detailed USM and LAT attributes&#10;- Add data insertion logic with input validation, error handling, and UI row management for multiple table widgets&#10;- Refactor record navigation and implement site-based filtering in view_all to improve database interaction and user experience.&#10;- Add record navigation and multilingual record deletion confirmation with database cleanup and UI updates&#10;- Add methods for deleting filtered records, resetting search filters, showing selected GIS layers, and updating excavation period codes with multilingual support.&#10;- Add switchable search mode with UI field toggling and multilingual feedback for improved user experience and error handling.&#10;- Enable form fields and table widgets during search and implement search parameter collection with input validation.&#10;- Add support for capturing and saving additional archaeological record fields including dimensions, catalog numbers, references, and excavation details.&#10;- Add support for additional form fields in search dictionary and handle empty searches with warning message.&#10;- Add support for selecting 'AND' or 'OR' logical operator in search queries with multilingual result messages and GIS layer updates.&#10;- Add record management and error handling methods for data update, loading, and table manipulation with encoding error logging and multilingual support.&#10;- Add method to reset all UI fields and tables to initial empty state, including new USM attributes and conditional date logic&#10;- Clear all input fields and reset UI components in the USM form to ensure a clean state for new data entry.&#10;- Clear all input fields and reset relevant UI tables to initial state when creating a new record.&#10;- Clear all form fields and populate them with data from DATA_LIST using the fill_fields method.&#10;- Populate UI fields with additional excavation record attributes to support Archeo 3.0 and ICCD alignment.&#10;- Populate UI fields with corresponding values from DATA_LIST, handling empty or missing numerical fields by setting them to empty strings.&#10;- Add TM field synchronization from TMA table and improve UI data restoration and form field handling with error logging.&#10;- Handle optional numeric input fields by setting them to None if left empty and update DATA_LIST_REC_TEMP to include new USM attributes and catalog fields for Archeo 3.0 and ICCD alignment.&#10;- Add comprehensive data extraction and comparison methods for form fields to support record validation and synchronization.&#10;- Add utility methods for tab enabling, directory access, data type casting, and CSV import into SQLite with platform-specific file handling&#10;- Add support for importing and filtering additional USM-related fields, including UI updates and error handling.&#10;- Add SQLPromptDialog UI for text-to-SQL conversion with mode selection, prompt history, and execution options.&#10;- Add support for Text2SQL API key management, model download, and SQL generation via API or local model with spatial view detection&#10;- Add support for identifying geometry columns and handling spatial queries with result validation and display in table format.&#10;- Add functionality to display SQL query results and geometry info in a table with support for SpatiaLite views and geometry validation&#10;- Add result table population, Excel export, graph plotting, and geometry alias detection functionalities&#10;- Implement feature selection and zoom based on table row selection by matching row data with layer fields and applying appropriate expressions.&#10;- Implement geometry type inference from SQL and add method to create spatial views in PostGIS with geometry registration.&#10;- Add support for creating and loading spatial layers from PostgreSQL and SpatiaLite views with dynamic geometry column selection and connection parameter parsing.&#10;- Add helper methods for detecting geometry columns and enhance spatial view creation for PostGIS and SpatiaLite&#10;- Add GraphWindow for plotting data" />
    <MESSAGE value="- Add initial implementation of US_USM.py.backup with GUI components, language selection, and report generation dependencies&#10;- Add UI sections for language selection, table filtering, and data validation with corresponding backend logic for retrieving and validating excavation data.&#10;- Add pottery data retrieval with filtering, implement checkable combo box for table selection, and create a styled report preview dialog with terminal output and clipboard/save functionality.&#10;- Implement mouse click handling on text edit to open local or external URLs, add logging with color-coded messages, and generate Word reports with TOC and headers.&#10;- Add HTML-to-Word conversion with heading, image, table, and markdown formatting support&#10;- Add support for bold, italic, images with captions, and HTML table conversion to Word document export&#10;- Add support for bolded table headers, image processing with thumbnail replacement and resizing, clipboard copy functionality, and vector database creation for RAG-based data retrieval.&#10;- Add prompt formatting, language-specific instructions, token estimation, and validation methods for archaeological data&#10;- Add image and markdown processing functions to format archaeological content for widget display in HTML.&#10;- Add HTML conversion logic for structured report formatting including headings, lists, tables, and images&#10;- Implement robust data conversion and validation logic with detailed logging and error handling for archaeological analysis steps.&#10;- Refactor report generation to dynamically summarize available data and conditionally retrieve and organize images by section and entity type.&#10;- Add support for pottery summaries, image grouping by entity type, and RAG-based processing for large datasets&#10;- Add RAG-based analysis with support for image-specific questions and integrated report generation per data section.&#10;- Add RAG-based fallback for token limit errors and improve error handling during section processing.&#10;- Add RAG-based error recovery with contextual image inclusion and post-processing to enhance report generation robustness and clarity.&#10;- Add methods to clean text and generate multilingual prompts and tables for materials, pottery, tombs, periodization, and structures data.&#10;- Add markdown table formatter, progress dialog class, and localized initialization for US form&#10;- Add new field mappings for Italian and German localization to support Archeo 3.0 and ICCD alignment.&#10;- Add German and English to Italian field name mappings for archaeological data conversion to support multilingual input normalization.&#10;- Add Italian and German translations for new USM-related fields and update SORT_ITEMS accordingly.&#10;- Add support for German localization of field labels and align them with existing English and Italian mappings for USM and archaeological data fields.&#10;- Add extensive new data fields, initialize GUI components, set up caching and signal connections, and implement natural sorting function for alphanumeric values.&#10;- Connect GUI elements to their respective event handlers and implement get_images_for_entities to retrieve media thumbnails for various entity types with detailed logging.&#10;- Add methods for vector database creation, RAG chain construction, and token-aware data chunking to support retrieval-augmented generation.&#10;- Add data analysis and validation methods for stratigraphy, materials, and pottery with token-aware chunking logic and truncation warnings.&#10;- Add functions to format and generate tables for archaeological data including materials, pottery, US, tombs, structures, and periodization for report generation.&#10;- Add analysis and validation tool generation methods and data processing functions for archaeological site, stratigraphy, materials, and pottery tables.&#10;- Add data processing functions for various archaeological tables with filtering by year or range and site context.&#10;- Add support for 'periodizzazione' and 'struttura' tables with structured extraction and enhance prompt generation for detailed archaeological reports&#10;- Add data extraction, filtering, and validation logic for multiple tables in report generation process.&#10;- Add missing data validation and report generation workflow with OpenAI agent integration and structured formatting.&#10;- Add report generation workflow with user prompts, section parsing, fallback content, and output to Word template&#10;- Add parsing and processing logic for report sections with fallback content for missing data and support for subsections in DOCX generation.&#10;- Improve heading parsing by supporting both hash-prefixed and underline styles and enhance image handling with validation and fallback paths.&#10;- Add logic to populate Word document with metadata, structured sections, formatting, and tables from report data.&#10;- Add method to convert markdown-formatted tables to Word tables with styling and error handling.&#10;- Add support for detecting and cleaning markdown-style headings and placeholders, including fallback handling for missing content with default section text and structured subsection processing.&#10;- Add support for parsing images and markdown tables in subsection content with error handling and formatting options&#10;- Add support for parsing headings, images, and markdown tables in report content and fallback to manual section insertion if placeholders are missing.&#10;- Add formatted tables for pottery, tombs, structures, and periodization to the document with headers and data, and ensure document has meaningful content before saving.&#10;- Improve table styling fallback logic and add robust error handling for applying styles and borders; implement sketchgpt feature for media selection and GPT window launch; add keyboard shortcuts dialog and localized user prompts and warnings.&#10;- Add progress dialog and detailed logging to rapporti update process, and implement area-specific data filtering for enhanced control and error tracking.&#10;- Implement robust update routine for US table entries with error logging, area correction, and UTF-8 validation.&#10;- Add error logging and improve data extraction from GraphML to CSV for archaeological data processing&#10;- Add CSV processing for US table import, deduplicate entries, and enhance relationship validation with inverse mapping for archaeological units&#10;- Add logic to handle and insert rapporti rows based on existing matches and validate inverse relationships in reports&#10;- Add automatic inverse relationship creation with validation and UI update for unit relationships, enhancing consistency and user feedback.&#10;- Add methods for refreshing data, inserting reference records, and filtering the 'Unità Stratigrafiche' table with support for both SQLite and PostgreSQL backends.&#10;- Add database query and UI update logic for filtering and saving 'Unità Stratigrafiche' records with multi-language support and error handling.&#10;- Add methods to populate period, phase, and dating comboboxes from the 'Periodizzazione' table with error handling and UI updates.&#10;- Add methods to update and display 'Dating' fields based on periodization data and enhance document handling and save logic&#10;- Add US navigation and selection logic with progress updates and conditional save prompts.&#10;- Add US record search and selection functionality with localized messages and UI state handling&#10;- Add database connection logic with multilingual error handling and UI initialization for empty and populated states.&#10;- Add multilingual error messages and customize GUI components based on user locale and context.&#10;- Add ComboBox delegates for multiple USM table columns using localized thesaurus data for documentation types, colors, inclusions, textures, and components.&#10;- Add support for drag-and-drop media upload with validation, map preview loading, and media database insertion including thumbnails and associations.&#10;- Add methods to associate media with entities, generate US records, and process media files with type-specific handling and validation&#10;- Add support for 3D model file types and improve media import with thumbnail generation, resize handling, tag assignment, and localized user messages.&#10;- Add multilingual support and logic for selecting and removing tags from US-related images with confirmation dialogs.&#10;- Add pagination, search filtering, and UI enhancements for displaying and tagging untagged images in QListWidget.&#10;- Implement image caching with LRU eviction and enhance QListWidget population with US entity details and pagination.&#10;- Implement navigation and filtering for paginated image lists and enhance item tagging with media-US association and thumbnail preview updates.&#10;- Add 3D model loading, thumbnail generation, and interactive viewer with measurement and debug tools&#10;- Add distance measurement, coordinate verification, and image export functions with debug messages and label rendering in 3D plot.&#10;- Add bounding box measurement toggle with labeled edges and implement 3D model thumbnail generation and media handling enhancements.&#10;- Add error handling for database queries and implement dynamic population of UI combo boxes based on query results with localization support.&#10;- Populate multiple combo boxes with sorted, unique values from thesaurus queries based on specific 'tipologia_sigla' codes.&#10;- Populate multiple combo boxes with sorted unique values from the thesaurus based on specific 'tipologia_sigla' filters for improved data entry consistency.&#10;- Populate multiple combo boxes with distinct, sorted values from the thesaurus based on specific 'tipologia_sigla' codes to support laterizi and litici material attributes.&#10;- Populate multiple comboBoxes with sorted, unique values from database queries based on different 'tipologia_sigla' codes for construction-related attributes.&#10;- Add site connection checks, localized user messages, and media list generation for photos and PDFs with error handling and configuration prompts.&#10;- Add support for additional archaeological USM data fields including dimensions and elevations with language localization for GIS-based descriptions.&#10;- Add extensive field mappings for archaeological data export including USM properties, ICCD alignment, and GIS-derived values&#10;- Add support for exporting US and photo metadata to PDF with multilingual options and progress tracking&#10;- Add German export options, file path setters, and GraphML conversion with UI integration and error handling&#10;- Add support for SQLite data export with recursive query handling for SU context and relationship mapping.&#10;- Add logic to parse and clean stratigraphic relationships, generate an Excel sheet with formatted columns, and display Harris Matrix image with matplotlib.&#10;- Add logic for interactive matrix generation and stratigraphic relationship validation with multilingual support&#10;- Implementa la generazione e salvataggio di report su errori di ordinamento con messaggi localizzati e gestione degli aggiornamenti al database.&#10;- Add UI handlers for GIS and preview toggle buttons, implement feature sorting and selection with multilingual support and error handling.&#10;- Add new record and save functionalities with UI updates and multilingual support for validation messages&#10;- Add interactive API key management and GPT-based error explanation with multilingual success messages for stratigraphic checks&#10;- Add input validation for required text fields and numeric float fields with warning messages for invalid or empty entries.&#10;- Add numeric and length validation with localized warnings for multiple input fields in the form.&#10;- Add input validation for multiple fields with localized error messages and remove strict numeric check on US field to allow alphanumeric values.&#10;- Add input validation for field length and logical consistency in period and phase selection, and implement automatic form check reporting per site.&#10;- Add stratigraphic relationship consistency check with multilingual logging and reciprocal validation&#10;- Add validation for reciprocal stratigraphic relationships and generate multilingual error reports when inconsistencies are found.&#10;- Comment out detailed relationship verification logic to simplify debugging and improve code maintainability.&#10;- Add function to validate consistency between stratigraphic definitions and relationships across different languages.&#10;- Add stratigraphic relationship report generation with multilingual support and logical consistency checks.&#10;- Add stratigraphic relationship validation logic with multilingual report generation for excavation records.&#10;- Add detailed temporal consistency checks for relationship types and generate corresponding multilingual report messages.&#10;- Add support for extracting and saving additional USM layer attributes and related table data from UI inputs with proper type handling and null checks.&#10;- Add new fields to data export for Archeo 3.0 and align with ICCD standards, including detailed USM and LAT attributes&#10;- Add data insertion logic with input validation, error handling, and UI row management for multiple table widgets&#10;- Refactor record navigation and implement site-based filtering in view_all to improve database interaction and user experience.&#10;- Add record navigation and multilingual record deletion confirmation with database cleanup and UI updates&#10;- Add methods for deleting filtered records, resetting search filters, showing selected GIS layers, and updating excavation period codes with multilingual support.&#10;- Add switchable search mode with UI field toggling and multilingual feedback for improved user experience and error handling.&#10;- Enable form fields and table widgets during search and implement search parameter collection with input validation.&#10;- Add support for capturing and saving additional archaeological record fields including dimensions, catalog numbers, references, and excavation details.&#10;- Add support for additional form fields in search dictionary and handle empty searches with warning message.&#10;- Add support for selecting 'AND' or 'OR' logical operator in search queries with multilingual result messages and GIS layer updates.&#10;- Add record management and error handling methods for data update, loading, and table manipulation with encoding error logging and multilingual support.&#10;- Add method to reset all UI fields and tables to initial empty state, including new USM attributes and conditional date logic&#10;- Clear all input fields and reset UI components in the USM form to ensure a clean state for new data entry.&#10;- Clear all input fields and reset relevant UI tables to initial state when creating a new record.&#10;- Clear all form fields and populate them with data from DATA_LIST using the fill_fields method.&#10;- Populate UI fields with additional excavation record attributes to support Archeo 3.0 and ICCD alignment.&#10;- Populate UI fields with corresponding values from DATA_LIST, handling empty or missing numerical fields by setting them to empty strings.&#10;- Add TM field synchronization from TMA table and improve UI data restoration and form field handling with error logging.&#10;- Handle optional numeric input fields by setting them to None if left empty and update DATA_LIST_REC_TEMP to include new USM attributes and catalog fields for Archeo 3.0 and ICCD alignment.&#10;- Add comprehensive data extraction and comparison methods for form fields to support record validation and synchronization.&#10;- Add utility methods for tab enabling, directory access, data type casting, and CSV import into SQLite with platform-specific file handling&#10;- Add support for importing and filtering additional USM-related fields, including UI updates and error handling.&#10;- Add SQLPromptDialog UI for text-to-SQL conversion with mode selection, prompt history, and execution options.&#10;- Add support for Text2SQL API key management, model download, and SQL generation via API or local model with spatial view detection&#10;- Add support for identifying geometry columns and handling spatial queries with result validation and display in table format.&#10;- Add functionality to display SQL query results and geometry info in a table with support for SpatiaLite views and geometry validation&#10;- Add result table population, Excel export, graph plotting, and geometry alias detection functionalities&#10;- Implement feature selection and zoom based on table row selection by matching row data with layer fields and applying appropriate expressions.&#10;- Implement geometry type inference from SQL and add method to create spatial views in PostGIS with geometry registration.&#10;- Add support for creating and loading spatial layers from PostgreSQL and SpatiaLite views with dynamic geometry column selection and connection parameter parsing.&#10;- Add helper methods for detecting geometry columns and enhance spatial view creation for PostGIS and SpatiaLite compatibility&#10;- Add GraphWindow for plotting data" />
    <MESSAGE value="- Add initial implementation of US_USM.py.backup with GUI components, language selection, and report generation dependencies&#10;- Add UI sections for language selection, table filtering, and data validation with corresponding backend logic for retrieving and validating excavation data.&#10;- Add pottery data retrieval with filtering, implement checkable combo box for table selection, and create a styled report preview dialog with terminal output and clipboard/save functionality.&#10;- Implement mouse click handling on text edit to open local or external URLs, add logging with color-coded messages, and generate Word reports with TOC and headers.&#10;- Add HTML-to-Word conversion with heading, image, table, and markdown formatting support&#10;- Add support for bold, italic, images with captions, and HTML table conversion to Word document export&#10;- Add support for bolded table headers, image processing with thumbnail replacement and resizing, clipboard copy functionality, and vector database creation for RAG-based data retrieval.&#10;- Add prompt formatting, language-specific instructions, token estimation, and validation methods for archaeological data&#10;- Add image and markdown processing functions to format archaeological content for widget display in HTML.&#10;- Add HTML conversion logic for structured report formatting including headings, lists, tables, and images&#10;- Implement robust data conversion and validation logic with detailed logging and error handling for archaeological analysis steps.&#10;- Refactor report generation to dynamically summarize available data and conditionally retrieve and organize images by section and entity type.&#10;- Add support for pottery summaries, image grouping by entity type, and RAG-based processing for large datasets&#10;- Add RAG-based analysis with support for image-specific questions and integrated report generation per data section.&#10;- Add RAG-based fallback for token limit errors and improve error handling during section processing.&#10;- Add RAG-based error recovery with contextual image inclusion and post-processing to enhance report generation robustness and clarity.&#10;- Add methods to clean text and generate multilingual prompts and tables for materials, pottery, tombs, periodization, and structures data.&#10;- Add markdown table formatter, progress dialog class, and localized initialization for US form&#10;- Add new field mappings for Italian and German localization to support Archeo 3.0 and ICCD alignment.&#10;- Add German and English to Italian field name mappings for archaeological data conversion to support multilingual input normalization.&#10;- Add Italian and German translations for new USM-related fields and update SORT_ITEMS accordingly.&#10;- Add support for German localization of field labels and align them with existing English and Italian mappings for USM and archaeological data fields.&#10;- Add extensive new data fields, initialize GUI components, set up caching and signal connections, and implement natural sorting function for alphanumeric values.&#10;- Connect GUI elements to their respective event handlers and implement get_images_for_entities to retrieve media thumbnails for various entity types with detailed logging.&#10;- Add methods for vector database creation, RAG chain construction, and token-aware data chunking to support retrieval-augmented generation.&#10;- Add data analysis and validation methods for stratigraphy, materials, and pottery with token-aware chunking logic and truncation warnings.&#10;- Add functions to format and generate tables for archaeological data including materials, pottery, US, tombs, structures, and periodization for report generation.&#10;- Add analysis and validation tool generation methods and data processing functions for archaeological site, stratigraphy, materials, and pottery tables.&#10;- Add data processing functions for various archaeological tables with filtering by year or range and site context.&#10;- Add support for 'periodizzazione' and 'struttura' tables with structured extraction and enhance prompt generation for detailed archaeological reports&#10;- Add data extraction, filtering, and validation logic for multiple tables in report generation process.&#10;- Add missing data validation and report generation workflow with OpenAI agent integration and structured formatting.&#10;- Add report generation workflow with user prompts, section parsing, fallback content, and output to Word template&#10;- Add parsing and processing logic for report sections with fallback content for missing data and support for subsections in DOCX generation.&#10;- Improve heading parsing by supporting both hash-prefixed and underline styles and enhance image handling with validation and fallback paths.&#10;- Add logic to populate Word document with metadata, structured sections, formatting, and tables from report data.&#10;- Add method to convert markdown-formatted tables to Word tables with styling and error handling.&#10;- Add support for detecting and cleaning markdown-style headings and placeholders, including fallback handling for missing content with default section text and structured subsection processing.&#10;- Add support for parsing images and markdown tables in subsection content with error handling and formatting options&#10;- Add support for parsing headings, images, and markdown tables in report content and fallback to manual section insertion if placeholders are missing.&#10;- Add formatted tables for pottery, tombs, structures, and periodization to the document with headers and data, and ensure document has meaningful content before saving.&#10;- Improve table styling fallback logic and add robust error handling for applying styles and borders; implement sketchgpt feature for media selection and GPT window launch; add keyboard shortcuts dialog and localized user prompts and warnings.&#10;- Add progress dialog and detailed logging to rapporti update process, and implement area-specific data filtering for enhanced control and error tracking.&#10;- Implement robust update routine for US table entries with error logging, area correction, and UTF-8 validation.&#10;- Add error logging and improve data extraction from GraphML to CSV for archaeological data processing&#10;- Add CSV processing for US table import, deduplicate entries, and enhance relationship validation with inverse mapping for archaeological units&#10;- Add logic to handle and insert rapporti rows based on existing matches and validate inverse relationships in reports&#10;- Add automatic inverse relationship creation with validation and UI update for unit relationships, enhancing consistency and user feedback.&#10;- Add methods for refreshing data, inserting reference records, and filtering the 'Unità Stratigrafiche' table with support for both SQLite and PostgreSQL backends.&#10;- Add database query and UI update logic for filtering and saving 'Unità Stratigrafiche' records with multi-language support and error handling.&#10;- Add methods to populate period, phase, and dating comboboxes from the 'Periodizzazione' table with error handling and UI updates.&#10;- Add methods to update and display 'Dating' fields based on periodization data and enhance document handling and save logic&#10;- Add US navigation and selection logic with progress updates and conditional save prompts.&#10;- Add US record search and selection functionality with localized messages and UI state handling&#10;- Add database connection logic with multilingual error handling and UI initialization for empty and populated states.&#10;- Add multilingual error messages and customize GUI components based on user locale and context.&#10;- Add ComboBox delegates for multiple USM table columns using localized thesaurus data for documentation types, colors, inclusions, textures, and components.&#10;- Add support for drag-and-drop media upload with validation, map preview loading, and media database insertion including thumbnails and associations.&#10;- Add methods to associate media with entities, generate US records, and process media files with type-specific handling and validation&#10;- Add support for 3D model file types and improve media import with thumbnail generation, resize handling, tag assignment, and localized user messages.&#10;- Add multilingual support and logic for selecting and removing tags from US-related images with confirmation dialogs.&#10;- Add pagination, search filtering, and UI enhancements for displaying and tagging untagged images in QListWidget.&#10;- Implement image caching with LRU eviction and enhance QListWidget population with US entity details and pagination.&#10;- Implement navigation and filtering for paginated image lists and enhance item tagging with media-US association and thumbnail preview updates.&#10;- Add 3D model loading, thumbnail generation, and interactive viewer with measurement and debug tools&#10;- Add distance measurement, coordinate verification, and image export functions with debug messages and label rendering in 3D plot.&#10;- Add bounding box measurement toggle with labeled edges and implement 3D model thumbnail generation and media handling enhancements.&#10;- Add error handling for database queries and implement dynamic population of UI combo boxes based on query results with localization support.&#10;- Populate multiple combo boxes with sorted, unique values from thesaurus queries based on specific 'tipologia_sigla' codes.&#10;- Populate multiple combo boxes with sorted unique values from the thesaurus based on specific 'tipologia_sigla' filters for improved data entry consistency.&#10;- Populate multiple combo boxes with distinct, sorted values from the thesaurus based on specific 'tipologia_sigla' codes to support laterizi and litici material attributes.&#10;- Populate multiple comboBoxes with sorted, unique values from database queries based on different 'tipologia_sigla' codes for construction-related attributes.&#10;- Add site connection checks, localized user messages, and media list generation for photos and PDFs with error handling and configuration prompts.&#10;- Add support for additional archaeological USM data fields including dimensions and elevations with language localization for GIS-based descriptions.&#10;- Add extensive field mappings for archaeological data export including USM properties, ICCD alignment, and GIS-derived values&#10;- Add support for exporting US and photo metadata to PDF with multilingual options and progress tracking&#10;- Add German export options, file path setters, and GraphML conversion with UI integration and error handling&#10;- Add support for SQLite data export with recursive query handling for SU context and relationship mapping.&#10;- Add logic to parse and clean stratigraphic relationships, generate an Excel sheet with formatted columns, and display Harris Matrix image with matplotlib.&#10;- Add logic for interactive matrix generation and stratigraphic relationship validation with multilingual support&#10;- Implementa la generazione e salvataggio di report su errori di ordinamento con messaggi localizzati e gestione degli aggiornamenti al database.&#10;- Add UI handlers for GIS and preview toggle buttons, implement feature sorting and selection with multilingual support and error handling.&#10;- Add new record and save functionalities with UI updates and multilingual support for validation messages&#10;- Add interactive API key management and GPT-based error explanation with multilingual success messages for stratigraphic checks&#10;- Add input validation for required text fields and numeric float fields with warning messages for invalid or empty entries.&#10;- Add numeric and length validation with localized warnings for multiple input fields in the form.&#10;- Add input validation for multiple fields with localized error messages and remove strict numeric check on US field to allow alphanumeric values.&#10;- Add input validation for field length and logical consistency in period and phase selection, and implement automatic form check reporting per site.&#10;- Add stratigraphic relationship consistency check with multilingual logging and reciprocal validation&#10;- Add validation for reciprocal stratigraphic relationships and generate multilingual error reports when inconsistencies are found.&#10;- Comment out detailed relationship verification logic to simplify debugging and improve code maintainability.&#10;- Add function to validate consistency between stratigraphic definitions and relationships across different languages.&#10;- Add stratigraphic relationship report generation with multilingual support and logical consistency checks.&#10;- Add stratigraphic relationship validation logic with multilingual report generation for excavation records.&#10;- Add detailed temporal consistency checks for relationship types and generate corresponding multilingual report messages.&#10;- Add support for extracting and saving additional USM layer attributes and related table data from UI inputs with proper type handling and null checks.&#10;- Add new fields to data export for Archeo 3.0 and align with ICCD standards, including detailed USM and LAT attributes&#10;- Add data insertion logic with input validation, error handling, and UI row management for multiple table widgets&#10;- Refactor record navigation and implement site-based filtering in view_all to improve database interaction and user experience.&#10;- Add record navigation and multilingual record deletion confirmation with database cleanup and UI updates&#10;- Add methods for deleting filtered records, resetting search filters, showing selected GIS layers, and updating excavation period codes with multilingual support.&#10;- Add switchable search mode with UI field toggling and multilingual feedback for improved user experience and error handling.&#10;- Enable form fields and table widgets during search and implement search parameter collection with input validation.&#10;- Add support for capturing and saving additional archaeological record fields including dimensions, catalog numbers, references, and excavation details.&#10;- Add support for additional form fields in search dictionary and handle empty searches with warning message.&#10;- Add support for selecting 'AND' or 'OR' logical operator in search queries with multilingual result messages and GIS layer updates.&#10;- Add record management and error handling methods for data update, loading, and table manipulation with encoding error logging and multilingual support.&#10;- Add method to reset all UI fields and tables to initial empty state, including new USM attributes and conditional date logic&#10;- Clear all input fields and reset UI components in the USM form to ensure a clean state for new data entry.&#10;- Clear all input fields and reset relevant UI tables to initial state when creating a new record.&#10;- Clear all form fields and populate them with data from DATA_LIST using the fill_fields method.&#10;- Populate UI fields with additional excavation record attributes to support Archeo 3.0 and ICCD alignment.&#10;- Populate UI fields with corresponding values from DATA_LIST, handling empty or missing numerical fields by setting them to empty strings.&#10;- Add TM field synchronization from TMA table and improve UI data restoration and form field handling with error logging.&#10;- Handle optional numeric input fields by setting them to None if left empty and update DATA_LIST_REC_TEMP to include new USM attributes and catalog fields for Archeo 3.0 and ICCD alignment.&#10;- Add comprehensive data extraction and comparison methods for form fields to support record validation and synchronization.&#10;- Add utility methods for tab enabling, directory access, data type casting, and CSV import into SQLite with platform-specific file handling&#10;- Add support for importing and filtering additional USM-related fields, including UI updates and error handling.&#10;- Add SQLPromptDialog UI for text-to-SQL conversion with mode selection, prompt history, and execution options.&#10;- Add support for Text2SQL API key management, model download, and SQL generation via API or local model with spatial view detection&#10;- Add support for identifying geometry columns and handling spatial queries with result validation and display in table format.&#10;- Add functionality to display SQL query results and geometry info in a table with support for SpatiaLite views and geometry validation&#10;- Add result table population, Excel export, graph plotting, and geometry alias detection functionalities&#10;- Implement feature selection and zoom based on table row selection by matching row data with layer fields and applying appropriate expressions.&#10;- Implement geometry type inference from SQL and add method to create spatial views in PostGIS with geometry registration.&#10;- Add support for creating and loading spatial layers from PostgreSQL and SpatiaLite views with dynamic geometry column selection and connection parameter parsing.&#10;- Add helper methods for detecting geometry columns and enhance spatial view creation for PostGIS and SpatiaLite compatibility&#10;- Add GraphWindow for plotting data with" />
    <MESSAGE value="- Add initial implementation of US_USM.py.backup with GUI components, language selection, and report generation dependencies&#10;- Add UI sections for language selection, table filtering, and data validation with corresponding backend logic for retrieving and validating excavation data.&#10;- Add pottery data retrieval with filtering, implement checkable combo box for table selection, and create a styled report preview dialog with terminal output and clipboard/save functionality.&#10;- Implement mouse click handling on text edit to open local or external URLs, add logging with color-coded messages, and generate Word reports with TOC and headers.&#10;- Add HTML-to-Word conversion with heading, image, table, and markdown formatting support&#10;- Add support for bold, italic, images with captions, and HTML table conversion to Word document export&#10;- Add support for bolded table headers, image processing with thumbnail replacement and resizing, clipboard copy functionality, and vector database creation for RAG-based data retrieval.&#10;- Add prompt formatting, language-specific instructions, token estimation, and validation methods for archaeological data&#10;- Add image and markdown processing functions to format archaeological content for widget display in HTML.&#10;- Add HTML conversion logic for structured report formatting including headings, lists, tables, and images&#10;- Implement robust data conversion and validation logic with detailed logging and error handling for archaeological analysis steps.&#10;- Refactor report generation to dynamically summarize available data and conditionally retrieve and organize images by section and entity type.&#10;- Add support for pottery summaries, image grouping by entity type, and RAG-based processing for large datasets&#10;- Add RAG-based analysis with support for image-specific questions and integrated report generation per data section.&#10;- Add RAG-based fallback for token limit errors and improve error handling during section processing.&#10;- Add RAG-based error recovery with contextual image inclusion and post-processing to enhance report generation robustness and clarity.&#10;- Add methods to clean text and generate multilingual prompts and tables for materials, pottery, tombs, periodization, and structures data.&#10;- Add markdown table formatter, progress dialog class, and localized initialization for US form&#10;- Add new field mappings for Italian and German localization to support Archeo 3.0 and ICCD alignment.&#10;- Add German and English to Italian field name mappings for archaeological data conversion to support multilingual input normalization.&#10;- Add Italian and German translations for new USM-related fields and update SORT_ITEMS accordingly.&#10;- Add support for German localization of field labels and align them with existing English and Italian mappings for USM and archaeological data fields.&#10;- Add extensive new data fields, initialize GUI components, set up caching and signal connections, and implement natural sorting function for alphanumeric values.&#10;- Connect GUI elements to their respective event handlers and implement get_images_for_entities to retrieve media thumbnails for various entity types with detailed logging.&#10;- Add methods for vector database creation, RAG chain construction, and token-aware data chunking to support retrieval-augmented generation.&#10;- Add data analysis and validation methods for stratigraphy, materials, and pottery with token-aware chunking logic and truncation warnings.&#10;- Add functions to format and generate tables for archaeological data including materials, pottery, US, tombs, structures, and periodization for report generation.&#10;- Add analysis and validation tool generation methods and data processing functions for archaeological site, stratigraphy, materials, and pottery tables.&#10;- Add data processing functions for various archaeological tables with filtering by year or range and site context.&#10;- Add support for 'periodizzazione' and 'struttura' tables with structured extraction and enhance prompt generation for detailed archaeological reports&#10;- Add data extraction, filtering, and validation logic for multiple tables in report generation process.&#10;- Add missing data validation and report generation workflow with OpenAI agent integration and structured formatting.&#10;- Add report generation workflow with user prompts, section parsing, fallback content, and output to Word template&#10;- Add parsing and processing logic for report sections with fallback content for missing data and support for subsections in DOCX generation.&#10;- Improve heading parsing by supporting both hash-prefixed and underline styles and enhance image handling with validation and fallback paths.&#10;- Add logic to populate Word document with metadata, structured sections, formatting, and tables from report data.&#10;- Add method to convert markdown-formatted tables to Word tables with styling and error handling.&#10;- Add support for detecting and cleaning markdown-style headings and placeholders, including fallback handling for missing content with default section text and structured subsection processing.&#10;- Add support for parsing images and markdown tables in subsection content with error handling and formatting options&#10;- Add support for parsing headings, images, and markdown tables in report content and fallback to manual section insertion if placeholders are missing.&#10;- Add formatted tables for pottery, tombs, structures, and periodization to the document with headers and data, and ensure document has meaningful content before saving.&#10;- Improve table styling fallback logic and add robust error handling for applying styles and borders; implement sketchgpt feature for media selection and GPT window launch; add keyboard shortcuts dialog and localized user prompts and warnings.&#10;- Add progress dialog and detailed logging to rapporti update process, and implement area-specific data filtering for enhanced control and error tracking.&#10;- Implement robust update routine for US table entries with error logging, area correction, and UTF-8 validation.&#10;- Add error logging and improve data extraction from GraphML to CSV for archaeological data processing&#10;- Add CSV processing for US table import, deduplicate entries, and enhance relationship validation with inverse mapping for archaeological units&#10;- Add logic to handle and insert rapporti rows based on existing matches and validate inverse relationships in reports&#10;- Add automatic inverse relationship creation with validation and UI update for unit relationships, enhancing consistency and user feedback.&#10;- Add methods for refreshing data, inserting reference records, and filtering the 'Unità Stratigrafiche' table with support for both SQLite and PostgreSQL backends.&#10;- Add database query and UI update logic for filtering and saving 'Unità Stratigrafiche' records with multi-language support and error handling.&#10;- Add methods to populate period, phase, and dating comboboxes from the 'Periodizzazione' table with error handling and UI updates.&#10;- Add methods to update and display 'Dating' fields based on periodization data and enhance document handling and save logic&#10;- Add US navigation and selection logic with progress updates and conditional save prompts.&#10;- Add US record search and selection functionality with localized messages and UI state handling&#10;- Add database connection logic with multilingual error handling and UI initialization for empty and populated states.&#10;- Add multilingual error messages and customize GUI components based on user locale and context.&#10;- Add ComboBox delegates for multiple USM table columns using localized thesaurus data for documentation types, colors, inclusions, textures, and components.&#10;- Add support for drag-and-drop media upload with validation, map preview loading, and media database insertion including thumbnails and associations.&#10;- Add methods to associate media with entities, generate US records, and process media files with type-specific handling and validation&#10;- Add support for 3D model file types and improve media import with thumbnail generation, resize handling, tag assignment, and localized user messages.&#10;- Add multilingual support and logic for selecting and removing tags from US-related images with confirmation dialogs.&#10;- Add pagination, search filtering, and UI enhancements for displaying and tagging untagged images in QListWidget.&#10;- Implement image caching with LRU eviction and enhance QListWidget population with US entity details and pagination.&#10;- Implement navigation and filtering for paginated image lists and enhance item tagging with media-US association and thumbnail preview updates.&#10;- Add 3D model loading, thumbnail generation, and interactive viewer with measurement and debug tools&#10;- Add distance measurement, coordinate verification, and image export functions with debug messages and label rendering in 3D plot.&#10;- Add bounding box measurement toggle with labeled edges and implement 3D model thumbnail generation and media handling enhancements.&#10;- Add error handling for database queries and implement dynamic population of UI combo boxes based on query results with localization support.&#10;- Populate multiple combo boxes with sorted, unique values from thesaurus queries based on specific 'tipologia_sigla' codes.&#10;- Populate multiple combo boxes with sorted unique values from the thesaurus based on specific 'tipologia_sigla' filters for improved data entry consistency.&#10;- Populate multiple combo boxes with distinct, sorted values from the thesaurus based on specific 'tipologia_sigla' codes to support laterizi and litici material attributes.&#10;- Populate multiple comboBoxes with sorted, unique values from database queries based on different 'tipologia_sigla' codes for construction-related attributes.&#10;- Add site connection checks, localized user messages, and media list generation for photos and PDFs with error handling and configuration prompts.&#10;- Add support for additional archaeological USM data fields including dimensions and elevations with language localization for GIS-based descriptions.&#10;- Add extensive field mappings for archaeological data export including USM properties, ICCD alignment, and GIS-derived values&#10;- Add support for exporting US and photo metadata to PDF with multilingual options and progress tracking&#10;- Add German export options, file path setters, and GraphML conversion with UI integration and error handling&#10;- Add support for SQLite data export with recursive query handling for SU context and relationship mapping.&#10;- Add logic to parse and clean stratigraphic relationships, generate an Excel sheet with formatted columns, and display Harris Matrix image with matplotlib.&#10;- Add logic for interactive matrix generation and stratigraphic relationship validation with multilingual support&#10;- Implementa la generazione e salvataggio di report su errori di ordinamento con messaggi localizzati e gestione degli aggiornamenti al database.&#10;- Add UI handlers for GIS and preview toggle buttons, implement feature sorting and selection with multilingual support and error handling.&#10;- Add new record and save functionalities with UI updates and multilingual support for validation messages&#10;- Add interactive API key management and GPT-based error explanation with multilingual success messages for stratigraphic checks&#10;- Add input validation for required text fields and numeric float fields with warning messages for invalid or empty entries.&#10;- Add numeric and length validation with localized warnings for multiple input fields in the form.&#10;- Add input validation for multiple fields with localized error messages and remove strict numeric check on US field to allow alphanumeric values.&#10;- Add input validation for field length and logical consistency in period and phase selection, and implement automatic form check reporting per site.&#10;- Add stratigraphic relationship consistency check with multilingual logging and reciprocal validation&#10;- Add validation for reciprocal stratigraphic relationships and generate multilingual error reports when inconsistencies are found.&#10;- Comment out detailed relationship verification logic to simplify debugging and improve code maintainability.&#10;- Add function to validate consistency between stratigraphic definitions and relationships across different languages.&#10;- Add stratigraphic relationship report generation with multilingual support and logical consistency checks.&#10;- Add stratigraphic relationship validation logic with multilingual report generation for excavation records.&#10;- Add detailed temporal consistency checks for relationship types and generate corresponding multilingual report messages.&#10;- Add support for extracting and saving additional USM layer attributes and related table data from UI inputs with proper type handling and null checks.&#10;- Add new fields to data export for Archeo 3.0 and align with ICCD standards, including detailed USM and LAT attributes&#10;- Add data insertion logic with input validation, error handling, and UI row management for multiple table widgets&#10;- Refactor record navigation and implement site-based filtering in view_all to improve database interaction and user experience.&#10;- Add record navigation and multilingual record deletion confirmation with database cleanup and UI updates&#10;- Add methods for deleting filtered records, resetting search filters, showing selected GIS layers, and updating excavation period codes with multilingual support.&#10;- Add switchable search mode with UI field toggling and multilingual feedback for improved user experience and error handling.&#10;- Enable form fields and table widgets during search and implement search parameter collection with input validation.&#10;- Add support for capturing and saving additional archaeological record fields including dimensions, catalog numbers, references, and excavation details.&#10;- Add support for additional form fields in search dictionary and handle empty searches with warning message.&#10;- Add support for selecting 'AND' or 'OR' logical operator in search queries with multilingual result messages and GIS layer updates.&#10;- Add record management and error handling methods for data update, loading, and table manipulation with encoding error logging and multilingual support.&#10;- Add method to reset all UI fields and tables to initial empty state, including new USM attributes and conditional date logic&#10;- Clear all input fields and reset UI components in the USM form to ensure a clean state for new data entry.&#10;- Clear all input fields and reset relevant UI tables to initial state when creating a new record.&#10;- Clear all form fields and populate them with data from DATA_LIST using the fill_fields method.&#10;- Populate UI fields with additional excavation record attributes to support Archeo 3.0 and ICCD alignment.&#10;- Populate UI fields with corresponding values from DATA_LIST, handling empty or missing numerical fields by setting them to empty strings.&#10;- Add TM field synchronization from TMA table and improve UI data restoration and form field handling with error logging.&#10;- Handle optional numeric input fields by setting them to None if left empty and update DATA_LIST_REC_TEMP to include new USM attributes and catalog fields for Archeo 3.0 and ICCD alignment.&#10;- Add comprehensive data extraction and comparison methods for form fields to support record validation and synchronization.&#10;- Add utility methods for tab enabling, directory access, data type casting, and CSV import into SQLite with platform-specific file handling&#10;- Add support for importing and filtering additional USM-related fields, including UI updates and error handling.&#10;- Add SQLPromptDialog UI for text-to-SQL conversion with mode selection, prompt history, and execution options.&#10;- Add support for Text2SQL API key management, model download, and SQL generation via API or local model with spatial view detection&#10;- Add support for identifying geometry columns and handling spatial queries with result validation and display in table format.&#10;- Add functionality to display SQL query results and geometry info in a table with support for SpatiaLite views and geometry validation&#10;- Add result table population, Excel export, graph plotting, and geometry alias detection functionalities&#10;- Implement feature selection and zoom based on table row selection by matching row data with layer fields and applying appropriate expressions.&#10;- Implement geometry type inference from SQL and add method to create spatial views in PostGIS with geometry registration.&#10;- Add support for creating and loading spatial layers from PostgreSQL and SpatiaLite views with dynamic geometry column selection and connection parameter parsing.&#10;- Add helper methods for detecting geometry columns and enhance spatial view creation for PostGIS and SpatiaLite compatibility.&#10;- Add GraphWindow for plotting data with" />
    <MESSAGE value="- Add initial implementation of US_USM.py.backup with GUI components, language selection, and report generation dependencies&#10;- Add UI sections for language selection, table filtering, and data validation with corresponding backend logic for retrieving and validating excavation data.&#10;- Add pottery data retrieval with filtering, implement checkable combo box for table selection, and create a styled report preview dialog with terminal output and clipboard/save functionality.&#10;- Implement mouse click handling on text edit to open local or external URLs, add logging with color-coded messages, and generate Word reports with TOC and headers.&#10;- Add HTML-to-Word conversion with heading, image, table, and markdown formatting support&#10;- Add support for bold, italic, images with captions, and HTML table conversion to Word document export&#10;- Add support for bolded table headers, image processing with thumbnail replacement and resizing, clipboard copy functionality, and vector database creation for RAG-based data retrieval.&#10;- Add prompt formatting, language-specific instructions, token estimation, and validation methods for archaeological data&#10;- Add image and markdown processing functions to format archaeological content for widget display in HTML.&#10;- Add HTML conversion logic for structured report formatting including headings, lists, tables, and images&#10;- Implement robust data conversion and validation logic with detailed logging and error handling for archaeological analysis steps.&#10;- Refactor report generation to dynamically summarize available data and conditionally retrieve and organize images by section and entity type.&#10;- Add support for pottery summaries, image grouping by entity type, and RAG-based processing for large datasets&#10;- Add RAG-based analysis with support for image-specific questions and integrated report generation per data section.&#10;- Add RAG-based fallback for token limit errors and improve error handling during section processing.&#10;- Add RAG-based error recovery with contextual image inclusion and post-processing to enhance report generation robustness and clarity.&#10;- Add methods to clean text and generate multilingual prompts and tables for materials, pottery, tombs, periodization, and structures data.&#10;- Add markdown table formatter, progress dialog class, and localized initialization for US form&#10;- Add new field mappings for Italian and German localization to support Archeo 3.0 and ICCD alignment.&#10;- Add German and English to Italian field name mappings for archaeological data conversion to support multilingual input normalization.&#10;- Add Italian and German translations for new USM-related fields and update SORT_ITEMS accordingly.&#10;- Add support for German localization of field labels and align them with existing English and Italian mappings for USM and archaeological data fields.&#10;- Add extensive new data fields, initialize GUI components, set up caching and signal connections, and implement natural sorting function for alphanumeric values.&#10;- Connect GUI elements to their respective event handlers and implement get_images_for_entities to retrieve media thumbnails for various entity types with detailed logging.&#10;- Add methods for vector database creation, RAG chain construction, and token-aware data chunking to support retrieval-augmented generation.&#10;- Add data analysis and validation methods for stratigraphy, materials, and pottery with token-aware chunking logic and truncation warnings.&#10;- Add functions to format and generate tables for archaeological data including materials, pottery, US, tombs, structures, and periodization for report generation.&#10;- Add analysis and validation tool generation methods and data processing functions for archaeological site, stratigraphy, materials, and pottery tables.&#10;- Add data processing functions for various archaeological tables with filtering by year or range and site context.&#10;- Add support for 'periodizzazione' and 'struttura' tables with structured extraction and enhance prompt generation for detailed archaeological reports&#10;- Add data extraction, filtering, and validation logic for multiple tables in report generation process.&#10;- Add missing data validation and report generation workflow with OpenAI agent integration and structured formatting.&#10;- Add report generation workflow with user prompts, section parsing, fallback content, and output to Word template&#10;- Add parsing and processing logic for report sections with fallback content for missing data and support for subsections in DOCX generation.&#10;- Improve heading parsing by supporting both hash-prefixed and underline styles and enhance image handling with validation and fallback paths.&#10;- Add logic to populate Word document with metadata, structured sections, formatting, and tables from report data.&#10;- Add method to convert markdown-formatted tables to Word tables with styling and error handling.&#10;- Add support for detecting and cleaning markdown-style headings and placeholders, including fallback handling for missing content with default section text and structured subsection processing.&#10;- Add support for parsing images and markdown tables in subsection content with error handling and formatting options&#10;- Add support for parsing headings, images, and markdown tables in report content and fallback to manual section insertion if placeholders are missing.&#10;- Add formatted tables for pottery, tombs, structures, and periodization to the document with headers and data, and ensure document has meaningful content before saving.&#10;- Improve table styling fallback logic and add robust error handling for applying styles and borders; implement sketchgpt feature for media selection and GPT window launch; add keyboard shortcuts dialog and localized user prompts and warnings.&#10;- Add progress dialog and detailed logging to rapporti update process, and implement area-specific data filtering for enhanced control and error tracking.&#10;- Implement robust update routine for US table entries with error logging, area correction, and UTF-8 validation.&#10;- Add error logging and improve data extraction from GraphML to CSV for archaeological data processing&#10;- Add CSV processing for US table import, deduplicate entries, and enhance relationship validation with inverse mapping for archaeological units&#10;- Add logic to handle and insert rapporti rows based on existing matches and validate inverse relationships in reports&#10;- Add automatic inverse relationship creation with validation and UI update for unit relationships, enhancing consistency and user feedback.&#10;- Add methods for refreshing data, inserting reference records, and filtering the 'Unità Stratigrafiche' table with support for both SQLite and PostgreSQL backends.&#10;- Add database query and UI update logic for filtering and saving 'Unità Stratigrafiche' records with multi-language support and error handling.&#10;- Add methods to populate period, phase, and dating comboboxes from the 'Periodizzazione' table with error handling and UI updates.&#10;- Add methods to update and display 'Dating' fields based on periodization data and enhance document handling and save logic&#10;- Add US navigation and selection logic with progress updates and conditional save prompts.&#10;- Add US record search and selection functionality with localized messages and UI state handling&#10;- Add database connection logic with multilingual error handling and UI initialization for empty and populated states.&#10;- Add multilingual error messages and customize GUI components based on user locale and context.&#10;- Add ComboBox delegates for multiple USM table columns using localized thesaurus data for documentation types, colors, inclusions, textures, and components.&#10;- Add support for drag-and-drop media upload with validation, map preview loading, and media database insertion including thumbnails and associations.&#10;- Add methods to associate media with entities, generate US records, and process media files with type-specific handling and validation&#10;- Add support for 3D model file types and improve media import with thumbnail generation, resize handling, tag assignment, and localized user messages.&#10;- Add multilingual support and logic for selecting and removing tags from US-related images with confirmation dialogs.&#10;- Add pagination, search filtering, and UI enhancements for displaying and tagging untagged images in QListWidget.&#10;- Implement image caching with LRU eviction and enhance QListWidget population with US entity details and pagination.&#10;- Implement navigation and filtering for paginated image lists and enhance item tagging with media-US association and thumbnail preview updates.&#10;- Add 3D model loading, thumbnail generation, and interactive viewer with measurement and debug tools&#10;- Add distance measurement, coordinate verification, and image export functions with debug messages and label rendering in 3D plot.&#10;- Add bounding box measurement toggle with labeled edges and implement 3D model thumbnail generation and media handling enhancements.&#10;- Add error handling for database queries and implement dynamic population of UI combo boxes based on query results with localization support.&#10;- Populate multiple combo boxes with sorted, unique values from thesaurus queries based on specific 'tipologia_sigla' codes.&#10;- Populate multiple combo boxes with sorted unique values from the thesaurus based on specific 'tipologia_sigla' filters for improved data entry consistency.&#10;- Populate multiple combo boxes with distinct, sorted values from the thesaurus based on specific 'tipologia_sigla' codes to support laterizi and litici material attributes.&#10;- Populate multiple comboBoxes with sorted, unique values from database queries based on different 'tipologia_sigla' codes for construction-related attributes.&#10;- Add site connection checks, localized user messages, and media list generation for photos and PDFs with error handling and configuration prompts.&#10;- Add support for additional archaeological USM data fields including dimensions and elevations with language localization for GIS-based descriptions.&#10;- Add extensive field mappings for archaeological data export including USM properties, ICCD alignment, and GIS-derived values&#10;- Add support for exporting US and photo metadata to PDF with multilingual options and progress tracking&#10;- Add German export options, file path setters, and GraphML conversion with UI integration and error handling&#10;- Add support for SQLite data export with recursive query handling for SU context and relationship mapping.&#10;- Add logic to parse and clean stratigraphic relationships, generate an Excel sheet with formatted columns, and display Harris Matrix image with matplotlib.&#10;- Add logic for interactive matrix generation and stratigraphic relationship validation with multilingual support&#10;- Implementa la generazione e salvataggio di report su errori di ordinamento con messaggi localizzati e gestione degli aggiornamenti al database.&#10;- Add UI handlers for GIS and preview toggle buttons, implement feature sorting and selection with multilingual support and error handling.&#10;- Add new record and save functionalities with UI updates and multilingual support for validation messages&#10;- Add interactive API key management and GPT-based error explanation with multilingual success messages for stratigraphic checks&#10;- Add input validation for required text fields and numeric float fields with warning messages for invalid or empty entries.&#10;- Add numeric and length validation with localized warnings for multiple input fields in the form.&#10;- Add input validation for multiple fields with localized error messages and remove strict numeric check on US field to allow alphanumeric values.&#10;- Add input validation for field length and logical consistency in period and phase selection, and implement automatic form check reporting per site.&#10;- Add stratigraphic relationship consistency check with multilingual logging and reciprocal validation&#10;- Add validation for reciprocal stratigraphic relationships and generate multilingual error reports when inconsistencies are found.&#10;- Comment out detailed relationship verification logic to simplify debugging and improve code maintainability.&#10;- Add function to validate consistency between stratigraphic definitions and relationships across different languages.&#10;- Add stratigraphic relationship report generation with multilingual support and logical consistency checks.&#10;- Add stratigraphic relationship validation logic with multilingual report generation for excavation records.&#10;- Add detailed temporal consistency checks for relationship types and generate corresponding multilingual report messages.&#10;- Add support for extracting and saving additional USM layer attributes and related table data from UI inputs with proper type handling and null checks.&#10;- Add new fields to data export for Archeo 3.0 and align with ICCD standards, including detailed USM and LAT attributes&#10;- Add data insertion logic with input validation, error handling, and UI row management for multiple table widgets&#10;- Refactor record navigation and implement site-based filtering in view_all to improve database interaction and user experience.&#10;- Add record navigation and multilingual record deletion confirmation with database cleanup and UI updates&#10;- Add methods for deleting filtered records, resetting search filters, showing selected GIS layers, and updating excavation period codes with multilingual support.&#10;- Add switchable search mode with UI field toggling and multilingual feedback for improved user experience and error handling.&#10;- Enable form fields and table widgets during search and implement search parameter collection with input validation.&#10;- Add support for capturing and saving additional archaeological record fields including dimensions, catalog numbers, references, and excavation details.&#10;- Add support for additional form fields in search dictionary and handle empty searches with warning message.&#10;- Add support for selecting 'AND' or 'OR' logical operator in search queries with multilingual result messages and GIS layer updates.&#10;- Add record management and error handling methods for data update, loading, and table manipulation with encoding error logging and multilingual support.&#10;- Add method to reset all UI fields and tables to initial empty state, including new USM attributes and conditional date logic&#10;- Clear all input fields and reset UI components in the USM form to ensure a clean state for new data entry.&#10;- Clear all input fields and reset relevant UI tables to initial state when creating a new record.&#10;- Clear all form fields and populate them with data from DATA_LIST using the fill_fields method.&#10;- Populate UI fields with additional excavation record attributes to support Archeo 3.0 and ICCD alignment.&#10;- Populate UI fields with corresponding values from DATA_LIST, handling empty or missing numerical fields by setting them to empty strings.&#10;- Add TM field synchronization from TMA table and improve UI data restoration and form field handling with error logging.&#10;- Handle optional numeric input fields by setting them to None if left empty and update DATA_LIST_REC_TEMP to include new USM attributes and catalog fields for Archeo 3.0 and ICCD alignment.&#10;- Add comprehensive data extraction and comparison methods for form fields to support record validation and synchronization.&#10;- Add utility methods for tab enabling, directory access, data type casting, and CSV import into SQLite with platform-specific file handling&#10;- Add support for importing and filtering additional USM-related fields, including UI updates and error handling.&#10;- Add SQLPromptDialog UI for text-to-SQL conversion with mode selection, prompt history, and execution options.&#10;- Add support for Text2SQL API key management, model download, and SQL generation via API or local model with spatial view detection&#10;- Add support for identifying geometry columns and handling spatial queries with result validation and display in table format.&#10;- Add functionality to display SQL query results and geometry info in a table with support for SpatiaLite views and geometry validation&#10;- Add result table population, Excel export, graph plotting, and geometry alias detection functionalities&#10;- Implement feature selection and zoom based on table row selection by matching row data with layer fields and applying appropriate expressions.&#10;- Implement geometry type inference from SQL and add method to create spatial views in PostGIS with geometry registration.&#10;- Add support for creating and loading spatial layers from PostgreSQL and SpatiaLite views with dynamic geometry column selection and connection parameter parsing.&#10;- Add helper methods for detecting geometry columns and enhance spatial view creation for PostGIS and SpatiaLite compatibility.&#10;- Add GraphWindow for plotting data with percentage" />
    <MESSAGE value="- Add initial implementation of US_USM.py.backup with GUI components, language selection, and report generation dependencies&#10;- Add UI sections for language selection, table filtering, and data validation with corresponding backend logic for retrieving and validating excavation data.&#10;- Add pottery data retrieval with filtering, implement checkable combo box for table selection, and create a styled report preview dialog with terminal output and clipboard/save functionality.&#10;- Implement mouse click handling on text edit to open local or external URLs, add logging with color-coded messages, and generate Word reports with TOC and headers.&#10;- Add HTML-to-Word conversion with heading, image, table, and markdown formatting support&#10;- Add support for bold, italic, images with captions, and HTML table conversion to Word document export&#10;- Add support for bolded table headers, image processing with thumbnail replacement and resizing, clipboard copy functionality, and vector database creation for RAG-based data retrieval.&#10;- Add prompt formatting, language-specific instructions, token estimation, and validation methods for archaeological data&#10;- Add image and markdown processing functions to format archaeological content for widget display in HTML.&#10;- Add HTML conversion logic for structured report formatting including headings, lists, tables, and images&#10;- Implement robust data conversion and validation logic with detailed logging and error handling for archaeological analysis steps.&#10;- Refactor report generation to dynamically summarize available data and conditionally retrieve and organize images by section and entity type.&#10;- Add support for pottery summaries, image grouping by entity type, and RAG-based processing for large datasets&#10;- Add RAG-based analysis with support for image-specific questions and integrated report generation per data section.&#10;- Add RAG-based fallback for token limit errors and improve error handling during section processing.&#10;- Add RAG-based error recovery with contextual image inclusion and post-processing to enhance report generation robustness and clarity.&#10;- Add methods to clean text and generate multilingual prompts and tables for materials, pottery, tombs, periodization, and structures data.&#10;- Add markdown table formatter, progress dialog class, and localized initialization for US form&#10;- Add new field mappings for Italian and German localization to support Archeo 3.0 and ICCD alignment.&#10;- Add German and English to Italian field name mappings for archaeological data conversion to support multilingual input normalization.&#10;- Add Italian and German translations for new USM-related fields and update SORT_ITEMS accordingly.&#10;- Add support for German localization of field labels and align them with existing English and Italian mappings for USM and archaeological data fields.&#10;- Add extensive new data fields, initialize GUI components, set up caching and signal connections, and implement natural sorting function for alphanumeric values.&#10;- Connect GUI elements to their respective event handlers and implement get_images_for_entities to retrieve media thumbnails for various entity types with detailed logging.&#10;- Add methods for vector database creation, RAG chain construction, and token-aware data chunking to support retrieval-augmented generation.&#10;- Add data analysis and validation methods for stratigraphy, materials, and pottery with token-aware chunking logic and truncation warnings.&#10;- Add functions to format and generate tables for archaeological data including materials, pottery, US, tombs, structures, and periodization for report generation.&#10;- Add analysis and validation tool generation methods and data processing functions for archaeological site, stratigraphy, materials, and pottery tables.&#10;- Add data processing functions for various archaeological tables with filtering by year or range and site context.&#10;- Add support for 'periodizzazione' and 'struttura' tables with structured extraction and enhance prompt generation for detailed archaeological reports&#10;- Add data extraction, filtering, and validation logic for multiple tables in report generation process.&#10;- Add missing data validation and report generation workflow with OpenAI agent integration and structured formatting.&#10;- Add report generation workflow with user prompts, section parsing, fallback content, and output to Word template&#10;- Add parsing and processing logic for report sections with fallback content for missing data and support for subsections in DOCX generation.&#10;- Improve heading parsing by supporting both hash-prefixed and underline styles and enhance image handling with validation and fallback paths.&#10;- Add logic to populate Word document with metadata, structured sections, formatting, and tables from report data.&#10;- Add method to convert markdown-formatted tables to Word tables with styling and error handling.&#10;- Add support for detecting and cleaning markdown-style headings and placeholders, including fallback handling for missing content with default section text and structured subsection processing.&#10;- Add support for parsing images and markdown tables in subsection content with error handling and formatting options&#10;- Add support for parsing headings, images, and markdown tables in report content and fallback to manual section insertion if placeholders are missing.&#10;- Add formatted tables for pottery, tombs, structures, and periodization to the document with headers and data, and ensure document has meaningful content before saving.&#10;- Improve table styling fallback logic and add robust error handling for applying styles and borders; implement sketchgpt feature for media selection and GPT window launch; add keyboard shortcuts dialog and localized user prompts and warnings.&#10;- Add progress dialog and detailed logging to rapporti update process, and implement area-specific data filtering for enhanced control and error tracking.&#10;- Implement robust update routine for US table entries with error logging, area correction, and UTF-8 validation.&#10;- Add error logging and improve data extraction from GraphML to CSV for archaeological data processing&#10;- Add CSV processing for US table import, deduplicate entries, and enhance relationship validation with inverse mapping for archaeological units&#10;- Add logic to handle and insert rapporti rows based on existing matches and validate inverse relationships in reports&#10;- Add automatic inverse relationship creation with validation and UI update for unit relationships, enhancing consistency and user feedback.&#10;- Add methods for refreshing data, inserting reference records, and filtering the 'Unità Stratigrafiche' table with support for both SQLite and PostgreSQL backends.&#10;- Add database query and UI update logic for filtering and saving 'Unità Stratigrafiche' records with multi-language support and error handling.&#10;- Add methods to populate period, phase, and dating comboboxes from the 'Periodizzazione' table with error handling and UI updates.&#10;- Add methods to update and display 'Dating' fields based on periodization data and enhance document handling and save logic&#10;- Add US navigation and selection logic with progress updates and conditional save prompts.&#10;- Add US record search and selection functionality with localized messages and UI state handling&#10;- Add database connection logic with multilingual error handling and UI initialization for empty and populated states.&#10;- Add multilingual error messages and customize GUI components based on user locale and context.&#10;- Add ComboBox delegates for multiple USM table columns using localized thesaurus data for documentation types, colors, inclusions, textures, and components.&#10;- Add support for drag-and-drop media upload with validation, map preview loading, and media database insertion including thumbnails and associations.&#10;- Add methods to associate media with entities, generate US records, and process media files with type-specific handling and validation&#10;- Add support for 3D model file types and improve media import with thumbnail generation, resize handling, tag assignment, and localized user messages.&#10;- Add multilingual support and logic for selecting and removing tags from US-related images with confirmation dialogs.&#10;- Add pagination, search filtering, and UI enhancements for displaying and tagging untagged images in QListWidget.&#10;- Implement image caching with LRU eviction and enhance QListWidget population with US entity details and pagination.&#10;- Implement navigation and filtering for paginated image lists and enhance item tagging with media-US association and thumbnail preview updates.&#10;- Add 3D model loading, thumbnail generation, and interactive viewer with measurement and debug tools&#10;- Add distance measurement, coordinate verification, and image export functions with debug messages and label rendering in 3D plot.&#10;- Add bounding box measurement toggle with labeled edges and implement 3D model thumbnail generation and media handling enhancements.&#10;- Add error handling for database queries and implement dynamic population of UI combo boxes based on query results with localization support.&#10;- Populate multiple combo boxes with sorted, unique values from thesaurus queries based on specific 'tipologia_sigla' codes.&#10;- Populate multiple combo boxes with sorted unique values from the thesaurus based on specific 'tipologia_sigla' filters for improved data entry consistency.&#10;- Populate multiple combo boxes with distinct, sorted values from the thesaurus based on specific 'tipologia_sigla' codes to support laterizi and litici material attributes.&#10;- Populate multiple comboBoxes with sorted, unique values from database queries based on different 'tipologia_sigla' codes for construction-related attributes.&#10;- Add site connection checks, localized user messages, and media list generation for photos and PDFs with error handling and configuration prompts.&#10;- Add support for additional archaeological USM data fields including dimensions and elevations with language localization for GIS-based descriptions.&#10;- Add extensive field mappings for archaeological data export including USM properties, ICCD alignment, and GIS-derived values&#10;- Add support for exporting US and photo metadata to PDF with multilingual options and progress tracking&#10;- Add German export options, file path setters, and GraphML conversion with UI integration and error handling&#10;- Add support for SQLite data export with recursive query handling for SU context and relationship mapping.&#10;- Add logic to parse and clean stratigraphic relationships, generate an Excel sheet with formatted columns, and display Harris Matrix image with matplotlib.&#10;- Add logic for interactive matrix generation and stratigraphic relationship validation with multilingual support&#10;- Implementa la generazione e salvataggio di report su errori di ordinamento con messaggi localizzati e gestione degli aggiornamenti al database.&#10;- Add UI handlers for GIS and preview toggle buttons, implement feature sorting and selection with multilingual support and error handling.&#10;- Add new record and save functionalities with UI updates and multilingual support for validation messages&#10;- Add interactive API key management and GPT-based error explanation with multilingual success messages for stratigraphic checks&#10;- Add input validation for required text fields and numeric float fields with warning messages for invalid or empty entries.&#10;- Add numeric and length validation with localized warnings for multiple input fields in the form.&#10;- Add input validation for multiple fields with localized error messages and remove strict numeric check on US field to allow alphanumeric values.&#10;- Add input validation for field length and logical consistency in period and phase selection, and implement automatic form check reporting per site.&#10;- Add stratigraphic relationship consistency check with multilingual logging and reciprocal validation&#10;- Add validation for reciprocal stratigraphic relationships and generate multilingual error reports when inconsistencies are found.&#10;- Comment out detailed relationship verification logic to simplify debugging and improve code maintainability.&#10;- Add function to validate consistency between stratigraphic definitions and relationships across different languages.&#10;- Add stratigraphic relationship report generation with multilingual support and logical consistency checks.&#10;- Add stratigraphic relationship validation logic with multilingual report generation for excavation records.&#10;- Add detailed temporal consistency checks for relationship types and generate corresponding multilingual report messages.&#10;- Add support for extracting and saving additional USM layer attributes and related table data from UI inputs with proper type handling and null checks.&#10;- Add new fields to data export for Archeo 3.0 and align with ICCD standards, including detailed USM and LAT attributes&#10;- Add data insertion logic with input validation, error handling, and UI row management for multiple table widgets&#10;- Refactor record navigation and implement site-based filtering in view_all to improve database interaction and user experience.&#10;- Add record navigation and multilingual record deletion confirmation with database cleanup and UI updates&#10;- Add methods for deleting filtered records, resetting search filters, showing selected GIS layers, and updating excavation period codes with multilingual support.&#10;- Add switchable search mode with UI field toggling and multilingual feedback for improved user experience and error handling.&#10;- Enable form fields and table widgets during search and implement search parameter collection with input validation.&#10;- Add support for capturing and saving additional archaeological record fields including dimensions, catalog numbers, references, and excavation details.&#10;- Add support for additional form fields in search dictionary and handle empty searches with warning message.&#10;- Add support for selecting 'AND' or 'OR' logical operator in search queries with multilingual result messages and GIS layer updates.&#10;- Add record management and error handling methods for data update, loading, and table manipulation with encoding error logging and multilingual support.&#10;- Add method to reset all UI fields and tables to initial empty state, including new USM attributes and conditional date logic&#10;- Clear all input fields and reset UI components in the USM form to ensure a clean state for new data entry.&#10;- Clear all input fields and reset relevant UI tables to initial state when creating a new record.&#10;- Clear all form fields and populate them with data from DATA_LIST using the fill_fields method.&#10;- Populate UI fields with additional excavation record attributes to support Archeo 3.0 and ICCD alignment.&#10;- Populate UI fields with corresponding values from DATA_LIST, handling empty or missing numerical fields by setting them to empty strings.&#10;- Add TM field synchronization from TMA table and improve UI data restoration and form field handling with error logging.&#10;- Handle optional numeric input fields by setting them to None if left empty and update DATA_LIST_REC_TEMP to include new USM attributes and catalog fields for Archeo 3.0 and ICCD alignment.&#10;- Add comprehensive data extraction and comparison methods for form fields to support record validation and synchronization.&#10;- Add utility methods for tab enabling, directory access, data type casting, and CSV import into SQLite with platform-specific file handling&#10;- Add support for importing and filtering additional USM-related fields, including UI updates and error handling.&#10;- Add SQLPromptDialog UI for text-to-SQL conversion with mode selection, prompt history, and execution options.&#10;- Add support for Text2SQL API key management, model download, and SQL generation via API or local model with spatial view detection&#10;- Add support for identifying geometry columns and handling spatial queries with result validation and display in table format.&#10;- Add functionality to display SQL query results and geometry info in a table with support for SpatiaLite views and geometry validation&#10;- Add result table population, Excel export, graph plotting, and geometry alias detection functionalities&#10;- Implement feature selection and zoom based on table row selection by matching row data with layer fields and applying appropriate expressions.&#10;- Implement geometry type inference from SQL and add method to create spatial views in PostGIS with geometry registration.&#10;- Add support for creating and loading spatial layers from PostgreSQL and SpatiaLite views with dynamic geometry column selection and connection parameter parsing.&#10;- Add helper methods for detecting geometry columns and enhance spatial view creation for PostGIS and SpatiaLite compatibility.&#10;- Add GraphWindow for plotting data with percentage bars" />
    <MESSAGE value="- Add initial implementation of US_USM.py.backup with GUI components, language selection, and report generation dependencies&#10;- Add UI sections for language selection, table filtering, and data validation with corresponding backend logic for retrieving and validating excavation data.&#10;- Add pottery data retrieval with filtering, implement checkable combo box for table selection, and create a styled report preview dialog with terminal output and clipboard/save functionality.&#10;- Implement mouse click handling on text edit to open local or external URLs, add logging with color-coded messages, and generate Word reports with TOC and headers.&#10;- Add HTML-to-Word conversion with heading, image, table, and markdown formatting support&#10;- Add support for bold, italic, images with captions, and HTML table conversion to Word document export&#10;- Add support for bolded table headers, image processing with thumbnail replacement and resizing, clipboard copy functionality, and vector database creation for RAG-based data retrieval.&#10;- Add prompt formatting, language-specific instructions, token estimation, and validation methods for archaeological data&#10;- Add image and markdown processing functions to format archaeological content for widget display in HTML.&#10;- Add HTML conversion logic for structured report formatting including headings, lists, tables, and images&#10;- Implement robust data conversion and validation logic with detailed logging and error handling for archaeological analysis steps.&#10;- Refactor report generation to dynamically summarize available data and conditionally retrieve and organize images by section and entity type.&#10;- Add support for pottery summaries, image grouping by entity type, and RAG-based processing for large datasets&#10;- Add RAG-based analysis with support for image-specific questions and integrated report generation per data section.&#10;- Add RAG-based fallback for token limit errors and improve error handling during section processing.&#10;- Add RAG-based error recovery with contextual image inclusion and post-processing to enhance report generation robustness and clarity.&#10;- Add methods to clean text and generate multilingual prompts and tables for materials, pottery, tombs, periodization, and structures data.&#10;- Add markdown table formatter, progress dialog class, and localized initialization for US form&#10;- Add new field mappings for Italian and German localization to support Archeo 3.0 and ICCD alignment.&#10;- Add German and English to Italian field name mappings for archaeological data conversion to support multilingual input normalization.&#10;- Add Italian and German translations for new USM-related fields and update SORT_ITEMS accordingly.&#10;- Add support for German localization of field labels and align them with existing English and Italian mappings for USM and archaeological data fields.&#10;- Add extensive new data fields, initialize GUI components, set up caching and signal connections, and implement natural sorting function for alphanumeric values.&#10;- Connect GUI elements to their respective event handlers and implement get_images_for_entities to retrieve media thumbnails for various entity types with detailed logging.&#10;- Add methods for vector database creation, RAG chain construction, and token-aware data chunking to support retrieval-augmented generation.&#10;- Add data analysis and validation methods for stratigraphy, materials, and pottery with token-aware chunking logic and truncation warnings.&#10;- Add functions to format and generate tables for archaeological data including materials, pottery, US, tombs, structures, and periodization for report generation.&#10;- Add analysis and validation tool generation methods and data processing functions for archaeological site, stratigraphy, materials, and pottery tables.&#10;- Add data processing functions for various archaeological tables with filtering by year or range and site context.&#10;- Add support for 'periodizzazione' and 'struttura' tables with structured extraction and enhance prompt generation for detailed archaeological reports&#10;- Add data extraction, filtering, and validation logic for multiple tables in report generation process.&#10;- Add missing data validation and report generation workflow with OpenAI agent integration and structured formatting.&#10;- Add report generation workflow with user prompts, section parsing, fallback content, and output to Word template&#10;- Add parsing and processing logic for report sections with fallback content for missing data and support for subsections in DOCX generation.&#10;- Improve heading parsing by supporting both hash-prefixed and underline styles and enhance image handling with validation and fallback paths.&#10;- Add logic to populate Word document with metadata, structured sections, formatting, and tables from report data.&#10;- Add method to convert markdown-formatted tables to Word tables with styling and error handling.&#10;- Add support for detecting and cleaning markdown-style headings and placeholders, including fallback handling for missing content with default section text and structured subsection processing.&#10;- Add support for parsing images and markdown tables in subsection content with error handling and formatting options&#10;- Add support for parsing headings, images, and markdown tables in report content and fallback to manual section insertion if placeholders are missing.&#10;- Add formatted tables for pottery, tombs, structures, and periodization to the document with headers and data, and ensure document has meaningful content before saving.&#10;- Improve table styling fallback logic and add robust error handling for applying styles and borders; implement sketchgpt feature for media selection and GPT window launch; add keyboard shortcuts dialog and localized user prompts and warnings.&#10;- Add progress dialog and detailed logging to rapporti update process, and implement area-specific data filtering for enhanced control and error tracking.&#10;- Implement robust update routine for US table entries with error logging, area correction, and UTF-8 validation.&#10;- Add error logging and improve data extraction from GraphML to CSV for archaeological data processing&#10;- Add CSV processing for US table import, deduplicate entries, and enhance relationship validation with inverse mapping for archaeological units&#10;- Add logic to handle and insert rapporti rows based on existing matches and validate inverse relationships in reports&#10;- Add automatic inverse relationship creation with validation and UI update for unit relationships, enhancing consistency and user feedback.&#10;- Add methods for refreshing data, inserting reference records, and filtering the 'Unità Stratigrafiche' table with support for both SQLite and PostgreSQL backends.&#10;- Add database query and UI update logic for filtering and saving 'Unità Stratigrafiche' records with multi-language support and error handling.&#10;- Add methods to populate period, phase, and dating comboboxes from the 'Periodizzazione' table with error handling and UI updates.&#10;- Add methods to update and display 'Dating' fields based on periodization data and enhance document handling and save logic&#10;- Add US navigation and selection logic with progress updates and conditional save prompts.&#10;- Add US record search and selection functionality with localized messages and UI state handling&#10;- Add database connection logic with multilingual error handling and UI initialization for empty and populated states.&#10;- Add multilingual error messages and customize GUI components based on user locale and context.&#10;- Add ComboBox delegates for multiple USM table columns using localized thesaurus data for documentation types, colors, inclusions, textures, and components.&#10;- Add support for drag-and-drop media upload with validation, map preview loading, and media database insertion including thumbnails and associations.&#10;- Add methods to associate media with entities, generate US records, and process media files with type-specific handling and validation&#10;- Add support for 3D model file types and improve media import with thumbnail generation, resize handling, tag assignment, and localized user messages.&#10;- Add multilingual support and logic for selecting and removing tags from US-related images with confirmation dialogs.&#10;- Add pagination, search filtering, and UI enhancements for displaying and tagging untagged images in QListWidget.&#10;- Implement image caching with LRU eviction and enhance QListWidget population with US entity details and pagination.&#10;- Implement navigation and filtering for paginated image lists and enhance item tagging with media-US association and thumbnail preview updates.&#10;- Add 3D model loading, thumbnail generation, and interactive viewer with measurement and debug tools&#10;- Add distance measurement, coordinate verification, and image export functions with debug messages and label rendering in 3D plot.&#10;- Add bounding box measurement toggle with labeled edges and implement 3D model thumbnail generation and media handling enhancements.&#10;- Add error handling for database queries and implement dynamic population of UI combo boxes based on query results with localization support.&#10;- Populate multiple combo boxes with sorted, unique values from thesaurus queries based on specific 'tipologia_sigla' codes.&#10;- Populate multiple combo boxes with sorted unique values from the thesaurus based on specific 'tipologia_sigla' filters for improved data entry consistency.&#10;- Populate multiple combo boxes with distinct, sorted values from the thesaurus based on specific 'tipologia_sigla' codes to support laterizi and litici material attributes.&#10;- Populate multiple comboBoxes with sorted, unique values from database queries based on different 'tipologia_sigla' codes for construction-related attributes.&#10;- Add site connection checks, localized user messages, and media list generation for photos and PDFs with error handling and configuration prompts.&#10;- Add support for additional archaeological USM data fields including dimensions and elevations with language localization for GIS-based descriptions.&#10;- Add extensive field mappings for archaeological data export including USM properties, ICCD alignment, and GIS-derived values&#10;- Add support for exporting US and photo metadata to PDF with multilingual options and progress tracking&#10;- Add German export options, file path setters, and GraphML conversion with UI integration and error handling&#10;- Add support for SQLite data export with recursive query handling for SU context and relationship mapping.&#10;- Add logic to parse and clean stratigraphic relationships, generate an Excel sheet with formatted columns, and display Harris Matrix image with matplotlib.&#10;- Add logic for interactive matrix generation and stratigraphic relationship validation with multilingual support&#10;- Implementa la generazione e salvataggio di report su errori di ordinamento con messaggi localizzati e gestione degli aggiornamenti al database.&#10;- Add UI handlers for GIS and preview toggle buttons, implement feature sorting and selection with multilingual support and error handling.&#10;- Add new record and save functionalities with UI updates and multilingual support for validation messages&#10;- Add interactive API key management and GPT-based error explanation with multilingual success messages for stratigraphic checks&#10;- Add input validation for required text fields and numeric float fields with warning messages for invalid or empty entries.&#10;- Add numeric and length validation with localized warnings for multiple input fields in the form.&#10;- Add input validation for multiple fields with localized error messages and remove strict numeric check on US field to allow alphanumeric values.&#10;- Add input validation for field length and logical consistency in period and phase selection, and implement automatic form check reporting per site.&#10;- Add stratigraphic relationship consistency check with multilingual logging and reciprocal validation&#10;- Add validation for reciprocal stratigraphic relationships and generate multilingual error reports when inconsistencies are found.&#10;- Comment out detailed relationship verification logic to simplify debugging and improve code maintainability.&#10;- Add function to validate consistency between stratigraphic definitions and relationships across different languages.&#10;- Add stratigraphic relationship report generation with multilingual support and logical consistency checks.&#10;- Add stratigraphic relationship validation logic with multilingual report generation for excavation records.&#10;- Add detailed temporal consistency checks for relationship types and generate corresponding multilingual report messages.&#10;- Add support for extracting and saving additional USM layer attributes and related table data from UI inputs with proper type handling and null checks.&#10;- Add new fields to data export for Archeo 3.0 and align with ICCD standards, including detailed USM and LAT attributes&#10;- Add data insertion logic with input validation, error handling, and UI row management for multiple table widgets&#10;- Refactor record navigation and implement site-based filtering in view_all to improve database interaction and user experience.&#10;- Add record navigation and multilingual record deletion confirmation with database cleanup and UI updates&#10;- Add methods for deleting filtered records, resetting search filters, showing selected GIS layers, and updating excavation period codes with multilingual support.&#10;- Add switchable search mode with UI field toggling and multilingual feedback for improved user experience and error handling.&#10;- Enable form fields and table widgets during search and implement search parameter collection with input validation.&#10;- Add support for capturing and saving additional archaeological record fields including dimensions, catalog numbers, references, and excavation details.&#10;- Add support for additional form fields in search dictionary and handle empty searches with warning message.&#10;- Add support for selecting 'AND' or 'OR' logical operator in search queries with multilingual result messages and GIS layer updates.&#10;- Add record management and error handling methods for data update, loading, and table manipulation with encoding error logging and multilingual support.&#10;- Add method to reset all UI fields and tables to initial empty state, including new USM attributes and conditional date logic&#10;- Clear all input fields and reset UI components in the USM form to ensure a clean state for new data entry.&#10;- Clear all input fields and reset relevant UI tables to initial state when creating a new record.&#10;- Clear all form fields and populate them with data from DATA_LIST using the fill_fields method.&#10;- Populate UI fields with additional excavation record attributes to support Archeo 3.0 and ICCD alignment.&#10;- Populate UI fields with corresponding values from DATA_LIST, handling empty or missing numerical fields by setting them to empty strings.&#10;- Add TM field synchronization from TMA table and improve UI data restoration and form field handling with error logging.&#10;- Handle optional numeric input fields by setting them to None if left empty and update DATA_LIST_REC_TEMP to include new USM attributes and catalog fields for Archeo 3.0 and ICCD alignment.&#10;- Add comprehensive data extraction and comparison methods for form fields to support record validation and synchronization.&#10;- Add utility methods for tab enabling, directory access, data type casting, and CSV import into SQLite with platform-specific file handling&#10;- Add support for importing and filtering additional USM-related fields, including UI updates and error handling.&#10;- Add SQLPromptDialog UI for text-to-SQL conversion with mode selection, prompt history, and execution options.&#10;- Add support for Text2SQL API key management, model download, and SQL generation via API or local model with spatial view detection&#10;- Add support for identifying geometry columns and handling spatial queries with result validation and display in table format.&#10;- Add functionality to display SQL query results and geometry info in a table with support for SpatiaLite views and geometry validation&#10;- Add result table population, Excel export, graph plotting, and geometry alias detection functionalities&#10;- Implement feature selection and zoom based on table row selection by matching row data with layer fields and applying appropriate expressions.&#10;- Implement geometry type inference from SQL and add method to create spatial views in PostGIS with geometry registration.&#10;- Add support for creating and loading spatial layers from PostgreSQL and SpatiaLite views with dynamic geometry column selection and connection parameter parsing.&#10;- Add helper methods for detecting geometry columns and enhance spatial view creation for PostGIS and SpatiaLite compatibility.&#10;- Add GraphWindow for plotting data with percentage bars and" />
    <MESSAGE value="- Add initial implementation of US_USM.py.backup with GUI components, language selection, and report generation dependencies&#10;- Add UI sections for language selection, table filtering, and data validation with corresponding backend logic for retrieving and validating excavation data.&#10;- Add pottery data retrieval with filtering, implement checkable combo box for table selection, and create a styled report preview dialog with terminal output and clipboard/save functionality.&#10;- Implement mouse click handling on text edit to open local or external URLs, add logging with color-coded messages, and generate Word reports with TOC and headers.&#10;- Add HTML-to-Word conversion with heading, image, table, and markdown formatting support&#10;- Add support for bold, italic, images with captions, and HTML table conversion to Word document export&#10;- Add support for bolded table headers, image processing with thumbnail replacement and resizing, clipboard copy functionality, and vector database creation for RAG-based data retrieval.&#10;- Add prompt formatting, language-specific instructions, token estimation, and validation methods for archaeological data&#10;- Add image and markdown processing functions to format archaeological content for widget display in HTML.&#10;- Add HTML conversion logic for structured report formatting including headings, lists, tables, and images&#10;- Implement robust data conversion and validation logic with detailed logging and error handling for archaeological analysis steps.&#10;- Refactor report generation to dynamically summarize available data and conditionally retrieve and organize images by section and entity type.&#10;- Add support for pottery summaries, image grouping by entity type, and RAG-based processing for large datasets&#10;- Add RAG-based analysis with support for image-specific questions and integrated report generation per data section.&#10;- Add RAG-based fallback for token limit errors and improve error handling during section processing.&#10;- Add RAG-based error recovery with contextual image inclusion and post-processing to enhance report generation robustness and clarity.&#10;- Add methods to clean text and generate multilingual prompts and tables for materials, pottery, tombs, periodization, and structures data.&#10;- Add markdown table formatter, progress dialog class, and localized initialization for US form&#10;- Add new field mappings for Italian and German localization to support Archeo 3.0 and ICCD alignment.&#10;- Add German and English to Italian field name mappings for archaeological data conversion to support multilingual input normalization.&#10;- Add Italian and German translations for new USM-related fields and update SORT_ITEMS accordingly.&#10;- Add support for German localization of field labels and align them with existing English and Italian mappings for USM and archaeological data fields.&#10;- Add extensive new data fields, initialize GUI components, set up caching and signal connections, and implement natural sorting function for alphanumeric values.&#10;- Connect GUI elements to their respective event handlers and implement get_images_for_entities to retrieve media thumbnails for various entity types with detailed logging.&#10;- Add methods for vector database creation, RAG chain construction, and token-aware data chunking to support retrieval-augmented generation.&#10;- Add data analysis and validation methods for stratigraphy, materials, and pottery with token-aware chunking logic and truncation warnings.&#10;- Add functions to format and generate tables for archaeological data including materials, pottery, US, tombs, structures, and periodization for report generation.&#10;- Add analysis and validation tool generation methods and data processing functions for archaeological site, stratigraphy, materials, and pottery tables.&#10;- Add data processing functions for various archaeological tables with filtering by year or range and site context.&#10;- Add support for 'periodizzazione' and 'struttura' tables with structured extraction and enhance prompt generation for detailed archaeological reports&#10;- Add data extraction, filtering, and validation logic for multiple tables in report generation process.&#10;- Add missing data validation and report generation workflow with OpenAI agent integration and structured formatting.&#10;- Add report generation workflow with user prompts, section parsing, fallback content, and output to Word template&#10;- Add parsing and processing logic for report sections with fallback content for missing data and support for subsections in DOCX generation.&#10;- Improve heading parsing by supporting both hash-prefixed and underline styles and enhance image handling with validation and fallback paths.&#10;- Add logic to populate Word document with metadata, structured sections, formatting, and tables from report data.&#10;- Add method to convert markdown-formatted tables to Word tables with styling and error handling.&#10;- Add support for detecting and cleaning markdown-style headings and placeholders, including fallback handling for missing content with default section text and structured subsection processing.&#10;- Add support for parsing images and markdown tables in subsection content with error handling and formatting options&#10;- Add support for parsing headings, images, and markdown tables in report content and fallback to manual section insertion if placeholders are missing.&#10;- Add formatted tables for pottery, tombs, structures, and periodization to the document with headers and data, and ensure document has meaningful content before saving.&#10;- Improve table styling fallback logic and add robust error handling for applying styles and borders; implement sketchgpt feature for media selection and GPT window launch; add keyboard shortcuts dialog and localized user prompts and warnings.&#10;- Add progress dialog and detailed logging to rapporti update process, and implement area-specific data filtering for enhanced control and error tracking.&#10;- Implement robust update routine for US table entries with error logging, area correction, and UTF-8 validation.&#10;- Add error logging and improve data extraction from GraphML to CSV for archaeological data processing&#10;- Add CSV processing for US table import, deduplicate entries, and enhance relationship validation with inverse mapping for archaeological units&#10;- Add logic to handle and insert rapporti rows based on existing matches and validate inverse relationships in reports&#10;- Add automatic inverse relationship creation with validation and UI update for unit relationships, enhancing consistency and user feedback.&#10;- Add methods for refreshing data, inserting reference records, and filtering the 'Unità Stratigrafiche' table with support for both SQLite and PostgreSQL backends.&#10;- Add database query and UI update logic for filtering and saving 'Unità Stratigrafiche' records with multi-language support and error handling.&#10;- Add methods to populate period, phase, and dating comboboxes from the 'Periodizzazione' table with error handling and UI updates.&#10;- Add methods to update and display 'Dating' fields based on periodization data and enhance document handling and save logic&#10;- Add US navigation and selection logic with progress updates and conditional save prompts.&#10;- Add US record search and selection functionality with localized messages and UI state handling&#10;- Add database connection logic with multilingual error handling and UI initialization for empty and populated states.&#10;- Add multilingual error messages and customize GUI components based on user locale and context.&#10;- Add ComboBox delegates for multiple USM table columns using localized thesaurus data for documentation types, colors, inclusions, textures, and components.&#10;- Add support for drag-and-drop media upload with validation, map preview loading, and media database insertion including thumbnails and associations.&#10;- Add methods to associate media with entities, generate US records, and process media files with type-specific handling and validation&#10;- Add support for 3D model file types and improve media import with thumbnail generation, resize handling, tag assignment, and localized user messages.&#10;- Add multilingual support and logic for selecting and removing tags from US-related images with confirmation dialogs.&#10;- Add pagination, search filtering, and UI enhancements for displaying and tagging untagged images in QListWidget.&#10;- Implement image caching with LRU eviction and enhance QListWidget population with US entity details and pagination.&#10;- Implement navigation and filtering for paginated image lists and enhance item tagging with media-US association and thumbnail preview updates.&#10;- Add 3D model loading, thumbnail generation, and interactive viewer with measurement and debug tools&#10;- Add distance measurement, coordinate verification, and image export functions with debug messages and label rendering in 3D plot.&#10;- Add bounding box measurement toggle with labeled edges and implement 3D model thumbnail generation and media handling enhancements.&#10;- Add error handling for database queries and implement dynamic population of UI combo boxes based on query results with localization support.&#10;- Populate multiple combo boxes with sorted, unique values from thesaurus queries based on specific 'tipologia_sigla' codes.&#10;- Populate multiple combo boxes with sorted unique values from the thesaurus based on specific 'tipologia_sigla' filters for improved data entry consistency.&#10;- Populate multiple combo boxes with distinct, sorted values from the thesaurus based on specific 'tipologia_sigla' codes to support laterizi and litici material attributes.&#10;- Populate multiple comboBoxes with sorted, unique values from database queries based on different 'tipologia_sigla' codes for construction-related attributes.&#10;- Add site connection checks, localized user messages, and media list generation for photos and PDFs with error handling and configuration prompts.&#10;- Add support for additional archaeological USM data fields including dimensions and elevations with language localization for GIS-based descriptions.&#10;- Add extensive field mappings for archaeological data export including USM properties, ICCD alignment, and GIS-derived values&#10;- Add support for exporting US and photo metadata to PDF with multilingual options and progress tracking&#10;- Add German export options, file path setters, and GraphML conversion with UI integration and error handling&#10;- Add support for SQLite data export with recursive query handling for SU context and relationship mapping.&#10;- Add logic to parse and clean stratigraphic relationships, generate an Excel sheet with formatted columns, and display Harris Matrix image with matplotlib.&#10;- Add logic for interactive matrix generation and stratigraphic relationship validation with multilingual support&#10;- Implementa la generazione e salvataggio di report su errori di ordinamento con messaggi localizzati e gestione degli aggiornamenti al database.&#10;- Add UI handlers for GIS and preview toggle buttons, implement feature sorting and selection with multilingual support and error handling.&#10;- Add new record and save functionalities with UI updates and multilingual support for validation messages&#10;- Add interactive API key management and GPT-based error explanation with multilingual success messages for stratigraphic checks&#10;- Add input validation for required text fields and numeric float fields with warning messages for invalid or empty entries.&#10;- Add numeric and length validation with localized warnings for multiple input fields in the form.&#10;- Add input validation for multiple fields with localized error messages and remove strict numeric check on US field to allow alphanumeric values.&#10;- Add input validation for field length and logical consistency in period and phase selection, and implement automatic form check reporting per site.&#10;- Add stratigraphic relationship consistency check with multilingual logging and reciprocal validation&#10;- Add validation for reciprocal stratigraphic relationships and generate multilingual error reports when inconsistencies are found.&#10;- Comment out detailed relationship verification logic to simplify debugging and improve code maintainability.&#10;- Add function to validate consistency between stratigraphic definitions and relationships across different languages.&#10;- Add stratigraphic relationship report generation with multilingual support and logical consistency checks.&#10;- Add stratigraphic relationship validation logic with multilingual report generation for excavation records.&#10;- Add detailed temporal consistency checks for relationship types and generate corresponding multilingual report messages.&#10;- Add support for extracting and saving additional USM layer attributes and related table data from UI inputs with proper type handling and null checks.&#10;- Add new fields to data export for Archeo 3.0 and align with ICCD standards, including detailed USM and LAT attributes&#10;- Add data insertion logic with input validation, error handling, and UI row management for multiple table widgets&#10;- Refactor record navigation and implement site-based filtering in view_all to improve database interaction and user experience.&#10;- Add record navigation and multilingual record deletion confirmation with database cleanup and UI updates&#10;- Add methods for deleting filtered records, resetting search filters, showing selected GIS layers, and updating excavation period codes with multilingual support.&#10;- Add switchable search mode with UI field toggling and multilingual feedback for improved user experience and error handling.&#10;- Enable form fields and table widgets during search and implement search parameter collection with input validation.&#10;- Add support for capturing and saving additional archaeological record fields including dimensions, catalog numbers, references, and excavation details.&#10;- Add support for additional form fields in search dictionary and handle empty searches with warning message.&#10;- Add support for selecting 'AND' or 'OR' logical operator in search queries with multilingual result messages and GIS layer updates.&#10;- Add record management and error handling methods for data update, loading, and table manipulation with encoding error logging and multilingual support.&#10;- Add method to reset all UI fields and tables to initial empty state, including new USM attributes and conditional date logic&#10;- Clear all input fields and reset UI components in the USM form to ensure a clean state for new data entry.&#10;- Clear all input fields and reset relevant UI tables to initial state when creating a new record.&#10;- Clear all form fields and populate them with data from DATA_LIST using the fill_fields method.&#10;- Populate UI fields with additional excavation record attributes to support Archeo 3.0 and ICCD alignment.&#10;- Populate UI fields with corresponding values from DATA_LIST, handling empty or missing numerical fields by setting them to empty strings.&#10;- Add TM field synchronization from TMA table and improve UI data restoration and form field handling with error logging.&#10;- Handle optional numeric input fields by setting them to None if left empty and update DATA_LIST_REC_TEMP to include new USM attributes and catalog fields for Archeo 3.0 and ICCD alignment.&#10;- Add comprehensive data extraction and comparison methods for form fields to support record validation and synchronization.&#10;- Add utility methods for tab enabling, directory access, data type casting, and CSV import into SQLite with platform-specific file handling&#10;- Add support for importing and filtering additional USM-related fields, including UI updates and error handling.&#10;- Add SQLPromptDialog UI for text-to-SQL conversion with mode selection, prompt history, and execution options.&#10;- Add support for Text2SQL API key management, model download, and SQL generation via API or local model with spatial view detection&#10;- Add support for identifying geometry columns and handling spatial queries with result validation and display in table format.&#10;- Add functionality to display SQL query results and geometry info in a table with support for SpatiaLite views and geometry validation&#10;- Add result table population, Excel export, graph plotting, and geometry alias detection functionalities&#10;- Implement feature selection and zoom based on table row selection by matching row data with layer fields and applying appropriate expressions.&#10;- Implement geometry type inference from SQL and add method to create spatial views in PostGIS with geometry registration.&#10;- Add support for creating and loading spatial layers from PostgreSQL and SpatiaLite views with dynamic geometry column selection and connection parameter parsing.&#10;- Add helper methods for detecting geometry columns and enhance spatial view creation for PostGIS and SpatiaLite compatibility.&#10;- Add GraphWindow for plotting data with percentage bars and US" />
    <MESSAGE value="- Add initial implementation of US_USM.py.backup with GUI components, language selection, and report generation dependencies&#10;- Add UI sections for language selection, table filtering, and data validation with corresponding backend logic for retrieving and validating excavation data.&#10;- Add pottery data retrieval with filtering, implement checkable combo box for table selection, and create a styled report preview dialog with terminal output and clipboard/save functionality.&#10;- Implement mouse click handling on text edit to open local or external URLs, add logging with color-coded messages, and generate Word reports with TOC and headers.&#10;- Add HTML-to-Word conversion with heading, image, table, and markdown formatting support&#10;- Add support for bold, italic, images with captions, and HTML table conversion to Word document export&#10;- Add support for bolded table headers, image processing with thumbnail replacement and resizing, clipboard copy functionality, and vector database creation for RAG-based data retrieval.&#10;- Add prompt formatting, language-specific instructions, token estimation, and validation methods for archaeological data&#10;- Add image and markdown processing functions to format archaeological content for widget display in HTML.&#10;- Add HTML conversion logic for structured report formatting including headings, lists, tables, and images&#10;- Implement robust data conversion and validation logic with detailed logging and error handling for archaeological analysis steps.&#10;- Refactor report generation to dynamically summarize available data and conditionally retrieve and organize images by section and entity type.&#10;- Add support for pottery summaries, image grouping by entity type, and RAG-based processing for large datasets&#10;- Add RAG-based analysis with support for image-specific questions and integrated report generation per data section.&#10;- Add RAG-based fallback for token limit errors and improve error handling during section processing.&#10;- Add RAG-based error recovery with contextual image inclusion and post-processing to enhance report generation robustness and clarity.&#10;- Add methods to clean text and generate multilingual prompts and tables for materials, pottery, tombs, periodization, and structures data.&#10;- Add markdown table formatter, progress dialog class, and localized initialization for US form&#10;- Add new field mappings for Italian and German localization to support Archeo 3.0 and ICCD alignment.&#10;- Add German and English to Italian field name mappings for archaeological data conversion to support multilingual input normalization.&#10;- Add Italian and German translations for new USM-related fields and update SORT_ITEMS accordingly.&#10;- Add support for German localization of field labels and align them with existing English and Italian mappings for USM and archaeological data fields.&#10;- Add extensive new data fields, initialize GUI components, set up caching and signal connections, and implement natural sorting function for alphanumeric values.&#10;- Connect GUI elements to their respective event handlers and implement get_images_for_entities to retrieve media thumbnails for various entity types with detailed logging.&#10;- Add methods for vector database creation, RAG chain construction, and token-aware data chunking to support retrieval-augmented generation.&#10;- Add data analysis and validation methods for stratigraphy, materials, and pottery with token-aware chunking logic and truncation warnings.&#10;- Add functions to format and generate tables for archaeological data including materials, pottery, US, tombs, structures, and periodization for report generation.&#10;- Add analysis and validation tool generation methods and data processing functions for archaeological site, stratigraphy, materials, and pottery tables.&#10;- Add data processing functions for various archaeological tables with filtering by year or range and site context.&#10;- Add support for 'periodizzazione' and 'struttura' tables with structured extraction and enhance prompt generation for detailed archaeological reports&#10;- Add data extraction, filtering, and validation logic for multiple tables in report generation process.&#10;- Add missing data validation and report generation workflow with OpenAI agent integration and structured formatting.&#10;- Add report generation workflow with user prompts, section parsing, fallback content, and output to Word template&#10;- Add parsing and processing logic for report sections with fallback content for missing data and support for subsections in DOCX generation.&#10;- Improve heading parsing by supporting both hash-prefixed and underline styles and enhance image handling with validation and fallback paths.&#10;- Add logic to populate Word document with metadata, structured sections, formatting, and tables from report data.&#10;- Add method to convert markdown-formatted tables to Word tables with styling and error handling.&#10;- Add support for detecting and cleaning markdown-style headings and placeholders, including fallback handling for missing content with default section text and structured subsection processing.&#10;- Add support for parsing images and markdown tables in subsection content with error handling and formatting options&#10;- Add support for parsing headings, images, and markdown tables in report content and fallback to manual section insertion if placeholders are missing.&#10;- Add formatted tables for pottery, tombs, structures, and periodization to the document with headers and data, and ensure document has meaningful content before saving.&#10;- Improve table styling fallback logic and add robust error handling for applying styles and borders; implement sketchgpt feature for media selection and GPT window launch; add keyboard shortcuts dialog and localized user prompts and warnings.&#10;- Add progress dialog and detailed logging to rapporti update process, and implement area-specific data filtering for enhanced control and error tracking.&#10;- Implement robust update routine for US table entries with error logging, area correction, and UTF-8 validation.&#10;- Add error logging and improve data extraction from GraphML to CSV for archaeological data processing&#10;- Add CSV processing for US table import, deduplicate entries, and enhance relationship validation with inverse mapping for archaeological units&#10;- Add logic to handle and insert rapporti rows based on existing matches and validate inverse relationships in reports&#10;- Add automatic inverse relationship creation with validation and UI update for unit relationships, enhancing consistency and user feedback.&#10;- Add methods for refreshing data, inserting reference records, and filtering the 'Unità Stratigrafiche' table with support for both SQLite and PostgreSQL backends.&#10;- Add database query and UI update logic for filtering and saving 'Unità Stratigrafiche' records with multi-language support and error handling.&#10;- Add methods to populate period, phase, and dating comboboxes from the 'Periodizzazione' table with error handling and UI updates.&#10;- Add methods to update and display 'Dating' fields based on periodization data and enhance document handling and save logic&#10;- Add US navigation and selection logic with progress updates and conditional save prompts.&#10;- Add US record search and selection functionality with localized messages and UI state handling&#10;- Add database connection logic with multilingual error handling and UI initialization for empty and populated states.&#10;- Add multilingual error messages and customize GUI components based on user locale and context.&#10;- Add ComboBox delegates for multiple USM table columns using localized thesaurus data for documentation types, colors, inclusions, textures, and components.&#10;- Add support for drag-and-drop media upload with validation, map preview loading, and media database insertion including thumbnails and associations.&#10;- Add methods to associate media with entities, generate US records, and process media files with type-specific handling and validation&#10;- Add support for 3D model file types and improve media import with thumbnail generation, resize handling, tag assignment, and localized user messages.&#10;- Add multilingual support and logic for selecting and removing tags from US-related images with confirmation dialogs.&#10;- Add pagination, search filtering, and UI enhancements for displaying and tagging untagged images in QListWidget.&#10;- Implement image caching with LRU eviction and enhance QListWidget population with US entity details and pagination.&#10;- Implement navigation and filtering for paginated image lists and enhance item tagging with media-US association and thumbnail preview updates.&#10;- Add 3D model loading, thumbnail generation, and interactive viewer with measurement and debug tools&#10;- Add distance measurement, coordinate verification, and image export functions with debug messages and label rendering in 3D plot.&#10;- Add bounding box measurement toggle with labeled edges and implement 3D model thumbnail generation and media handling enhancements.&#10;- Add error handling for database queries and implement dynamic population of UI combo boxes based on query results with localization support.&#10;- Populate multiple combo boxes with sorted, unique values from thesaurus queries based on specific 'tipologia_sigla' codes.&#10;- Populate multiple combo boxes with sorted unique values from the thesaurus based on specific 'tipologia_sigla' filters for improved data entry consistency.&#10;- Populate multiple combo boxes with distinct, sorted values from the thesaurus based on specific 'tipologia_sigla' codes to support laterizi and litici material attributes.&#10;- Populate multiple comboBoxes with sorted, unique values from database queries based on different 'tipologia_sigla' codes for construction-related attributes.&#10;- Add site connection checks, localized user messages, and media list generation for photos and PDFs with error handling and configuration prompts.&#10;- Add support for additional archaeological USM data fields including dimensions and elevations with language localization for GIS-based descriptions.&#10;- Add extensive field mappings for archaeological data export including USM properties, ICCD alignment, and GIS-derived values&#10;- Add support for exporting US and photo metadata to PDF with multilingual options and progress tracking&#10;- Add German export options, file path setters, and GraphML conversion with UI integration and error handling&#10;- Add support for SQLite data export with recursive query handling for SU context and relationship mapping.&#10;- Add logic to parse and clean stratigraphic relationships, generate an Excel sheet with formatted columns, and display Harris Matrix image with matplotlib.&#10;- Add logic for interactive matrix generation and stratigraphic relationship validation with multilingual support&#10;- Implementa la generazione e salvataggio di report su errori di ordinamento con messaggi localizzati e gestione degli aggiornamenti al database.&#10;- Add UI handlers for GIS and preview toggle buttons, implement feature sorting and selection with multilingual support and error handling.&#10;- Add new record and save functionalities with UI updates and multilingual support for validation messages&#10;- Add interactive API key management and GPT-based error explanation with multilingual success messages for stratigraphic checks&#10;- Add input validation for required text fields and numeric float fields with warning messages for invalid or empty entries.&#10;- Add numeric and length validation with localized warnings for multiple input fields in the form.&#10;- Add input validation for multiple fields with localized error messages and remove strict numeric check on US field to allow alphanumeric values.&#10;- Add input validation for field length and logical consistency in period and phase selection, and implement automatic form check reporting per site.&#10;- Add stratigraphic relationship consistency check with multilingual logging and reciprocal validation&#10;- Add validation for reciprocal stratigraphic relationships and generate multilingual error reports when inconsistencies are found.&#10;- Comment out detailed relationship verification logic to simplify debugging and improve code maintainability.&#10;- Add function to validate consistency between stratigraphic definitions and relationships across different languages.&#10;- Add stratigraphic relationship report generation with multilingual support and logical consistency checks.&#10;- Add stratigraphic relationship validation logic with multilingual report generation for excavation records.&#10;- Add detailed temporal consistency checks for relationship types and generate corresponding multilingual report messages.&#10;- Add support for extracting and saving additional USM layer attributes and related table data from UI inputs with proper type handling and null checks.&#10;- Add new fields to data export for Archeo 3.0 and align with ICCD standards, including detailed USM and LAT attributes&#10;- Add data insertion logic with input validation, error handling, and UI row management for multiple table widgets&#10;- Refactor record navigation and implement site-based filtering in view_all to improve database interaction and user experience.&#10;- Add record navigation and multilingual record deletion confirmation with database cleanup and UI updates&#10;- Add methods for deleting filtered records, resetting search filters, showing selected GIS layers, and updating excavation period codes with multilingual support.&#10;- Add switchable search mode with UI field toggling and multilingual feedback for improved user experience and error handling.&#10;- Enable form fields and table widgets during search and implement search parameter collection with input validation.&#10;- Add support for capturing and saving additional archaeological record fields including dimensions, catalog numbers, references, and excavation details.&#10;- Add support for additional form fields in search dictionary and handle empty searches with warning message.&#10;- Add support for selecting 'AND' or 'OR' logical operator in search queries with multilingual result messages and GIS layer updates.&#10;- Add record management and error handling methods for data update, loading, and table manipulation with encoding error logging and multilingual support.&#10;- Add method to reset all UI fields and tables to initial empty state, including new USM attributes and conditional date logic&#10;- Clear all input fields and reset UI components in the USM form to ensure a clean state for new data entry.&#10;- Clear all input fields and reset relevant UI tables to initial state when creating a new record.&#10;- Clear all form fields and populate them with data from DATA_LIST using the fill_fields method.&#10;- Populate UI fields with additional excavation record attributes to support Archeo 3.0 and ICCD alignment.&#10;- Populate UI fields with corresponding values from DATA_LIST, handling empty or missing numerical fields by setting them to empty strings.&#10;- Add TM field synchronization from TMA table and improve UI data restoration and form field handling with error logging.&#10;- Handle optional numeric input fields by setting them to None if left empty and update DATA_LIST_REC_TEMP to include new USM attributes and catalog fields for Archeo 3.0 and ICCD alignment.&#10;- Add comprehensive data extraction and comparison methods for form fields to support record validation and synchronization.&#10;- Add utility methods for tab enabling, directory access, data type casting, and CSV import into SQLite with platform-specific file handling&#10;- Add support for importing and filtering additional USM-related fields, including UI updates and error handling.&#10;- Add SQLPromptDialog UI for text-to-SQL conversion with mode selection, prompt history, and execution options.&#10;- Add support for Text2SQL API key management, model download, and SQL generation via API or local model with spatial view detection&#10;- Add support for identifying geometry columns and handling spatial queries with result validation and display in table format.&#10;- Add functionality to display SQL query results and geometry info in a table with support for SpatiaLite views and geometry validation&#10;- Add result table population, Excel export, graph plotting, and geometry alias detection functionalities&#10;- Implement feature selection and zoom based on table row selection by matching row data with layer fields and applying appropriate expressions.&#10;- Implement geometry type inference from SQL and add method to create spatial views in PostGIS with geometry registration.&#10;- Add support for creating and loading spatial layers from PostgreSQL and SpatiaLite views with dynamic geometry column selection and connection parameter parsing.&#10;- Add helper methods for detecting geometry columns and enhance spatial view creation for PostGIS and SpatiaLite compatibility.&#10;- Add GraphWindow for plotting data with percentage bars and USFilter" />
    <MESSAGE value="- Add initial implementation of US_USM.py.backup with GUI components, language selection, and report generation dependencies&#10;- Add UI sections for language selection, table filtering, and data validation with corresponding backend logic for retrieving and validating excavation data.&#10;- Add pottery data retrieval with filtering, implement checkable combo box for table selection, and create a styled report preview dialog with terminal output and clipboard/save functionality.&#10;- Implement mouse click handling on text edit to open local or external URLs, add logging with color-coded messages, and generate Word reports with TOC and headers.&#10;- Add HTML-to-Word conversion with heading, image, table, and markdown formatting support&#10;- Add support for bold, italic, images with captions, and HTML table conversion to Word document export&#10;- Add support for bolded table headers, image processing with thumbnail replacement and resizing, clipboard copy functionality, and vector database creation for RAG-based data retrieval.&#10;- Add prompt formatting, language-specific instructions, token estimation, and validation methods for archaeological data&#10;- Add image and markdown processing functions to format archaeological content for widget display in HTML.&#10;- Add HTML conversion logic for structured report formatting including headings, lists, tables, and images&#10;- Implement robust data conversion and validation logic with detailed logging and error handling for archaeological analysis steps.&#10;- Refactor report generation to dynamically summarize available data and conditionally retrieve and organize images by section and entity type.&#10;- Add support for pottery summaries, image grouping by entity type, and RAG-based processing for large datasets&#10;- Add RAG-based analysis with support for image-specific questions and integrated report generation per data section.&#10;- Add RAG-based fallback for token limit errors and improve error handling during section processing.&#10;- Add RAG-based error recovery with contextual image inclusion and post-processing to enhance report generation robustness and clarity.&#10;- Add methods to clean text and generate multilingual prompts and tables for materials, pottery, tombs, periodization, and structures data.&#10;- Add markdown table formatter, progress dialog class, and localized initialization for US form&#10;- Add new field mappings for Italian and German localization to support Archeo 3.0 and ICCD alignment.&#10;- Add German and English to Italian field name mappings for archaeological data conversion to support multilingual input normalization.&#10;- Add Italian and German translations for new USM-related fields and update SORT_ITEMS accordingly.&#10;- Add support for German localization of field labels and align them with existing English and Italian mappings for USM and archaeological data fields.&#10;- Add extensive new data fields, initialize GUI components, set up caching and signal connections, and implement natural sorting function for alphanumeric values.&#10;- Connect GUI elements to their respective event handlers and implement get_images_for_entities to retrieve media thumbnails for various entity types with detailed logging.&#10;- Add methods for vector database creation, RAG chain construction, and token-aware data chunking to support retrieval-augmented generation.&#10;- Add data analysis and validation methods for stratigraphy, materials, and pottery with token-aware chunking logic and truncation warnings.&#10;- Add functions to format and generate tables for archaeological data including materials, pottery, US, tombs, structures, and periodization for report generation.&#10;- Add analysis and validation tool generation methods and data processing functions for archaeological site, stratigraphy, materials, and pottery tables.&#10;- Add data processing functions for various archaeological tables with filtering by year or range and site context.&#10;- Add support for 'periodizzazione' and 'struttura' tables with structured extraction and enhance prompt generation for detailed archaeological reports&#10;- Add data extraction, filtering, and validation logic for multiple tables in report generation process.&#10;- Add missing data validation and report generation workflow with OpenAI agent integration and structured formatting.&#10;- Add report generation workflow with user prompts, section parsing, fallback content, and output to Word template&#10;- Add parsing and processing logic for report sections with fallback content for missing data and support for subsections in DOCX generation.&#10;- Improve heading parsing by supporting both hash-prefixed and underline styles and enhance image handling with validation and fallback paths.&#10;- Add logic to populate Word document with metadata, structured sections, formatting, and tables from report data.&#10;- Add method to convert markdown-formatted tables to Word tables with styling and error handling.&#10;- Add support for detecting and cleaning markdown-style headings and placeholders, including fallback handling for missing content with default section text and structured subsection processing.&#10;- Add support for parsing images and markdown tables in subsection content with error handling and formatting options&#10;- Add support for parsing headings, images, and markdown tables in report content and fallback to manual section insertion if placeholders are missing.&#10;- Add formatted tables for pottery, tombs, structures, and periodization to the document with headers and data, and ensure document has meaningful content before saving.&#10;- Improve table styling fallback logic and add robust error handling for applying styles and borders; implement sketchgpt feature for media selection and GPT window launch; add keyboard shortcuts dialog and localized user prompts and warnings.&#10;- Add progress dialog and detailed logging to rapporti update process, and implement area-specific data filtering for enhanced control and error tracking.&#10;- Implement robust update routine for US table entries with error logging, area correction, and UTF-8 validation.&#10;- Add error logging and improve data extraction from GraphML to CSV for archaeological data processing&#10;- Add CSV processing for US table import, deduplicate entries, and enhance relationship validation with inverse mapping for archaeological units&#10;- Add logic to handle and insert rapporti rows based on existing matches and validate inverse relationships in reports&#10;- Add automatic inverse relationship creation with validation and UI update for unit relationships, enhancing consistency and user feedback.&#10;- Add methods for refreshing data, inserting reference records, and filtering the 'Unità Stratigrafiche' table with support for both SQLite and PostgreSQL backends.&#10;- Add database query and UI update logic for filtering and saving 'Unità Stratigrafiche' records with multi-language support and error handling.&#10;- Add methods to populate period, phase, and dating comboboxes from the 'Periodizzazione' table with error handling and UI updates.&#10;- Add methods to update and display 'Dating' fields based on periodization data and enhance document handling and save logic&#10;- Add US navigation and selection logic with progress updates and conditional save prompts.&#10;- Add US record search and selection functionality with localized messages and UI state handling&#10;- Add database connection logic with multilingual error handling and UI initialization for empty and populated states.&#10;- Add multilingual error messages and customize GUI components based on user locale and context.&#10;- Add ComboBox delegates for multiple USM table columns using localized thesaurus data for documentation types, colors, inclusions, textures, and components.&#10;- Add support for drag-and-drop media upload with validation, map preview loading, and media database insertion including thumbnails and associations.&#10;- Add methods to associate media with entities, generate US records, and process media files with type-specific handling and validation&#10;- Add support for 3D model file types and improve media import with thumbnail generation, resize handling, tag assignment, and localized user messages.&#10;- Add multilingual support and logic for selecting and removing tags from US-related images with confirmation dialogs.&#10;- Add pagination, search filtering, and UI enhancements for displaying and tagging untagged images in QListWidget.&#10;- Implement image caching with LRU eviction and enhance QListWidget population with US entity details and pagination.&#10;- Implement navigation and filtering for paginated image lists and enhance item tagging with media-US association and thumbnail preview updates.&#10;- Add 3D model loading, thumbnail generation, and interactive viewer with measurement and debug tools&#10;- Add distance measurement, coordinate verification, and image export functions with debug messages and label rendering in 3D plot.&#10;- Add bounding box measurement toggle with labeled edges and implement 3D model thumbnail generation and media handling enhancements.&#10;- Add error handling for database queries and implement dynamic population of UI combo boxes based on query results with localization support.&#10;- Populate multiple combo boxes with sorted, unique values from thesaurus queries based on specific 'tipologia_sigla' codes.&#10;- Populate multiple combo boxes with sorted unique values from the thesaurus based on specific 'tipologia_sigla' filters for improved data entry consistency.&#10;- Populate multiple combo boxes with distinct, sorted values from the thesaurus based on specific 'tipologia_sigla' codes to support laterizi and litici material attributes.&#10;- Populate multiple comboBoxes with sorted, unique values from database queries based on different 'tipologia_sigla' codes for construction-related attributes.&#10;- Add site connection checks, localized user messages, and media list generation for photos and PDFs with error handling and configuration prompts.&#10;- Add support for additional archaeological USM data fields including dimensions and elevations with language localization for GIS-based descriptions.&#10;- Add extensive field mappings for archaeological data export including USM properties, ICCD alignment, and GIS-derived values&#10;- Add support for exporting US and photo metadata to PDF with multilingual options and progress tracking&#10;- Add German export options, file path setters, and GraphML conversion with UI integration and error handling&#10;- Add support for SQLite data export with recursive query handling for SU context and relationship mapping.&#10;- Add logic to parse and clean stratigraphic relationships, generate an Excel sheet with formatted columns, and display Harris Matrix image with matplotlib.&#10;- Add logic for interactive matrix generation and stratigraphic relationship validation with multilingual support&#10;- Implementa la generazione e salvataggio di report su errori di ordinamento con messaggi localizzati e gestione degli aggiornamenti al database.&#10;- Add UI handlers for GIS and preview toggle buttons, implement feature sorting and selection with multilingual support and error handling.&#10;- Add new record and save functionalities with UI updates and multilingual support for validation messages&#10;- Add interactive API key management and GPT-based error explanation with multilingual success messages for stratigraphic checks&#10;- Add input validation for required text fields and numeric float fields with warning messages for invalid or empty entries.&#10;- Add numeric and length validation with localized warnings for multiple input fields in the form.&#10;- Add input validation for multiple fields with localized error messages and remove strict numeric check on US field to allow alphanumeric values.&#10;- Add input validation for field length and logical consistency in period and phase selection, and implement automatic form check reporting per site.&#10;- Add stratigraphic relationship consistency check with multilingual logging and reciprocal validation&#10;- Add validation for reciprocal stratigraphic relationships and generate multilingual error reports when inconsistencies are found.&#10;- Comment out detailed relationship verification logic to simplify debugging and improve code maintainability.&#10;- Add function to validate consistency between stratigraphic definitions and relationships across different languages.&#10;- Add stratigraphic relationship report generation with multilingual support and logical consistency checks.&#10;- Add stratigraphic relationship validation logic with multilingual report generation for excavation records.&#10;- Add detailed temporal consistency checks for relationship types and generate corresponding multilingual report messages.&#10;- Add support for extracting and saving additional USM layer attributes and related table data from UI inputs with proper type handling and null checks.&#10;- Add new fields to data export for Archeo 3.0 and align with ICCD standards, including detailed USM and LAT attributes&#10;- Add data insertion logic with input validation, error handling, and UI row management for multiple table widgets&#10;- Refactor record navigation and implement site-based filtering in view_all to improve database interaction and user experience.&#10;- Add record navigation and multilingual record deletion confirmation with database cleanup and UI updates&#10;- Add methods for deleting filtered records, resetting search filters, showing selected GIS layers, and updating excavation period codes with multilingual support.&#10;- Add switchable search mode with UI field toggling and multilingual feedback for improved user experience and error handling.&#10;- Enable form fields and table widgets during search and implement search parameter collection with input validation.&#10;- Add support for capturing and saving additional archaeological record fields including dimensions, catalog numbers, references, and excavation details.&#10;- Add support for additional form fields in search dictionary and handle empty searches with warning message.&#10;- Add support for selecting 'AND' or 'OR' logical operator in search queries with multilingual result messages and GIS layer updates.&#10;- Add record management and error handling methods for data update, loading, and table manipulation with encoding error logging and multilingual support.&#10;- Add method to reset all UI fields and tables to initial empty state, including new USM attributes and conditional date logic&#10;- Clear all input fields and reset UI components in the USM form to ensure a clean state for new data entry.&#10;- Clear all input fields and reset relevant UI tables to initial state when creating a new record.&#10;- Clear all form fields and populate them with data from DATA_LIST using the fill_fields method.&#10;- Populate UI fields with additional excavation record attributes to support Archeo 3.0 and ICCD alignment.&#10;- Populate UI fields with corresponding values from DATA_LIST, handling empty or missing numerical fields by setting them to empty strings.&#10;- Add TM field synchronization from TMA table and improve UI data restoration and form field handling with error logging.&#10;- Handle optional numeric input fields by setting them to None if left empty and update DATA_LIST_REC_TEMP to include new USM attributes and catalog fields for Archeo 3.0 and ICCD alignment.&#10;- Add comprehensive data extraction and comparison methods for form fields to support record validation and synchronization.&#10;- Add utility methods for tab enabling, directory access, data type casting, and CSV import into SQLite with platform-specific file handling&#10;- Add support for importing and filtering additional USM-related fields, including UI updates and error handling.&#10;- Add SQLPromptDialog UI for text-to-SQL conversion with mode selection, prompt history, and execution options.&#10;- Add support for Text2SQL API key management, model download, and SQL generation via API or local model with spatial view detection&#10;- Add support for identifying geometry columns and handling spatial queries with result validation and display in table format.&#10;- Add functionality to display SQL query results and geometry info in a table with support for SpatiaLite views and geometry validation&#10;- Add result table population, Excel export, graph plotting, and geometry alias detection functionalities&#10;- Implement feature selection and zoom based on table row selection by matching row data with layer fields and applying appropriate expressions.&#10;- Implement geometry type inference from SQL and add method to create spatial views in PostGIS with geometry registration.&#10;- Add support for creating and loading spatial layers from PostgreSQL and SpatiaLite views with dynamic geometry column selection and connection parameter parsing.&#10;- Add helper methods for detecting geometry columns and enhance spatial view creation for PostGIS and SpatiaLite compatibility.&#10;- Add GraphWindow for plotting data with percentage bars and USFilterDialog" />
    <MESSAGE value="- Add initial implementation of US_USM.py.backup with GUI components, language selection, and report generation dependencies&#10;- Add UI sections for language selection, table filtering, and data validation with corresponding backend logic for retrieving and validating excavation data.&#10;- Add pottery data retrieval with filtering, implement checkable combo box for table selection, and create a styled report preview dialog with terminal output and clipboard/save functionality.&#10;- Implement mouse click handling on text edit to open local or external URLs, add logging with color-coded messages, and generate Word reports with TOC and headers.&#10;- Add HTML-to-Word conversion with heading, image, table, and markdown formatting support&#10;- Add support for bold, italic, images with captions, and HTML table conversion to Word document export&#10;- Add support for bolded table headers, image processing with thumbnail replacement and resizing, clipboard copy functionality, and vector database creation for RAG-based data retrieval.&#10;- Add prompt formatting, language-specific instructions, token estimation, and validation methods for archaeological data&#10;- Add image and markdown processing functions to format archaeological content for widget display in HTML.&#10;- Add HTML conversion logic for structured report formatting including headings, lists, tables, and images&#10;- Implement robust data conversion and validation logic with detailed logging and error handling for archaeological analysis steps.&#10;- Refactor report generation to dynamically summarize available data and conditionally retrieve and organize images by section and entity type.&#10;- Add support for pottery summaries, image grouping by entity type, and RAG-based processing for large datasets&#10;- Add RAG-based analysis with support for image-specific questions and integrated report generation per data section.&#10;- Add RAG-based fallback for token limit errors and improve error handling during section processing.&#10;- Add RAG-based error recovery with contextual image inclusion and post-processing to enhance report generation robustness and clarity.&#10;- Add methods to clean text and generate multilingual prompts and tables for materials, pottery, tombs, periodization, and structures data.&#10;- Add markdown table formatter, progress dialog class, and localized initialization for US form&#10;- Add new field mappings for Italian and German localization to support Archeo 3.0 and ICCD alignment.&#10;- Add German and English to Italian field name mappings for archaeological data conversion to support multilingual input normalization.&#10;- Add Italian and German translations for new USM-related fields and update SORT_ITEMS accordingly.&#10;- Add support for German localization of field labels and align them with existing English and Italian mappings for USM and archaeological data fields.&#10;- Add extensive new data fields, initialize GUI components, set up caching and signal connections, and implement natural sorting function for alphanumeric values.&#10;- Connect GUI elements to their respective event handlers and implement get_images_for_entities to retrieve media thumbnails for various entity types with detailed logging.&#10;- Add methods for vector database creation, RAG chain construction, and token-aware data chunking to support retrieval-augmented generation.&#10;- Add data analysis and validation methods for stratigraphy, materials, and pottery with token-aware chunking logic and truncation warnings.&#10;- Add functions to format and generate tables for archaeological data including materials, pottery, US, tombs, structures, and periodization for report generation.&#10;- Add analysis and validation tool generation methods and data processing functions for archaeological site, stratigraphy, materials, and pottery tables.&#10;- Add data processing functions for various archaeological tables with filtering by year or range and site context.&#10;- Add support for 'periodizzazione' and 'struttura' tables with structured extraction and enhance prompt generation for detailed archaeological reports&#10;- Add data extraction, filtering, and validation logic for multiple tables in report generation process.&#10;- Add missing data validation and report generation workflow with OpenAI agent integration and structured formatting.&#10;- Add report generation workflow with user prompts, section parsing, fallback content, and output to Word template&#10;- Add parsing and processing logic for report sections with fallback content for missing data and support for subsections in DOCX generation.&#10;- Improve heading parsing by supporting both hash-prefixed and underline styles and enhance image handling with validation and fallback paths.&#10;- Add logic to populate Word document with metadata, structured sections, formatting, and tables from report data.&#10;- Add method to convert markdown-formatted tables to Word tables with styling and error handling.&#10;- Add support for detecting and cleaning markdown-style headings and placeholders, including fallback handling for missing content with default section text and structured subsection processing.&#10;- Add support for parsing images and markdown tables in subsection content with error handling and formatting options&#10;- Add support for parsing headings, images, and markdown tables in report content and fallback to manual section insertion if placeholders are missing.&#10;- Add formatted tables for pottery, tombs, structures, and periodization to the document with headers and data, and ensure document has meaningful content before saving.&#10;- Improve table styling fallback logic and add robust error handling for applying styles and borders; implement sketchgpt feature for media selection and GPT window launch; add keyboard shortcuts dialog and localized user prompts and warnings.&#10;- Add progress dialog and detailed logging to rapporti update process, and implement area-specific data filtering for enhanced control and error tracking.&#10;- Implement robust update routine for US table entries with error logging, area correction, and UTF-8 validation.&#10;- Add error logging and improve data extraction from GraphML to CSV for archaeological data processing&#10;- Add CSV processing for US table import, deduplicate entries, and enhance relationship validation with inverse mapping for archaeological units&#10;- Add logic to handle and insert rapporti rows based on existing matches and validate inverse relationships in reports&#10;- Add automatic inverse relationship creation with validation and UI update for unit relationships, enhancing consistency and user feedback.&#10;- Add methods for refreshing data, inserting reference records, and filtering the 'Unità Stratigrafiche' table with support for both SQLite and PostgreSQL backends.&#10;- Add database query and UI update logic for filtering and saving 'Unità Stratigrafiche' records with multi-language support and error handling.&#10;- Add methods to populate period, phase, and dating comboboxes from the 'Periodizzazione' table with error handling and UI updates.&#10;- Add methods to update and display 'Dating' fields based on periodization data and enhance document handling and save logic&#10;- Add US navigation and selection logic with progress updates and conditional save prompts.&#10;- Add US record search and selection functionality with localized messages and UI state handling&#10;- Add database connection logic with multilingual error handling and UI initialization for empty and populated states.&#10;- Add multilingual error messages and customize GUI components based on user locale and context.&#10;- Add ComboBox delegates for multiple USM table columns using localized thesaurus data for documentation types, colors, inclusions, textures, and components.&#10;- Add support for drag-and-drop media upload with validation, map preview loading, and media database insertion including thumbnails and associations.&#10;- Add methods to associate media with entities, generate US records, and process media files with type-specific handling and validation&#10;- Add support for 3D model file types and improve media import with thumbnail generation, resize handling, tag assignment, and localized user messages.&#10;- Add multilingual support and logic for selecting and removing tags from US-related images with confirmation dialogs.&#10;- Add pagination, search filtering, and UI enhancements for displaying and tagging untagged images in QListWidget.&#10;- Implement image caching with LRU eviction and enhance QListWidget population with US entity details and pagination.&#10;- Implement navigation and filtering for paginated image lists and enhance item tagging with media-US association and thumbnail preview updates.&#10;- Add 3D model loading, thumbnail generation, and interactive viewer with measurement and debug tools&#10;- Add distance measurement, coordinate verification, and image export functions with debug messages and label rendering in 3D plot.&#10;- Add bounding box measurement toggle with labeled edges and implement 3D model thumbnail generation and media handling enhancements.&#10;- Add error handling for database queries and implement dynamic population of UI combo boxes based on query results with localization support.&#10;- Populate multiple combo boxes with sorted, unique values from thesaurus queries based on specific 'tipologia_sigla' codes.&#10;- Populate multiple combo boxes with sorted unique values from the thesaurus based on specific 'tipologia_sigla' filters for improved data entry consistency.&#10;- Populate multiple combo boxes with distinct, sorted values from the thesaurus based on specific 'tipologia_sigla' codes to support laterizi and litici material attributes.&#10;- Populate multiple comboBoxes with sorted, unique values from database queries based on different 'tipologia_sigla' codes for construction-related attributes.&#10;- Add site connection checks, localized user messages, and media list generation for photos and PDFs with error handling and configuration prompts.&#10;- Add support for additional archaeological USM data fields including dimensions and elevations with language localization for GIS-based descriptions.&#10;- Add extensive field mappings for archaeological data export including USM properties, ICCD alignment, and GIS-derived values&#10;- Add support for exporting US and photo metadata to PDF with multilingual options and progress tracking&#10;- Add German export options, file path setters, and GraphML conversion with UI integration and error handling&#10;- Add support for SQLite data export with recursive query handling for SU context and relationship mapping.&#10;- Add logic to parse and clean stratigraphic relationships, generate an Excel sheet with formatted columns, and display Harris Matrix image with matplotlib.&#10;- Add logic for interactive matrix generation and stratigraphic relationship validation with multilingual support&#10;- Implementa la generazione e salvataggio di report su errori di ordinamento con messaggi localizzati e gestione degli aggiornamenti al database.&#10;- Add UI handlers for GIS and preview toggle buttons, implement feature sorting and selection with multilingual support and error handling.&#10;- Add new record and save functionalities with UI updates and multilingual support for validation messages&#10;- Add interactive API key management and GPT-based error explanation with multilingual success messages for stratigraphic checks&#10;- Add input validation for required text fields and numeric float fields with warning messages for invalid or empty entries.&#10;- Add numeric and length validation with localized warnings for multiple input fields in the form.&#10;- Add input validation for multiple fields with localized error messages and remove strict numeric check on US field to allow alphanumeric values.&#10;- Add input validation for field length and logical consistency in period and phase selection, and implement automatic form check reporting per site.&#10;- Add stratigraphic relationship consistency check with multilingual logging and reciprocal validation&#10;- Add validation for reciprocal stratigraphic relationships and generate multilingual error reports when inconsistencies are found.&#10;- Comment out detailed relationship verification logic to simplify debugging and improve code maintainability.&#10;- Add function to validate consistency between stratigraphic definitions and relationships across different languages.&#10;- Add stratigraphic relationship report generation with multilingual support and logical consistency checks.&#10;- Add stratigraphic relationship validation logic with multilingual report generation for excavation records.&#10;- Add detailed temporal consistency checks for relationship types and generate corresponding multilingual report messages.&#10;- Add support for extracting and saving additional USM layer attributes and related table data from UI inputs with proper type handling and null checks.&#10;- Add new fields to data export for Archeo 3.0 and align with ICCD standards, including detailed USM and LAT attributes&#10;- Add data insertion logic with input validation, error handling, and UI row management for multiple table widgets&#10;- Refactor record navigation and implement site-based filtering in view_all to improve database interaction and user experience.&#10;- Add record navigation and multilingual record deletion confirmation with database cleanup and UI updates&#10;- Add methods for deleting filtered records, resetting search filters, showing selected GIS layers, and updating excavation period codes with multilingual support.&#10;- Add switchable search mode with UI field toggling and multilingual feedback for improved user experience and error handling.&#10;- Enable form fields and table widgets during search and implement search parameter collection with input validation.&#10;- Add support for capturing and saving additional archaeological record fields including dimensions, catalog numbers, references, and excavation details.&#10;- Add support for additional form fields in search dictionary and handle empty searches with warning message.&#10;- Add support for selecting 'AND' or 'OR' logical operator in search queries with multilingual result messages and GIS layer updates.&#10;- Add record management and error handling methods for data update, loading, and table manipulation with encoding error logging and multilingual support.&#10;- Add method to reset all UI fields and tables to initial empty state, including new USM attributes and conditional date logic&#10;- Clear all input fields and reset UI components in the USM form to ensure a clean state for new data entry.&#10;- Clear all input fields and reset relevant UI tables to initial state when creating a new record.&#10;- Clear all form fields and populate them with data from DATA_LIST using the fill_fields method.&#10;- Populate UI fields with additional excavation record attributes to support Archeo 3.0 and ICCD alignment.&#10;- Populate UI fields with corresponding values from DATA_LIST, handling empty or missing numerical fields by setting them to empty strings.&#10;- Add TM field synchronization from TMA table and improve UI data restoration and form field handling with error logging.&#10;- Handle optional numeric input fields by setting them to None if left empty and update DATA_LIST_REC_TEMP to include new USM attributes and catalog fields for Archeo 3.0 and ICCD alignment.&#10;- Add comprehensive data extraction and comparison methods for form fields to support record validation and synchronization.&#10;- Add utility methods for tab enabling, directory access, data type casting, and CSV import into SQLite with platform-specific file handling&#10;- Add support for importing and filtering additional USM-related fields, including UI updates and error handling.&#10;- Add SQLPromptDialog UI for text-to-SQL conversion with mode selection, prompt history, and execution options.&#10;- Add support for Text2SQL API key management, model download, and SQL generation via API or local model with spatial view detection&#10;- Add support for identifying geometry columns and handling spatial queries with result validation and display in table format.&#10;- Add functionality to display SQL query results and geometry info in a table with support for SpatiaLite views and geometry validation&#10;- Add result table population, Excel export, graph plotting, and geometry alias detection functionalities&#10;- Implement feature selection and zoom based on table row selection by matching row data with layer fields and applying appropriate expressions.&#10;- Implement geometry type inference from SQL and add method to create spatial views in PostGIS with geometry registration.&#10;- Add support for creating and loading spatial layers from PostgreSQL and SpatiaLite views with dynamic geometry column selection and connection parameter parsing.&#10;- Add helper methods for detecting geometry columns and enhance spatial view creation for PostGIS and SpatiaLite compatibility.&#10;- Add GraphWindow for plotting data with percentage bars and USFilterDialog for" />
    <MESSAGE value="- Add initial implementation of US_USM.py.backup with GUI components, language selection, and report generation dependencies&#10;- Add UI sections for language selection, table filtering, and data validation with corresponding backend logic for retrieving and validating excavation data.&#10;- Add pottery data retrieval with filtering, implement checkable combo box for table selection, and create a styled report preview dialog with terminal output and clipboard/save functionality.&#10;- Implement mouse click handling on text edit to open local or external URLs, add logging with color-coded messages, and generate Word reports with TOC and headers.&#10;- Add HTML-to-Word conversion with heading, image, table, and markdown formatting support&#10;- Add support for bold, italic, images with captions, and HTML table conversion to Word document export&#10;- Add support for bolded table headers, image processing with thumbnail replacement and resizing, clipboard copy functionality, and vector database creation for RAG-based data retrieval.&#10;- Add prompt formatting, language-specific instructions, token estimation, and validation methods for archaeological data&#10;- Add image and markdown processing functions to format archaeological content for widget display in HTML.&#10;- Add HTML conversion logic for structured report formatting including headings, lists, tables, and images&#10;- Implement robust data conversion and validation logic with detailed logging and error handling for archaeological analysis steps.&#10;- Refactor report generation to dynamically summarize available data and conditionally retrieve and organize images by section and entity type.&#10;- Add support for pottery summaries, image grouping by entity type, and RAG-based processing for large datasets&#10;- Add RAG-based analysis with support for image-specific questions and integrated report generation per data section.&#10;- Add RAG-based fallback for token limit errors and improve error handling during section processing.&#10;- Add RAG-based error recovery with contextual image inclusion and post-processing to enhance report generation robustness and clarity.&#10;- Add methods to clean text and generate multilingual prompts and tables for materials, pottery, tombs, periodization, and structures data.&#10;- Add markdown table formatter, progress dialog class, and localized initialization for US form&#10;- Add new field mappings for Italian and German localization to support Archeo 3.0 and ICCD alignment.&#10;- Add German and English to Italian field name mappings for archaeological data conversion to support multilingual input normalization.&#10;- Add Italian and German translations for new USM-related fields and update SORT_ITEMS accordingly.&#10;- Add support for German localization of field labels and align them with existing English and Italian mappings for USM and archaeological data fields.&#10;- Add extensive new data fields, initialize GUI components, set up caching and signal connections, and implement natural sorting function for alphanumeric values.&#10;- Connect GUI elements to their respective event handlers and implement get_images_for_entities to retrieve media thumbnails for various entity types with detailed logging.&#10;- Add methods for vector database creation, RAG chain construction, and token-aware data chunking to support retrieval-augmented generation.&#10;- Add data analysis and validation methods for stratigraphy, materials, and pottery with token-aware chunking logic and truncation warnings.&#10;- Add functions to format and generate tables for archaeological data including materials, pottery, US, tombs, structures, and periodization for report generation.&#10;- Add analysis and validation tool generation methods and data processing functions for archaeological site, stratigraphy, materials, and pottery tables.&#10;- Add data processing functions for various archaeological tables with filtering by year or range and site context.&#10;- Add support for 'periodizzazione' and 'struttura' tables with structured extraction and enhance prompt generation for detailed archaeological reports&#10;- Add data extraction, filtering, and validation logic for multiple tables in report generation process.&#10;- Add missing data validation and report generation workflow with OpenAI agent integration and structured formatting.&#10;- Add report generation workflow with user prompts, section parsing, fallback content, and output to Word template&#10;- Add parsing and processing logic for report sections with fallback content for missing data and support for subsections in DOCX generation.&#10;- Improve heading parsing by supporting both hash-prefixed and underline styles and enhance image handling with validation and fallback paths.&#10;- Add logic to populate Word document with metadata, structured sections, formatting, and tables from report data.&#10;- Add method to convert markdown-formatted tables to Word tables with styling and error handling.&#10;- Add support for detecting and cleaning markdown-style headings and placeholders, including fallback handling for missing content with default section text and structured subsection processing.&#10;- Add support for parsing images and markdown tables in subsection content with error handling and formatting options&#10;- Add support for parsing headings, images, and markdown tables in report content and fallback to manual section insertion if placeholders are missing.&#10;- Add formatted tables for pottery, tombs, structures, and periodization to the document with headers and data, and ensure document has meaningful content before saving.&#10;- Improve table styling fallback logic and add robust error handling for applying styles and borders; implement sketchgpt feature for media selection and GPT window launch; add keyboard shortcuts dialog and localized user prompts and warnings.&#10;- Add progress dialog and detailed logging to rapporti update process, and implement area-specific data filtering for enhanced control and error tracking.&#10;- Implement robust update routine for US table entries with error logging, area correction, and UTF-8 validation.&#10;- Add error logging and improve data extraction from GraphML to CSV for archaeological data processing&#10;- Add CSV processing for US table import, deduplicate entries, and enhance relationship validation with inverse mapping for archaeological units&#10;- Add logic to handle and insert rapporti rows based on existing matches and validate inverse relationships in reports&#10;- Add automatic inverse relationship creation with validation and UI update for unit relationships, enhancing consistency and user feedback.&#10;- Add methods for refreshing data, inserting reference records, and filtering the 'Unità Stratigrafiche' table with support for both SQLite and PostgreSQL backends.&#10;- Add database query and UI update logic for filtering and saving 'Unità Stratigrafiche' records with multi-language support and error handling.&#10;- Add methods to populate period, phase, and dating comboboxes from the 'Periodizzazione' table with error handling and UI updates.&#10;- Add methods to update and display 'Dating' fields based on periodization data and enhance document handling and save logic&#10;- Add US navigation and selection logic with progress updates and conditional save prompts.&#10;- Add US record search and selection functionality with localized messages and UI state handling&#10;- Add database connection logic with multilingual error handling and UI initialization for empty and populated states.&#10;- Add multilingual error messages and customize GUI components based on user locale and context.&#10;- Add ComboBox delegates for multiple USM table columns using localized thesaurus data for documentation types, colors, inclusions, textures, and components.&#10;- Add support for drag-and-drop media upload with validation, map preview loading, and media database insertion including thumbnails and associations.&#10;- Add methods to associate media with entities, generate US records, and process media files with type-specific handling and validation&#10;- Add support for 3D model file types and improve media import with thumbnail generation, resize handling, tag assignment, and localized user messages.&#10;- Add multilingual support and logic for selecting and removing tags from US-related images with confirmation dialogs.&#10;- Add pagination, search filtering, and UI enhancements for displaying and tagging untagged images in QListWidget.&#10;- Implement image caching with LRU eviction and enhance QListWidget population with US entity details and pagination.&#10;- Implement navigation and filtering for paginated image lists and enhance item tagging with media-US association and thumbnail preview updates.&#10;- Add 3D model loading, thumbnail generation, and interactive viewer with measurement and debug tools&#10;- Add distance measurement, coordinate verification, and image export functions with debug messages and label rendering in 3D plot.&#10;- Add bounding box measurement toggle with labeled edges and implement 3D model thumbnail generation and media handling enhancements.&#10;- Add error handling for database queries and implement dynamic population of UI combo boxes based on query results with localization support.&#10;- Populate multiple combo boxes with sorted, unique values from thesaurus queries based on specific 'tipologia_sigla' codes.&#10;- Populate multiple combo boxes with sorted unique values from the thesaurus based on specific 'tipologia_sigla' filters for improved data entry consistency.&#10;- Populate multiple combo boxes with distinct, sorted values from the thesaurus based on specific 'tipologia_sigla' codes to support laterizi and litici material attributes.&#10;- Populate multiple comboBoxes with sorted, unique values from database queries based on different 'tipologia_sigla' codes for construction-related attributes.&#10;- Add site connection checks, localized user messages, and media list generation for photos and PDFs with error handling and configuration prompts.&#10;- Add support for additional archaeological USM data fields including dimensions and elevations with language localization for GIS-based descriptions.&#10;- Add extensive field mappings for archaeological data export including USM properties, ICCD alignment, and GIS-derived values&#10;- Add support for exporting US and photo metadata to PDF with multilingual options and progress tracking&#10;- Add German export options, file path setters, and GraphML conversion with UI integration and error handling&#10;- Add support for SQLite data export with recursive query handling for SU context and relationship mapping.&#10;- Add logic to parse and clean stratigraphic relationships, generate an Excel sheet with formatted columns, and display Harris Matrix image with matplotlib.&#10;- Add logic for interactive matrix generation and stratigraphic relationship validation with multilingual support&#10;- Implementa la generazione e salvataggio di report su errori di ordinamento con messaggi localizzati e gestione degli aggiornamenti al database.&#10;- Add UI handlers for GIS and preview toggle buttons, implement feature sorting and selection with multilingual support and error handling.&#10;- Add new record and save functionalities with UI updates and multilingual support for validation messages&#10;- Add interactive API key management and GPT-based error explanation with multilingual success messages for stratigraphic checks&#10;- Add input validation for required text fields and numeric float fields with warning messages for invalid or empty entries.&#10;- Add numeric and length validation with localized warnings for multiple input fields in the form.&#10;- Add input validation for multiple fields with localized error messages and remove strict numeric check on US field to allow alphanumeric values.&#10;- Add input validation for field length and logical consistency in period and phase selection, and implement automatic form check reporting per site.&#10;- Add stratigraphic relationship consistency check with multilingual logging and reciprocal validation&#10;- Add validation for reciprocal stratigraphic relationships and generate multilingual error reports when inconsistencies are found.&#10;- Comment out detailed relationship verification logic to simplify debugging and improve code maintainability.&#10;- Add function to validate consistency between stratigraphic definitions and relationships across different languages.&#10;- Add stratigraphic relationship report generation with multilingual support and logical consistency checks.&#10;- Add stratigraphic relationship validation logic with multilingual report generation for excavation records.&#10;- Add detailed temporal consistency checks for relationship types and generate corresponding multilingual report messages.&#10;- Add support for extracting and saving additional USM layer attributes and related table data from UI inputs with proper type handling and null checks.&#10;- Add new fields to data export for Archeo 3.0 and align with ICCD standards, including detailed USM and LAT attributes&#10;- Add data insertion logic with input validation, error handling, and UI row management for multiple table widgets&#10;- Refactor record navigation and implement site-based filtering in view_all to improve database interaction and user experience.&#10;- Add record navigation and multilingual record deletion confirmation with database cleanup and UI updates&#10;- Add methods for deleting filtered records, resetting search filters, showing selected GIS layers, and updating excavation period codes with multilingual support.&#10;- Add switchable search mode with UI field toggling and multilingual feedback for improved user experience and error handling.&#10;- Enable form fields and table widgets during search and implement search parameter collection with input validation.&#10;- Add support for capturing and saving additional archaeological record fields including dimensions, catalog numbers, references, and excavation details.&#10;- Add support for additional form fields in search dictionary and handle empty searches with warning message.&#10;- Add support for selecting 'AND' or 'OR' logical operator in search queries with multilingual result messages and GIS layer updates.&#10;- Add record management and error handling methods for data update, loading, and table manipulation with encoding error logging and multilingual support.&#10;- Add method to reset all UI fields and tables to initial empty state, including new USM attributes and conditional date logic&#10;- Clear all input fields and reset UI components in the USM form to ensure a clean state for new data entry.&#10;- Clear all input fields and reset relevant UI tables to initial state when creating a new record.&#10;- Clear all form fields and populate them with data from DATA_LIST using the fill_fields method.&#10;- Populate UI fields with additional excavation record attributes to support Archeo 3.0 and ICCD alignment.&#10;- Populate UI fields with corresponding values from DATA_LIST, handling empty or missing numerical fields by setting them to empty strings.&#10;- Add TM field synchronization from TMA table and improve UI data restoration and form field handling with error logging.&#10;- Handle optional numeric input fields by setting them to None if left empty and update DATA_LIST_REC_TEMP to include new USM attributes and catalog fields for Archeo 3.0 and ICCD alignment.&#10;- Add comprehensive data extraction and comparison methods for form fields to support record validation and synchronization.&#10;- Add utility methods for tab enabling, directory access, data type casting, and CSV import into SQLite with platform-specific file handling&#10;- Add support for importing and filtering additional USM-related fields, including UI updates and error handling.&#10;- Add SQLPromptDialog UI for text-to-SQL conversion with mode selection, prompt history, and execution options.&#10;- Add support for Text2SQL API key management, model download, and SQL generation via API or local model with spatial view detection&#10;- Add support for identifying geometry columns and handling spatial queries with result validation and display in table format.&#10;- Add functionality to display SQL query results and geometry info in a table with support for SpatiaLite views and geometry validation&#10;- Add result table population, Excel export, graph plotting, and geometry alias detection functionalities&#10;- Implement feature selection and zoom based on table row selection by matching row data with layer fields and applying appropriate expressions.&#10;- Implement geometry type inference from SQL and add method to create spatial views in PostGIS with geometry registration.&#10;- Add support for creating and loading spatial layers from PostgreSQL and SpatiaLite views with dynamic geometry column selection and connection parameter parsing.&#10;- Add helper methods for detecting geometry columns and enhance spatial view creation for PostGIS and SpatiaLite compatibility.&#10;- Add GraphWindow for plotting data with percentage bars and USFilterDialog for filtering" />
    <MESSAGE value="- Add initial implementation of US_USM.py.backup with GUI components, language selection, and report generation dependencies&#10;- Add UI sections for language selection, table filtering, and data validation with corresponding backend logic for retrieving and validating excavation data.&#10;- Add pottery data retrieval with filtering, implement checkable combo box for table selection, and create a styled report preview dialog with terminal output and clipboard/save functionality.&#10;- Implement mouse click handling on text edit to open local or external URLs, add logging with color-coded messages, and generate Word reports with TOC and headers.&#10;- Add HTML-to-Word conversion with heading, image, table, and markdown formatting support&#10;- Add support for bold, italic, images with captions, and HTML table conversion to Word document export&#10;- Add support for bolded table headers, image processing with thumbnail replacement and resizing, clipboard copy functionality, and vector database creation for RAG-based data retrieval.&#10;- Add prompt formatting, language-specific instructions, token estimation, and validation methods for archaeological data&#10;- Add image and markdown processing functions to format archaeological content for widget display in HTML.&#10;- Add HTML conversion logic for structured report formatting including headings, lists, tables, and images&#10;- Implement robust data conversion and validation logic with detailed logging and error handling for archaeological analysis steps.&#10;- Refactor report generation to dynamically summarize available data and conditionally retrieve and organize images by section and entity type.&#10;- Add support for pottery summaries, image grouping by entity type, and RAG-based processing for large datasets&#10;- Add RAG-based analysis with support for image-specific questions and integrated report generation per data section.&#10;- Add RAG-based fallback for token limit errors and improve error handling during section processing.&#10;- Add RAG-based error recovery with contextual image inclusion and post-processing to enhance report generation robustness and clarity.&#10;- Add methods to clean text and generate multilingual prompts and tables for materials, pottery, tombs, periodization, and structures data.&#10;- Add markdown table formatter, progress dialog class, and localized initialization for US form&#10;- Add new field mappings for Italian and German localization to support Archeo 3.0 and ICCD alignment.&#10;- Add German and English to Italian field name mappings for archaeological data conversion to support multilingual input normalization.&#10;- Add Italian and German translations for new USM-related fields and update SORT_ITEMS accordingly.&#10;- Add support for German localization of field labels and align them with existing English and Italian mappings for USM and archaeological data fields.&#10;- Add extensive new data fields, initialize GUI components, set up caching and signal connections, and implement natural sorting function for alphanumeric values.&#10;- Connect GUI elements to their respective event handlers and implement get_images_for_entities to retrieve media thumbnails for various entity types with detailed logging.&#10;- Add methods for vector database creation, RAG chain construction, and token-aware data chunking to support retrieval-augmented generation.&#10;- Add data analysis and validation methods for stratigraphy, materials, and pottery with token-aware chunking logic and truncation warnings.&#10;- Add functions to format and generate tables for archaeological data including materials, pottery, US, tombs, structures, and periodization for report generation.&#10;- Add analysis and validation tool generation methods and data processing functions for archaeological site, stratigraphy, materials, and pottery tables.&#10;- Add data processing functions for various archaeological tables with filtering by year or range and site context.&#10;- Add support for 'periodizzazione' and 'struttura' tables with structured extraction and enhance prompt generation for detailed archaeological reports&#10;- Add data extraction, filtering, and validation logic for multiple tables in report generation process.&#10;- Add missing data validation and report generation workflow with OpenAI agent integration and structured formatting.&#10;- Add report generation workflow with user prompts, section parsing, fallback content, and output to Word template&#10;- Add parsing and processing logic for report sections with fallback content for missing data and support for subsections in DOCX generation.&#10;- Improve heading parsing by supporting both hash-prefixed and underline styles and enhance image handling with validation and fallback paths.&#10;- Add logic to populate Word document with metadata, structured sections, formatting, and tables from report data.&#10;- Add method to convert markdown-formatted tables to Word tables with styling and error handling.&#10;- Add support for detecting and cleaning markdown-style headings and placeholders, including fallback handling for missing content with default section text and structured subsection processing.&#10;- Add support for parsing images and markdown tables in subsection content with error handling and formatting options&#10;- Add support for parsing headings, images, and markdown tables in report content and fallback to manual section insertion if placeholders are missing.&#10;- Add formatted tables for pottery, tombs, structures, and periodization to the document with headers and data, and ensure document has meaningful content before saving.&#10;- Improve table styling fallback logic and add robust error handling for applying styles and borders; implement sketchgpt feature for media selection and GPT window launch; add keyboard shortcuts dialog and localized user prompts and warnings.&#10;- Add progress dialog and detailed logging to rapporti update process, and implement area-specific data filtering for enhanced control and error tracking.&#10;- Implement robust update routine for US table entries with error logging, area correction, and UTF-8 validation.&#10;- Add error logging and improve data extraction from GraphML to CSV for archaeological data processing&#10;- Add CSV processing for US table import, deduplicate entries, and enhance relationship validation with inverse mapping for archaeological units&#10;- Add logic to handle and insert rapporti rows based on existing matches and validate inverse relationships in reports&#10;- Add automatic inverse relationship creation with validation and UI update for unit relationships, enhancing consistency and user feedback.&#10;- Add methods for refreshing data, inserting reference records, and filtering the 'Unità Stratigrafiche' table with support for both SQLite and PostgreSQL backends.&#10;- Add database query and UI update logic for filtering and saving 'Unità Stratigrafiche' records with multi-language support and error handling.&#10;- Add methods to populate period, phase, and dating comboboxes from the 'Periodizzazione' table with error handling and UI updates.&#10;- Add methods to update and display 'Dating' fields based on periodization data and enhance document handling and save logic&#10;- Add US navigation and selection logic with progress updates and conditional save prompts.&#10;- Add US record search and selection functionality with localized messages and UI state handling&#10;- Add database connection logic with multilingual error handling and UI initialization for empty and populated states.&#10;- Add multilingual error messages and customize GUI components based on user locale and context.&#10;- Add ComboBox delegates for multiple USM table columns using localized thesaurus data for documentation types, colors, inclusions, textures, and components.&#10;- Add support for drag-and-drop media upload with validation, map preview loading, and media database insertion including thumbnails and associations.&#10;- Add methods to associate media with entities, generate US records, and process media files with type-specific handling and validation&#10;- Add support for 3D model file types and improve media import with thumbnail generation, resize handling, tag assignment, and localized user messages.&#10;- Add multilingual support and logic for selecting and removing tags from US-related images with confirmation dialogs.&#10;- Add pagination, search filtering, and UI enhancements for displaying and tagging untagged images in QListWidget.&#10;- Implement image caching with LRU eviction and enhance QListWidget population with US entity details and pagination.&#10;- Implement navigation and filtering for paginated image lists and enhance item tagging with media-US association and thumbnail preview updates.&#10;- Add 3D model loading, thumbnail generation, and interactive viewer with measurement and debug tools&#10;- Add distance measurement, coordinate verification, and image export functions with debug messages and label rendering in 3D plot.&#10;- Add bounding box measurement toggle with labeled edges and implement 3D model thumbnail generation and media handling enhancements.&#10;- Add error handling for database queries and implement dynamic population of UI combo boxes based on query results with localization support.&#10;- Populate multiple combo boxes with sorted, unique values from thesaurus queries based on specific 'tipologia_sigla' codes.&#10;- Populate multiple combo boxes with sorted unique values from the thesaurus based on specific 'tipologia_sigla' filters for improved data entry consistency.&#10;- Populate multiple combo boxes with distinct, sorted values from the thesaurus based on specific 'tipologia_sigla' codes to support laterizi and litici material attributes.&#10;- Populate multiple comboBoxes with sorted, unique values from database queries based on different 'tipologia_sigla' codes for construction-related attributes.&#10;- Add site connection checks, localized user messages, and media list generation for photos and PDFs with error handling and configuration prompts.&#10;- Add support for additional archaeological USM data fields including dimensions and elevations with language localization for GIS-based descriptions.&#10;- Add extensive field mappings for archaeological data export including USM properties, ICCD alignment, and GIS-derived values&#10;- Add support for exporting US and photo metadata to PDF with multilingual options and progress tracking&#10;- Add German export options, file path setters, and GraphML conversion with UI integration and error handling&#10;- Add support for SQLite data export with recursive query handling for SU context and relationship mapping.&#10;- Add logic to parse and clean stratigraphic relationships, generate an Excel sheet with formatted columns, and display Harris Matrix image with matplotlib.&#10;- Add logic for interactive matrix generation and stratigraphic relationship validation with multilingual support&#10;- Implementa la generazione e salvataggio di report su errori di ordinamento con messaggi localizzati e gestione degli aggiornamenti al database.&#10;- Add UI handlers for GIS and preview toggle buttons, implement feature sorting and selection with multilingual support and error handling.&#10;- Add new record and save functionalities with UI updates and multilingual support for validation messages&#10;- Add interactive API key management and GPT-based error explanation with multilingual success messages for stratigraphic checks&#10;- Add input validation for required text fields and numeric float fields with warning messages for invalid or empty entries.&#10;- Add numeric and length validation with localized warnings for multiple input fields in the form.&#10;- Add input validation for multiple fields with localized error messages and remove strict numeric check on US field to allow alphanumeric values.&#10;- Add input validation for field length and logical consistency in period and phase selection, and implement automatic form check reporting per site.&#10;- Add stratigraphic relationship consistency check with multilingual logging and reciprocal validation&#10;- Add validation for reciprocal stratigraphic relationships and generate multilingual error reports when inconsistencies are found.&#10;- Comment out detailed relationship verification logic to simplify debugging and improve code maintainability.&#10;- Add function to validate consistency between stratigraphic definitions and relationships across different languages.&#10;- Add stratigraphic relationship report generation with multilingual support and logical consistency checks.&#10;- Add stratigraphic relationship validation logic with multilingual report generation for excavation records.&#10;- Add detailed temporal consistency checks for relationship types and generate corresponding multilingual report messages.&#10;- Add support for extracting and saving additional USM layer attributes and related table data from UI inputs with proper type handling and null checks.&#10;- Add new fields to data export for Archeo 3.0 and align with ICCD standards, including detailed USM and LAT attributes&#10;- Add data insertion logic with input validation, error handling, and UI row management for multiple table widgets&#10;- Refactor record navigation and implement site-based filtering in view_all to improve database interaction and user experience.&#10;- Add record navigation and multilingual record deletion confirmation with database cleanup and UI updates&#10;- Add methods for deleting filtered records, resetting search filters, showing selected GIS layers, and updating excavation period codes with multilingual support.&#10;- Add switchable search mode with UI field toggling and multilingual feedback for improved user experience and error handling.&#10;- Enable form fields and table widgets during search and implement search parameter collection with input validation.&#10;- Add support for capturing and saving additional archaeological record fields including dimensions, catalog numbers, references, and excavation details.&#10;- Add support for additional form fields in search dictionary and handle empty searches with warning message.&#10;- Add support for selecting 'AND' or 'OR' logical operator in search queries with multilingual result messages and GIS layer updates.&#10;- Add record management and error handling methods for data update, loading, and table manipulation with encoding error logging and multilingual support.&#10;- Add method to reset all UI fields and tables to initial empty state, including new USM attributes and conditional date logic&#10;- Clear all input fields and reset UI components in the USM form to ensure a clean state for new data entry.&#10;- Clear all input fields and reset relevant UI tables to initial state when creating a new record.&#10;- Clear all form fields and populate them with data from DATA_LIST using the fill_fields method.&#10;- Populate UI fields with additional excavation record attributes to support Archeo 3.0 and ICCD alignment.&#10;- Populate UI fields with corresponding values from DATA_LIST, handling empty or missing numerical fields by setting them to empty strings.&#10;- Add TM field synchronization from TMA table and improve UI data restoration and form field handling with error logging.&#10;- Handle optional numeric input fields by setting them to None if left empty and update DATA_LIST_REC_TEMP to include new USM attributes and catalog fields for Archeo 3.0 and ICCD alignment.&#10;- Add comprehensive data extraction and comparison methods for form fields to support record validation and synchronization.&#10;- Add utility methods for tab enabling, directory access, data type casting, and CSV import into SQLite with platform-specific file handling&#10;- Add support for importing and filtering additional USM-related fields, including UI updates and error handling.&#10;- Add SQLPromptDialog UI for text-to-SQL conversion with mode selection, prompt history, and execution options.&#10;- Add support for Text2SQL API key management, model download, and SQL generation via API or local model with spatial view detection&#10;- Add support for identifying geometry columns and handling spatial queries with result validation and display in table format.&#10;- Add functionality to display SQL query results and geometry info in a table with support for SpatiaLite views and geometry validation&#10;- Add result table population, Excel export, graph plotting, and geometry alias detection functionalities&#10;- Implement feature selection and zoom based on table row selection by matching row data with layer fields and applying appropriate expressions.&#10;- Implement geometry type inference from SQL and add method to create spatial views in PostGIS with geometry registration.&#10;- Add support for creating and loading spatial layers from PostgreSQL and SpatiaLite views with dynamic geometry column selection and connection parameter parsing.&#10;- Add helper methods for detecting geometry columns and enhance spatial view creation for PostGIS and SpatiaLite compatibility.&#10;- Add GraphWindow for plotting data with percentage bars and USFilterDialog for filtering US" />
    <MESSAGE value="- Add initial implementation of US_USM.py.backup with GUI components, language selection, and report generation dependencies&#10;- Add UI sections for language selection, table filtering, and data validation with corresponding backend logic for retrieving and validating excavation data.&#10;- Add pottery data retrieval with filtering, implement checkable combo box for table selection, and create a styled report preview dialog with terminal output and clipboard/save functionality.&#10;- Implement mouse click handling on text edit to open local or external URLs, add logging with color-coded messages, and generate Word reports with TOC and headers.&#10;- Add HTML-to-Word conversion with heading, image, table, and markdown formatting support&#10;- Add support for bold, italic, images with captions, and HTML table conversion to Word document export&#10;- Add support for bolded table headers, image processing with thumbnail replacement and resizing, clipboard copy functionality, and vector database creation for RAG-based data retrieval.&#10;- Add prompt formatting, language-specific instructions, token estimation, and validation methods for archaeological data&#10;- Add image and markdown processing functions to format archaeological content for widget display in HTML.&#10;- Add HTML conversion logic for structured report formatting including headings, lists, tables, and images&#10;- Implement robust data conversion and validation logic with detailed logging and error handling for archaeological analysis steps.&#10;- Refactor report generation to dynamically summarize available data and conditionally retrieve and organize images by section and entity type.&#10;- Add support for pottery summaries, image grouping by entity type, and RAG-based processing for large datasets&#10;- Add RAG-based analysis with support for image-specific questions and integrated report generation per data section.&#10;- Add RAG-based fallback for token limit errors and improve error handling during section processing.&#10;- Add RAG-based error recovery with contextual image inclusion and post-processing to enhance report generation robustness and clarity.&#10;- Add methods to clean text and generate multilingual prompts and tables for materials, pottery, tombs, periodization, and structures data.&#10;- Add markdown table formatter, progress dialog class, and localized initialization for US form&#10;- Add new field mappings for Italian and German localization to support Archeo 3.0 and ICCD alignment.&#10;- Add German and English to Italian field name mappings for archaeological data conversion to support multilingual input normalization.&#10;- Add Italian and German translations for new USM-related fields and update SORT_ITEMS accordingly.&#10;- Add support for German localization of field labels and align them with existing English and Italian mappings for USM and archaeological data fields.&#10;- Add extensive new data fields, initialize GUI components, set up caching and signal connections, and implement natural sorting function for alphanumeric values.&#10;- Connect GUI elements to their respective event handlers and implement get_images_for_entities to retrieve media thumbnails for various entity types with detailed logging.&#10;- Add methods for vector database creation, RAG chain construction, and token-aware data chunking to support retrieval-augmented generation.&#10;- Add data analysis and validation methods for stratigraphy, materials, and pottery with token-aware chunking logic and truncation warnings.&#10;- Add functions to format and generate tables for archaeological data including materials, pottery, US, tombs, structures, and periodization for report generation.&#10;- Add analysis and validation tool generation methods and data processing functions for archaeological site, stratigraphy, materials, and pottery tables.&#10;- Add data processing functions for various archaeological tables with filtering by year or range and site context.&#10;- Add support for 'periodizzazione' and 'struttura' tables with structured extraction and enhance prompt generation for detailed archaeological reports&#10;- Add data extraction, filtering, and validation logic for multiple tables in report generation process.&#10;- Add missing data validation and report generation workflow with OpenAI agent integration and structured formatting.&#10;- Add report generation workflow with user prompts, section parsing, fallback content, and output to Word template&#10;- Add parsing and processing logic for report sections with fallback content for missing data and support for subsections in DOCX generation.&#10;- Improve heading parsing by supporting both hash-prefixed and underline styles and enhance image handling with validation and fallback paths.&#10;- Add logic to populate Word document with metadata, structured sections, formatting, and tables from report data.&#10;- Add method to convert markdown-formatted tables to Word tables with styling and error handling.&#10;- Add support for detecting and cleaning markdown-style headings and placeholders, including fallback handling for missing content with default section text and structured subsection processing.&#10;- Add support for parsing images and markdown tables in subsection content with error handling and formatting options&#10;- Add support for parsing headings, images, and markdown tables in report content and fallback to manual section insertion if placeholders are missing.&#10;- Add formatted tables for pottery, tombs, structures, and periodization to the document with headers and data, and ensure document has meaningful content before saving.&#10;- Improve table styling fallback logic and add robust error handling for applying styles and borders; implement sketchgpt feature for media selection and GPT window launch; add keyboard shortcuts dialog and localized user prompts and warnings.&#10;- Add progress dialog and detailed logging to rapporti update process, and implement area-specific data filtering for enhanced control and error tracking.&#10;- Implement robust update routine for US table entries with error logging, area correction, and UTF-8 validation.&#10;- Add error logging and improve data extraction from GraphML to CSV for archaeological data processing&#10;- Add CSV processing for US table import, deduplicate entries, and enhance relationship validation with inverse mapping for archaeological units&#10;- Add logic to handle and insert rapporti rows based on existing matches and validate inverse relationships in reports&#10;- Add automatic inverse relationship creation with validation and UI update for unit relationships, enhancing consistency and user feedback.&#10;- Add methods for refreshing data, inserting reference records, and filtering the 'Unità Stratigrafiche' table with support for both SQLite and PostgreSQL backends.&#10;- Add database query and UI update logic for filtering and saving 'Unità Stratigrafiche' records with multi-language support and error handling.&#10;- Add methods to populate period, phase, and dating comboboxes from the 'Periodizzazione' table with error handling and UI updates.&#10;- Add methods to update and display 'Dating' fields based on periodization data and enhance document handling and save logic&#10;- Add US navigation and selection logic with progress updates and conditional save prompts.&#10;- Add US record search and selection functionality with localized messages and UI state handling&#10;- Add database connection logic with multilingual error handling and UI initialization for empty and populated states.&#10;- Add multilingual error messages and customize GUI components based on user locale and context.&#10;- Add ComboBox delegates for multiple USM table columns using localized thesaurus data for documentation types, colors, inclusions, textures, and components.&#10;- Add support for drag-and-drop media upload with validation, map preview loading, and media database insertion including thumbnails and associations.&#10;- Add methods to associate media with entities, generate US records, and process media files with type-specific handling and validation&#10;- Add support for 3D model file types and improve media import with thumbnail generation, resize handling, tag assignment, and localized user messages.&#10;- Add multilingual support and logic for selecting and removing tags from US-related images with confirmation dialogs.&#10;- Add pagination, search filtering, and UI enhancements for displaying and tagging untagged images in QListWidget.&#10;- Implement image caching with LRU eviction and enhance QListWidget population with US entity details and pagination.&#10;- Implement navigation and filtering for paginated image lists and enhance item tagging with media-US association and thumbnail preview updates.&#10;- Add 3D model loading, thumbnail generation, and interactive viewer with measurement and debug tools&#10;- Add distance measurement, coordinate verification, and image export functions with debug messages and label rendering in 3D plot.&#10;- Add bounding box measurement toggle with labeled edges and implement 3D model thumbnail generation and media handling enhancements.&#10;- Add error handling for database queries and implement dynamic population of UI combo boxes based on query results with localization support.&#10;- Populate multiple combo boxes with sorted, unique values from thesaurus queries based on specific 'tipologia_sigla' codes.&#10;- Populate multiple combo boxes with sorted unique values from the thesaurus based on specific 'tipologia_sigla' filters for improved data entry consistency.&#10;- Populate multiple combo boxes with distinct, sorted values from the thesaurus based on specific 'tipologia_sigla' codes to support laterizi and litici material attributes.&#10;- Populate multiple comboBoxes with sorted, unique values from database queries based on different 'tipologia_sigla' codes for construction-related attributes.&#10;- Add site connection checks, localized user messages, and media list generation for photos and PDFs with error handling and configuration prompts.&#10;- Add support for additional archaeological USM data fields including dimensions and elevations with language localization for GIS-based descriptions.&#10;- Add extensive field mappings for archaeological data export including USM properties, ICCD alignment, and GIS-derived values&#10;- Add support for exporting US and photo metadata to PDF with multilingual options and progress tracking&#10;- Add German export options, file path setters, and GraphML conversion with UI integration and error handling&#10;- Add support for SQLite data export with recursive query handling for SU context and relationship mapping.&#10;- Add logic to parse and clean stratigraphic relationships, generate an Excel sheet with formatted columns, and display Harris Matrix image with matplotlib.&#10;- Add logic for interactive matrix generation and stratigraphic relationship validation with multilingual support&#10;- Implementa la generazione e salvataggio di report su errori di ordinamento con messaggi localizzati e gestione degli aggiornamenti al database.&#10;- Add UI handlers for GIS and preview toggle buttons, implement feature sorting and selection with multilingual support and error handling.&#10;- Add new record and save functionalities with UI updates and multilingual support for validation messages&#10;- Add interactive API key management and GPT-based error explanation with multilingual success messages for stratigraphic checks&#10;- Add input validation for required text fields and numeric float fields with warning messages for invalid or empty entries.&#10;- Add numeric and length validation with localized warnings for multiple input fields in the form.&#10;- Add input validation for multiple fields with localized error messages and remove strict numeric check on US field to allow alphanumeric values.&#10;- Add input validation for field length and logical consistency in period and phase selection, and implement automatic form check reporting per site.&#10;- Add stratigraphic relationship consistency check with multilingual logging and reciprocal validation&#10;- Add validation for reciprocal stratigraphic relationships and generate multilingual error reports when inconsistencies are found.&#10;- Comment out detailed relationship verification logic to simplify debugging and improve code maintainability.&#10;- Add function to validate consistency between stratigraphic definitions and relationships across different languages.&#10;- Add stratigraphic relationship report generation with multilingual support and logical consistency checks.&#10;- Add stratigraphic relationship validation logic with multilingual report generation for excavation records.&#10;- Add detailed temporal consistency checks for relationship types and generate corresponding multilingual report messages.&#10;- Add support for extracting and saving additional USM layer attributes and related table data from UI inputs with proper type handling and null checks.&#10;- Add new fields to data export for Archeo 3.0 and align with ICCD standards, including detailed USM and LAT attributes&#10;- Add data insertion logic with input validation, error handling, and UI row management for multiple table widgets&#10;- Refactor record navigation and implement site-based filtering in view_all to improve database interaction and user experience.&#10;- Add record navigation and multilingual record deletion confirmation with database cleanup and UI updates&#10;- Add methods for deleting filtered records, resetting search filters, showing selected GIS layers, and updating excavation period codes with multilingual support.&#10;- Add switchable search mode with UI field toggling and multilingual feedback for improved user experience and error handling.&#10;- Enable form fields and table widgets during search and implement search parameter collection with input validation.&#10;- Add support for capturing and saving additional archaeological record fields including dimensions, catalog numbers, references, and excavation details.&#10;- Add support for additional form fields in search dictionary and handle empty searches with warning message.&#10;- Add support for selecting 'AND' or 'OR' logical operator in search queries with multilingual result messages and GIS layer updates.&#10;- Add record management and error handling methods for data update, loading, and table manipulation with encoding error logging and multilingual support.&#10;- Add method to reset all UI fields and tables to initial empty state, including new USM attributes and conditional date logic&#10;- Clear all input fields and reset UI components in the USM form to ensure a clean state for new data entry.&#10;- Clear all input fields and reset relevant UI tables to initial state when creating a new record.&#10;- Clear all form fields and populate them with data from DATA_LIST using the fill_fields method.&#10;- Populate UI fields with additional excavation record attributes to support Archeo 3.0 and ICCD alignment.&#10;- Populate UI fields with corresponding values from DATA_LIST, handling empty or missing numerical fields by setting them to empty strings.&#10;- Add TM field synchronization from TMA table and improve UI data restoration and form field handling with error logging.&#10;- Handle optional numeric input fields by setting them to None if left empty and update DATA_LIST_REC_TEMP to include new USM attributes and catalog fields for Archeo 3.0 and ICCD alignment.&#10;- Add comprehensive data extraction and comparison methods for form fields to support record validation and synchronization.&#10;- Add utility methods for tab enabling, directory access, data type casting, and CSV import into SQLite with platform-specific file handling&#10;- Add support for importing and filtering additional USM-related fields, including UI updates and error handling.&#10;- Add SQLPromptDialog UI for text-to-SQL conversion with mode selection, prompt history, and execution options.&#10;- Add support for Text2SQL API key management, model download, and SQL generation via API or local model with spatial view detection&#10;- Add support for identifying geometry columns and handling spatial queries with result validation and display in table format.&#10;- Add functionality to display SQL query results and geometry info in a table with support for SpatiaLite views and geometry validation&#10;- Add result table population, Excel export, graph plotting, and geometry alias detection functionalities&#10;- Implement feature selection and zoom based on table row selection by matching row data with layer fields and applying appropriate expressions.&#10;- Implement geometry type inference from SQL and add method to create spatial views in PostGIS with geometry registration.&#10;- Add support for creating and loading spatial layers from PostgreSQL and SpatiaLite views with dynamic geometry column selection and connection parameter parsing.&#10;- Add helper methods for detecting geometry columns and enhance spatial view creation for PostGIS and SpatiaLite compatibility.&#10;- Add GraphWindow for plotting data with percentage bars and USFilterDialog for filtering US records" />
    <MESSAGE value="- Add initial implementation of US_USM.py.backup with GUI components, language selection, and report generation dependencies&#10;- Add UI sections for language selection, table filtering, and data validation with corresponding backend logic for retrieving and validating excavation data.&#10;- Add pottery data retrieval with filtering, implement checkable combo box for table selection, and create a styled report preview dialog with terminal output and clipboard/save functionality.&#10;- Implement mouse click handling on text edit to open local or external URLs, add logging with color-coded messages, and generate Word reports with TOC and headers.&#10;- Add HTML-to-Word conversion with heading, image, table, and markdown formatting support&#10;- Add support for bold, italic, images with captions, and HTML table conversion to Word document export&#10;- Add support for bolded table headers, image processing with thumbnail replacement and resizing, clipboard copy functionality, and vector database creation for RAG-based data retrieval.&#10;- Add prompt formatting, language-specific instructions, token estimation, and validation methods for archaeological data&#10;- Add image and markdown processing functions to format archaeological content for widget display in HTML.&#10;- Add HTML conversion logic for structured report formatting including headings, lists, tables, and images&#10;- Implement robust data conversion and validation logic with detailed logging and error handling for archaeological analysis steps.&#10;- Refactor report generation to dynamically summarize available data and conditionally retrieve and organize images by section and entity type.&#10;- Add support for pottery summaries, image grouping by entity type, and RAG-based processing for large datasets&#10;- Add RAG-based analysis with support for image-specific questions and integrated report generation per data section.&#10;- Add RAG-based fallback for token limit errors and improve error handling during section processing.&#10;- Add RAG-based error recovery with contextual image inclusion and post-processing to enhance report generation robustness and clarity.&#10;- Add methods to clean text and generate multilingual prompts and tables for materials, pottery, tombs, periodization, and structures data.&#10;- Add markdown table formatter, progress dialog class, and localized initialization for US form&#10;- Add new field mappings for Italian and German localization to support Archeo 3.0 and ICCD alignment.&#10;- Add German and English to Italian field name mappings for archaeological data conversion to support multilingual input normalization.&#10;- Add Italian and German translations for new USM-related fields and update SORT_ITEMS accordingly.&#10;- Add support for German localization of field labels and align them with existing English and Italian mappings for USM and archaeological data fields.&#10;- Add extensive new data fields, initialize GUI components, set up caching and signal connections, and implement natural sorting function for alphanumeric values.&#10;- Connect GUI elements to their respective event handlers and implement get_images_for_entities to retrieve media thumbnails for various entity types with detailed logging.&#10;- Add methods for vector database creation, RAG chain construction, and token-aware data chunking to support retrieval-augmented generation.&#10;- Add data analysis and validation methods for stratigraphy, materials, and pottery with token-aware chunking logic and truncation warnings.&#10;- Add functions to format and generate tables for archaeological data including materials, pottery, US, tombs, structures, and periodization for report generation.&#10;- Add analysis and validation tool generation methods and data processing functions for archaeological site, stratigraphy, materials, and pottery tables.&#10;- Add data processing functions for various archaeological tables with filtering by year or range and site context.&#10;- Add support for 'periodizzazione' and 'struttura' tables with structured extraction and enhance prompt generation for detailed archaeological reports&#10;- Add data extraction, filtering, and validation logic for multiple tables in report generation process.&#10;- Add missing data validation and report generation workflow with OpenAI agent integration and structured formatting.&#10;- Add report generation workflow with user prompts, section parsing, fallback content, and output to Word template&#10;- Add parsing and processing logic for report sections with fallback content for missing data and support for subsections in DOCX generation.&#10;- Improve heading parsing by supporting both hash-prefixed and underline styles and enhance image handling with validation and fallback paths.&#10;- Add logic to populate Word document with metadata, structured sections, formatting, and tables from report data.&#10;- Add method to convert markdown-formatted tables to Word tables with styling and error handling.&#10;- Add support for detecting and cleaning markdown-style headings and placeholders, including fallback handling for missing content with default section text and structured subsection processing.&#10;- Add support for parsing images and markdown tables in subsection content with error handling and formatting options&#10;- Add support for parsing headings, images, and markdown tables in report content and fallback to manual section insertion if placeholders are missing.&#10;- Add formatted tables for pottery, tombs, structures, and periodization to the document with headers and data, and ensure document has meaningful content before saving.&#10;- Improve table styling fallback logic and add robust error handling for applying styles and borders; implement sketchgpt feature for media selection and GPT window launch; add keyboard shortcuts dialog and localized user prompts and warnings.&#10;- Add progress dialog and detailed logging to rapporti update process, and implement area-specific data filtering for enhanced control and error tracking.&#10;- Implement robust update routine for US table entries with error logging, area correction, and UTF-8 validation.&#10;- Add error logging and improve data extraction from GraphML to CSV for archaeological data processing&#10;- Add CSV processing for US table import, deduplicate entries, and enhance relationship validation with inverse mapping for archaeological units&#10;- Add logic to handle and insert rapporti rows based on existing matches and validate inverse relationships in reports&#10;- Add automatic inverse relationship creation with validation and UI update for unit relationships, enhancing consistency and user feedback.&#10;- Add methods for refreshing data, inserting reference records, and filtering the 'Unità Stratigrafiche' table with support for both SQLite and PostgreSQL backends.&#10;- Add database query and UI update logic for filtering and saving 'Unità Stratigrafiche' records with multi-language support and error handling.&#10;- Add methods to populate period, phase, and dating comboboxes from the 'Periodizzazione' table with error handling and UI updates.&#10;- Add methods to update and display 'Dating' fields based on periodization data and enhance document handling and save logic&#10;- Add US navigation and selection logic with progress updates and conditional save prompts.&#10;- Add US record search and selection functionality with localized messages and UI state handling&#10;- Add database connection logic with multilingual error handling and UI initialization for empty and populated states.&#10;- Add multilingual error messages and customize GUI components based on user locale and context.&#10;- Add ComboBox delegates for multiple USM table columns using localized thesaurus data for documentation types, colors, inclusions, textures, and components.&#10;- Add support for drag-and-drop media upload with validation, map preview loading, and media database insertion including thumbnails and associations.&#10;- Add methods to associate media with entities, generate US records, and process media files with type-specific handling and validation&#10;- Add support for 3D model file types and improve media import with thumbnail generation, resize handling, tag assignment, and localized user messages.&#10;- Add multilingual support and logic for selecting and removing tags from US-related images with confirmation dialogs.&#10;- Add pagination, search filtering, and UI enhancements for displaying and tagging untagged images in QListWidget.&#10;- Implement image caching with LRU eviction and enhance QListWidget population with US entity details and pagination.&#10;- Implement navigation and filtering for paginated image lists and enhance item tagging with media-US association and thumbnail preview updates.&#10;- Add 3D model loading, thumbnail generation, and interactive viewer with measurement and debug tools&#10;- Add distance measurement, coordinate verification, and image export functions with debug messages and label rendering in 3D plot.&#10;- Add bounding box measurement toggle with labeled edges and implement 3D model thumbnail generation and media handling enhancements.&#10;- Add error handling for database queries and implement dynamic population of UI combo boxes based on query results with localization support.&#10;- Populate multiple combo boxes with sorted, unique values from thesaurus queries based on specific 'tipologia_sigla' codes.&#10;- Populate multiple combo boxes with sorted unique values from the thesaurus based on specific 'tipologia_sigla' filters for improved data entry consistency.&#10;- Populate multiple combo boxes with distinct, sorted values from the thesaurus based on specific 'tipologia_sigla' codes to support laterizi and litici material attributes.&#10;- Populate multiple comboBoxes with sorted, unique values from database queries based on different 'tipologia_sigla' codes for construction-related attributes.&#10;- Add site connection checks, localized user messages, and media list generation for photos and PDFs with error handling and configuration prompts.&#10;- Add support for additional archaeological USM data fields including dimensions and elevations with language localization for GIS-based descriptions.&#10;- Add extensive field mappings for archaeological data export including USM properties, ICCD alignment, and GIS-derived values&#10;- Add support for exporting US and photo metadata to PDF with multilingual options and progress tracking&#10;- Add German export options, file path setters, and GraphML conversion with UI integration and error handling&#10;- Add support for SQLite data export with recursive query handling for SU context and relationship mapping.&#10;- Add logic to parse and clean stratigraphic relationships, generate an Excel sheet with formatted columns, and display Harris Matrix image with matplotlib.&#10;- Add logic for interactive matrix generation and stratigraphic relationship validation with multilingual support&#10;- Implementa la generazione e salvataggio di report su errori di ordinamento con messaggi localizzati e gestione degli aggiornamenti al database.&#10;- Add UI handlers for GIS and preview toggle buttons, implement feature sorting and selection with multilingual support and error handling.&#10;- Add new record and save functionalities with UI updates and multilingual support for validation messages&#10;- Add interactive API key management and GPT-based error explanation with multilingual success messages for stratigraphic checks&#10;- Add input validation for required text fields and numeric float fields with warning messages for invalid or empty entries.&#10;- Add numeric and length validation with localized warnings for multiple input fields in the form.&#10;- Add input validation for multiple fields with localized error messages and remove strict numeric check on US field to allow alphanumeric values.&#10;- Add input validation for field length and logical consistency in period and phase selection, and implement automatic form check reporting per site.&#10;- Add stratigraphic relationship consistency check with multilingual logging and reciprocal validation&#10;- Add validation for reciprocal stratigraphic relationships and generate multilingual error reports when inconsistencies are found.&#10;- Comment out detailed relationship verification logic to simplify debugging and improve code maintainability.&#10;- Add function to validate consistency between stratigraphic definitions and relationships across different languages.&#10;- Add stratigraphic relationship report generation with multilingual support and logical consistency checks.&#10;- Add stratigraphic relationship validation logic with multilingual report generation for excavation records.&#10;- Add detailed temporal consistency checks for relationship types and generate corresponding multilingual report messages.&#10;- Add support for extracting and saving additional USM layer attributes and related table data from UI inputs with proper type handling and null checks.&#10;- Add new fields to data export for Archeo 3.0 and align with ICCD standards, including detailed USM and LAT attributes&#10;- Add data insertion logic with input validation, error handling, and UI row management for multiple table widgets&#10;- Refactor record navigation and implement site-based filtering in view_all to improve database interaction and user experience.&#10;- Add record navigation and multilingual record deletion confirmation with database cleanup and UI updates&#10;- Add methods for deleting filtered records, resetting search filters, showing selected GIS layers, and updating excavation period codes with multilingual support.&#10;- Add switchable search mode with UI field toggling and multilingual feedback for improved user experience and error handling.&#10;- Enable form fields and table widgets during search and implement search parameter collection with input validation.&#10;- Add support for capturing and saving additional archaeological record fields including dimensions, catalog numbers, references, and excavation details.&#10;- Add support for additional form fields in search dictionary and handle empty searches with warning message.&#10;- Add support for selecting 'AND' or 'OR' logical operator in search queries with multilingual result messages and GIS layer updates.&#10;- Add record management and error handling methods for data update, loading, and table manipulation with encoding error logging and multilingual support.&#10;- Add method to reset all UI fields and tables to initial empty state, including new USM attributes and conditional date logic&#10;- Clear all input fields and reset UI components in the USM form to ensure a clean state for new data entry.&#10;- Clear all input fields and reset relevant UI tables to initial state when creating a new record.&#10;- Clear all form fields and populate them with data from DATA_LIST using the fill_fields method.&#10;- Populate UI fields with additional excavation record attributes to support Archeo 3.0 and ICCD alignment.&#10;- Populate UI fields with corresponding values from DATA_LIST, handling empty or missing numerical fields by setting them to empty strings.&#10;- Add TM field synchronization from TMA table and improve UI data restoration and form field handling with error logging.&#10;- Handle optional numeric input fields by setting them to None if left empty and update DATA_LIST_REC_TEMP to include new USM attributes and catalog fields for Archeo 3.0 and ICCD alignment.&#10;- Add comprehensive data extraction and comparison methods for form fields to support record validation and synchronization.&#10;- Add utility methods for tab enabling, directory access, data type casting, and CSV import into SQLite with platform-specific file handling&#10;- Add support for importing and filtering additional USM-related fields, including UI updates and error handling.&#10;- Add SQLPromptDialog UI for text-to-SQL conversion with mode selection, prompt history, and execution options.&#10;- Add support for Text2SQL API key management, model download, and SQL generation via API or local model with spatial view detection&#10;- Add support for identifying geometry columns and handling spatial queries with result validation and display in table format.&#10;- Add functionality to display SQL query results and geometry info in a table with support for SpatiaLite views and geometry validation&#10;- Add result table population, Excel export, graph plotting, and geometry alias detection functionalities&#10;- Implement feature selection and zoom based on table row selection by matching row data with layer fields and applying appropriate expressions.&#10;- Implement geometry type inference from SQL and add method to create spatial views in PostGIS with geometry registration.&#10;- Add support for creating and loading spatial layers from PostgreSQL and SpatiaLite views with dynamic geometry column selection and connection parameter parsing.&#10;- Add helper methods for detecting geometry columns and enhance spatial view creation for PostGIS and SpatiaLite compatibility.&#10;- Add GraphWindow for plotting data with percentage bars and USFilterDialog for filtering US records with" />
    <MESSAGE value="- Add initial implementation of US_USM.py.backup with GUI components, language selection, and report generation dependencies&#10;- Add UI sections for language selection, table filtering, and data validation with corresponding backend logic for retrieving and validating excavation data.&#10;- Add pottery data retrieval with filtering, implement checkable combo box for table selection, and create a styled report preview dialog with terminal output and clipboard/save functionality.&#10;- Implement mouse click handling on text edit to open local or external URLs, add logging with color-coded messages, and generate Word reports with TOC and headers.&#10;- Add HTML-to-Word conversion with heading, image, table, and markdown formatting support&#10;- Add support for bold, italic, images with captions, and HTML table conversion to Word document export&#10;- Add support for bolded table headers, image processing with thumbnail replacement and resizing, clipboard copy functionality, and vector database creation for RAG-based data retrieval.&#10;- Add prompt formatting, language-specific instructions, token estimation, and validation methods for archaeological data&#10;- Add image and markdown processing functions to format archaeological content for widget display in HTML.&#10;- Add HTML conversion logic for structured report formatting including headings, lists, tables, and images&#10;- Implement robust data conversion and validation logic with detailed logging and error handling for archaeological analysis steps.&#10;- Refactor report generation to dynamically summarize available data and conditionally retrieve and organize images by section and entity type.&#10;- Add support for pottery summaries, image grouping by entity type, and RAG-based processing for large datasets&#10;- Add RAG-based analysis with support for image-specific questions and integrated report generation per data section.&#10;- Add RAG-based fallback for token limit errors and improve error handling during section processing.&#10;- Add RAG-based error recovery with contextual image inclusion and post-processing to enhance report generation robustness and clarity.&#10;- Add methods to clean text and generate multilingual prompts and tables for materials, pottery, tombs, periodization, and structures data.&#10;- Add markdown table formatter, progress dialog class, and localized initialization for US form&#10;- Add new field mappings for Italian and German localization to support Archeo 3.0 and ICCD alignment.&#10;- Add German and English to Italian field name mappings for archaeological data conversion to support multilingual input normalization.&#10;- Add Italian and German translations for new USM-related fields and update SORT_ITEMS accordingly.&#10;- Add support for German localization of field labels and align them with existing English and Italian mappings for USM and archaeological data fields.&#10;- Add extensive new data fields, initialize GUI components, set up caching and signal connections, and implement natural sorting function for alphanumeric values.&#10;- Connect GUI elements to their respective event handlers and implement get_images_for_entities to retrieve media thumbnails for various entity types with detailed logging.&#10;- Add methods for vector database creation, RAG chain construction, and token-aware data chunking to support retrieval-augmented generation.&#10;- Add data analysis and validation methods for stratigraphy, materials, and pottery with token-aware chunking logic and truncation warnings.&#10;- Add functions to format and generate tables for archaeological data including materials, pottery, US, tombs, structures, and periodization for report generation.&#10;- Add analysis and validation tool generation methods and data processing functions for archaeological site, stratigraphy, materials, and pottery tables.&#10;- Add data processing functions for various archaeological tables with filtering by year or range and site context.&#10;- Add support for 'periodizzazione' and 'struttura' tables with structured extraction and enhance prompt generation for detailed archaeological reports&#10;- Add data extraction, filtering, and validation logic for multiple tables in report generation process.&#10;- Add missing data validation and report generation workflow with OpenAI agent integration and structured formatting.&#10;- Add report generation workflow with user prompts, section parsing, fallback content, and output to Word template&#10;- Add parsing and processing logic for report sections with fallback content for missing data and support for subsections in DOCX generation.&#10;- Improve heading parsing by supporting both hash-prefixed and underline styles and enhance image handling with validation and fallback paths.&#10;- Add logic to populate Word document with metadata, structured sections, formatting, and tables from report data.&#10;- Add method to convert markdown-formatted tables to Word tables with styling and error handling.&#10;- Add support for detecting and cleaning markdown-style headings and placeholders, including fallback handling for missing content with default section text and structured subsection processing.&#10;- Add support for parsing images and markdown tables in subsection content with error handling and formatting options&#10;- Add support for parsing headings, images, and markdown tables in report content and fallback to manual section insertion if placeholders are missing.&#10;- Add formatted tables for pottery, tombs, structures, and periodization to the document with headers and data, and ensure document has meaningful content before saving.&#10;- Improve table styling fallback logic and add robust error handling for applying styles and borders; implement sketchgpt feature for media selection and GPT window launch; add keyboard shortcuts dialog and localized user prompts and warnings.&#10;- Add progress dialog and detailed logging to rapporti update process, and implement area-specific data filtering for enhanced control and error tracking.&#10;- Implement robust update routine for US table entries with error logging, area correction, and UTF-8 validation.&#10;- Add error logging and improve data extraction from GraphML to CSV for archaeological data processing&#10;- Add CSV processing for US table import, deduplicate entries, and enhance relationship validation with inverse mapping for archaeological units&#10;- Add logic to handle and insert rapporti rows based on existing matches and validate inverse relationships in reports&#10;- Add automatic inverse relationship creation with validation and UI update for unit relationships, enhancing consistency and user feedback.&#10;- Add methods for refreshing data, inserting reference records, and filtering the 'Unità Stratigrafiche' table with support for both SQLite and PostgreSQL backends.&#10;- Add database query and UI update logic for filtering and saving 'Unità Stratigrafiche' records with multi-language support and error handling.&#10;- Add methods to populate period, phase, and dating comboboxes from the 'Periodizzazione' table with error handling and UI updates.&#10;- Add methods to update and display 'Dating' fields based on periodization data and enhance document handling and save logic&#10;- Add US navigation and selection logic with progress updates and conditional save prompts.&#10;- Add US record search and selection functionality with localized messages and UI state handling&#10;- Add database connection logic with multilingual error handling and UI initialization for empty and populated states.&#10;- Add multilingual error messages and customize GUI components based on user locale and context.&#10;- Add ComboBox delegates for multiple USM table columns using localized thesaurus data for documentation types, colors, inclusions, textures, and components.&#10;- Add support for drag-and-drop media upload with validation, map preview loading, and media database insertion including thumbnails and associations.&#10;- Add methods to associate media with entities, generate US records, and process media files with type-specific handling and validation&#10;- Add support for 3D model file types and improve media import with thumbnail generation, resize handling, tag assignment, and localized user messages.&#10;- Add multilingual support and logic for selecting and removing tags from US-related images with confirmation dialogs.&#10;- Add pagination, search filtering, and UI enhancements for displaying and tagging untagged images in QListWidget.&#10;- Implement image caching with LRU eviction and enhance QListWidget population with US entity details and pagination.&#10;- Implement navigation and filtering for paginated image lists and enhance item tagging with media-US association and thumbnail preview updates.&#10;- Add 3D model loading, thumbnail generation, and interactive viewer with measurement and debug tools&#10;- Add distance measurement, coordinate verification, and image export functions with debug messages and label rendering in 3D plot.&#10;- Add bounding box measurement toggle with labeled edges and implement 3D model thumbnail generation and media handling enhancements.&#10;- Add error handling for database queries and implement dynamic population of UI combo boxes based on query results with localization support.&#10;- Populate multiple combo boxes with sorted, unique values from thesaurus queries based on specific 'tipologia_sigla' codes.&#10;- Populate multiple combo boxes with sorted unique values from the thesaurus based on specific 'tipologia_sigla' filters for improved data entry consistency.&#10;- Populate multiple combo boxes with distinct, sorted values from the thesaurus based on specific 'tipologia_sigla' codes to support laterizi and litici material attributes.&#10;- Populate multiple comboBoxes with sorted, unique values from database queries based on different 'tipologia_sigla' codes for construction-related attributes.&#10;- Add site connection checks, localized user messages, and media list generation for photos and PDFs with error handling and configuration prompts.&#10;- Add support for additional archaeological USM data fields including dimensions and elevations with language localization for GIS-based descriptions.&#10;- Add extensive field mappings for archaeological data export including USM properties, ICCD alignment, and GIS-derived values&#10;- Add support for exporting US and photo metadata to PDF with multilingual options and progress tracking&#10;- Add German export options, file path setters, and GraphML conversion with UI integration and error handling&#10;- Add support for SQLite data export with recursive query handling for SU context and relationship mapping.&#10;- Add logic to parse and clean stratigraphic relationships, generate an Excel sheet with formatted columns, and display Harris Matrix image with matplotlib.&#10;- Add logic for interactive matrix generation and stratigraphic relationship validation with multilingual support&#10;- Implementa la generazione e salvataggio di report su errori di ordinamento con messaggi localizzati e gestione degli aggiornamenti al database.&#10;- Add UI handlers for GIS and preview toggle buttons, implement feature sorting and selection with multilingual support and error handling.&#10;- Add new record and save functionalities with UI updates and multilingual support for validation messages&#10;- Add interactive API key management and GPT-based error explanation with multilingual success messages for stratigraphic checks&#10;- Add input validation for required text fields and numeric float fields with warning messages for invalid or empty entries.&#10;- Add numeric and length validation with localized warnings for multiple input fields in the form.&#10;- Add input validation for multiple fields with localized error messages and remove strict numeric check on US field to allow alphanumeric values.&#10;- Add input validation for field length and logical consistency in period and phase selection, and implement automatic form check reporting per site.&#10;- Add stratigraphic relationship consistency check with multilingual logging and reciprocal validation&#10;- Add validation for reciprocal stratigraphic relationships and generate multilingual error reports when inconsistencies are found.&#10;- Comment out detailed relationship verification logic to simplify debugging and improve code maintainability.&#10;- Add function to validate consistency between stratigraphic definitions and relationships across different languages.&#10;- Add stratigraphic relationship report generation with multilingual support and logical consistency checks.&#10;- Add stratigraphic relationship validation logic with multilingual report generation for excavation records.&#10;- Add detailed temporal consistency checks for relationship types and generate corresponding multilingual report messages.&#10;- Add support for extracting and saving additional USM layer attributes and related table data from UI inputs with proper type handling and null checks.&#10;- Add new fields to data export for Archeo 3.0 and align with ICCD standards, including detailed USM and LAT attributes&#10;- Add data insertion logic with input validation, error handling, and UI row management for multiple table widgets&#10;- Refactor record navigation and implement site-based filtering in view_all to improve database interaction and user experience.&#10;- Add record navigation and multilingual record deletion confirmation with database cleanup and UI updates&#10;- Add methods for deleting filtered records, resetting search filters, showing selected GIS layers, and updating excavation period codes with multilingual support.&#10;- Add switchable search mode with UI field toggling and multilingual feedback for improved user experience and error handling.&#10;- Enable form fields and table widgets during search and implement search parameter collection with input validation.&#10;- Add support for capturing and saving additional archaeological record fields including dimensions, catalog numbers, references, and excavation details.&#10;- Add support for additional form fields in search dictionary and handle empty searches with warning message.&#10;- Add support for selecting 'AND' or 'OR' logical operator in search queries with multilingual result messages and GIS layer updates.&#10;- Add record management and error handling methods for data update, loading, and table manipulation with encoding error logging and multilingual support.&#10;- Add method to reset all UI fields and tables to initial empty state, including new USM attributes and conditional date logic&#10;- Clear all input fields and reset UI components in the USM form to ensure a clean state for new data entry.&#10;- Clear all input fields and reset relevant UI tables to initial state when creating a new record.&#10;- Clear all form fields and populate them with data from DATA_LIST using the fill_fields method.&#10;- Populate UI fields with additional excavation record attributes to support Archeo 3.0 and ICCD alignment.&#10;- Populate UI fields with corresponding values from DATA_LIST, handling empty or missing numerical fields by setting them to empty strings.&#10;- Add TM field synchronization from TMA table and improve UI data restoration and form field handling with error logging.&#10;- Handle optional numeric input fields by setting them to None if left empty and update DATA_LIST_REC_TEMP to include new USM attributes and catalog fields for Archeo 3.0 and ICCD alignment.&#10;- Add comprehensive data extraction and comparison methods for form fields to support record validation and synchronization.&#10;- Add utility methods for tab enabling, directory access, data type casting, and CSV import into SQLite with platform-specific file handling&#10;- Add support for importing and filtering additional USM-related fields, including UI updates and error handling.&#10;- Add SQLPromptDialog UI for text-to-SQL conversion with mode selection, prompt history, and execution options.&#10;- Add support for Text2SQL API key management, model download, and SQL generation via API or local model with spatial view detection&#10;- Add support for identifying geometry columns and handling spatial queries with result validation and display in table format.&#10;- Add functionality to display SQL query results and geometry info in a table with support for SpatiaLite views and geometry validation&#10;- Add result table population, Excel export, graph plotting, and geometry alias detection functionalities&#10;- Implement feature selection and zoom based on table row selection by matching row data with layer fields and applying appropriate expressions.&#10;- Implement geometry type inference from SQL and add method to create spatial views in PostGIS with geometry registration.&#10;- Add support for creating and loading spatial layers from PostgreSQL and SpatiaLite views with dynamic geometry column selection and connection parameter parsing.&#10;- Add helper methods for detecting geometry columns and enhance spatial view creation for PostGIS and SpatiaLite compatibility.&#10;- Add GraphWindow for plotting data with percentage bars and USFilterDialog for filtering US records with search" />
    <MESSAGE value="- Add initial implementation of US_USM.py.backup with GUI components, language selection, and report generation dependencies&#10;- Add UI sections for language selection, table filtering, and data validation with corresponding backend logic for retrieving and validating excavation data.&#10;- Add pottery data retrieval with filtering, implement checkable combo box for table selection, and create a styled report preview dialog with terminal output and clipboard/save functionality.&#10;- Implement mouse click handling on text edit to open local or external URLs, add logging with color-coded messages, and generate Word reports with TOC and headers.&#10;- Add HTML-to-Word conversion with heading, image, table, and markdown formatting support&#10;- Add support for bold, italic, images with captions, and HTML table conversion to Word document export&#10;- Add support for bolded table headers, image processing with thumbnail replacement and resizing, clipboard copy functionality, and vector database creation for RAG-based data retrieval.&#10;- Add prompt formatting, language-specific instructions, token estimation, and validation methods for archaeological data&#10;- Add image and markdown processing functions to format archaeological content for widget display in HTML.&#10;- Add HTML conversion logic for structured report formatting including headings, lists, tables, and images&#10;- Implement robust data conversion and validation logic with detailed logging and error handling for archaeological analysis steps.&#10;- Refactor report generation to dynamically summarize available data and conditionally retrieve and organize images by section and entity type.&#10;- Add support for pottery summaries, image grouping by entity type, and RAG-based processing for large datasets&#10;- Add RAG-based analysis with support for image-specific questions and integrated report generation per data section.&#10;- Add RAG-based fallback for token limit errors and improve error handling during section processing.&#10;- Add RAG-based error recovery with contextual image inclusion and post-processing to enhance report generation robustness and clarity.&#10;- Add methods to clean text and generate multilingual prompts and tables for materials, pottery, tombs, periodization, and structures data.&#10;- Add markdown table formatter, progress dialog class, and localized initialization for US form&#10;- Add new field mappings for Italian and German localization to support Archeo 3.0 and ICCD alignment.&#10;- Add German and English to Italian field name mappings for archaeological data conversion to support multilingual input normalization.&#10;- Add Italian and German translations for new USM-related fields and update SORT_ITEMS accordingly.&#10;- Add support for German localization of field labels and align them with existing English and Italian mappings for USM and archaeological data fields.&#10;- Add extensive new data fields, initialize GUI components, set up caching and signal connections, and implement natural sorting function for alphanumeric values.&#10;- Connect GUI elements to their respective event handlers and implement get_images_for_entities to retrieve media thumbnails for various entity types with detailed logging.&#10;- Add methods for vector database creation, RAG chain construction, and token-aware data chunking to support retrieval-augmented generation.&#10;- Add data analysis and validation methods for stratigraphy, materials, and pottery with token-aware chunking logic and truncation warnings.&#10;- Add functions to format and generate tables for archaeological data including materials, pottery, US, tombs, structures, and periodization for report generation.&#10;- Add analysis and validation tool generation methods and data processing functions for archaeological site, stratigraphy, materials, and pottery tables.&#10;- Add data processing functions for various archaeological tables with filtering by year or range and site context.&#10;- Add support for 'periodizzazione' and 'struttura' tables with structured extraction and enhance prompt generation for detailed archaeological reports&#10;- Add data extraction, filtering, and validation logic for multiple tables in report generation process.&#10;- Add missing data validation and report generation workflow with OpenAI agent integration and structured formatting.&#10;- Add report generation workflow with user prompts, section parsing, fallback content, and output to Word template&#10;- Add parsing and processing logic for report sections with fallback content for missing data and support for subsections in DOCX generation.&#10;- Improve heading parsing by supporting both hash-prefixed and underline styles and enhance image handling with validation and fallback paths.&#10;- Add logic to populate Word document with metadata, structured sections, formatting, and tables from report data.&#10;- Add method to convert markdown-formatted tables to Word tables with styling and error handling.&#10;- Add support for detecting and cleaning markdown-style headings and placeholders, including fallback handling for missing content with default section text and structured subsection processing.&#10;- Add support for parsing images and markdown tables in subsection content with error handling and formatting options&#10;- Add support for parsing headings, images, and markdown tables in report content and fallback to manual section insertion if placeholders are missing.&#10;- Add formatted tables for pottery, tombs, structures, and periodization to the document with headers and data, and ensure document has meaningful content before saving.&#10;- Improve table styling fallback logic and add robust error handling for applying styles and borders; implement sketchgpt feature for media selection and GPT window launch; add keyboard shortcuts dialog and localized user prompts and warnings.&#10;- Add progress dialog and detailed logging to rapporti update process, and implement area-specific data filtering for enhanced control and error tracking.&#10;- Implement robust update routine for US table entries with error logging, area correction, and UTF-8 validation.&#10;- Add error logging and improve data extraction from GraphML to CSV for archaeological data processing&#10;- Add CSV processing for US table import, deduplicate entries, and enhance relationship validation with inverse mapping for archaeological units&#10;- Add logic to handle and insert rapporti rows based on existing matches and validate inverse relationships in reports&#10;- Add automatic inverse relationship creation with validation and UI update for unit relationships, enhancing consistency and user feedback.&#10;- Add methods for refreshing data, inserting reference records, and filtering the 'Unità Stratigrafiche' table with support for both SQLite and PostgreSQL backends.&#10;- Add database query and UI update logic for filtering and saving 'Unità Stratigrafiche' records with multi-language support and error handling.&#10;- Add methods to populate period, phase, and dating comboboxes from the 'Periodizzazione' table with error handling and UI updates.&#10;- Add methods to update and display 'Dating' fields based on periodization data and enhance document handling and save logic&#10;- Add US navigation and selection logic with progress updates and conditional save prompts.&#10;- Add US record search and selection functionality with localized messages and UI state handling&#10;- Add database connection logic with multilingual error handling and UI initialization for empty and populated states.&#10;- Add multilingual error messages and customize GUI components based on user locale and context.&#10;- Add ComboBox delegates for multiple USM table columns using localized thesaurus data for documentation types, colors, inclusions, textures, and components.&#10;- Add support for drag-and-drop media upload with validation, map preview loading, and media database insertion including thumbnails and associations.&#10;- Add methods to associate media with entities, generate US records, and process media files with type-specific handling and validation&#10;- Add support for 3D model file types and improve media import with thumbnail generation, resize handling, tag assignment, and localized user messages.&#10;- Add multilingual support and logic for selecting and removing tags from US-related images with confirmation dialogs.&#10;- Add pagination, search filtering, and UI enhancements for displaying and tagging untagged images in QListWidget.&#10;- Implement image caching with LRU eviction and enhance QListWidget population with US entity details and pagination.&#10;- Implement navigation and filtering for paginated image lists and enhance item tagging with media-US association and thumbnail preview updates.&#10;- Add 3D model loading, thumbnail generation, and interactive viewer with measurement and debug tools&#10;- Add distance measurement, coordinate verification, and image export functions with debug messages and label rendering in 3D plot.&#10;- Add bounding box measurement toggle with labeled edges and implement 3D model thumbnail generation and media handling enhancements.&#10;- Add error handling for database queries and implement dynamic population of UI combo boxes based on query results with localization support.&#10;- Populate multiple combo boxes with sorted, unique values from thesaurus queries based on specific 'tipologia_sigla' codes.&#10;- Populate multiple combo boxes with sorted unique values from the thesaurus based on specific 'tipologia_sigla' filters for improved data entry consistency.&#10;- Populate multiple combo boxes with distinct, sorted values from the thesaurus based on specific 'tipologia_sigla' codes to support laterizi and litici material attributes.&#10;- Populate multiple comboBoxes with sorted, unique values from database queries based on different 'tipologia_sigla' codes for construction-related attributes.&#10;- Add site connection checks, localized user messages, and media list generation for photos and PDFs with error handling and configuration prompts.&#10;- Add support for additional archaeological USM data fields including dimensions and elevations with language localization for GIS-based descriptions.&#10;- Add extensive field mappings for archaeological data export including USM properties, ICCD alignment, and GIS-derived values&#10;- Add support for exporting US and photo metadata to PDF with multilingual options and progress tracking&#10;- Add German export options, file path setters, and GraphML conversion with UI integration and error handling&#10;- Add support for SQLite data export with recursive query handling for SU context and relationship mapping.&#10;- Add logic to parse and clean stratigraphic relationships, generate an Excel sheet with formatted columns, and display Harris Matrix image with matplotlib.&#10;- Add logic for interactive matrix generation and stratigraphic relationship validation with multilingual support&#10;- Implementa la generazione e salvataggio di report su errori di ordinamento con messaggi localizzati e gestione degli aggiornamenti al database.&#10;- Add UI handlers for GIS and preview toggle buttons, implement feature sorting and selection with multilingual support and error handling.&#10;- Add new record and save functionalities with UI updates and multilingual support for validation messages&#10;- Add interactive API key management and GPT-based error explanation with multilingual success messages for stratigraphic checks&#10;- Add input validation for required text fields and numeric float fields with warning messages for invalid or empty entries.&#10;- Add numeric and length validation with localized warnings for multiple input fields in the form.&#10;- Add input validation for multiple fields with localized error messages and remove strict numeric check on US field to allow alphanumeric values.&#10;- Add input validation for field length and logical consistency in period and phase selection, and implement automatic form check reporting per site.&#10;- Add stratigraphic relationship consistency check with multilingual logging and reciprocal validation&#10;- Add validation for reciprocal stratigraphic relationships and generate multilingual error reports when inconsistencies are found.&#10;- Comment out detailed relationship verification logic to simplify debugging and improve code maintainability.&#10;- Add function to validate consistency between stratigraphic definitions and relationships across different languages.&#10;- Add stratigraphic relationship report generation with multilingual support and logical consistency checks.&#10;- Add stratigraphic relationship validation logic with multilingual report generation for excavation records.&#10;- Add detailed temporal consistency checks for relationship types and generate corresponding multilingual report messages.&#10;- Add support for extracting and saving additional USM layer attributes and related table data from UI inputs with proper type handling and null checks.&#10;- Add new fields to data export for Archeo 3.0 and align with ICCD standards, including detailed USM and LAT attributes&#10;- Add data insertion logic with input validation, error handling, and UI row management for multiple table widgets&#10;- Refactor record navigation and implement site-based filtering in view_all to improve database interaction and user experience.&#10;- Add record navigation and multilingual record deletion confirmation with database cleanup and UI updates&#10;- Add methods for deleting filtered records, resetting search filters, showing selected GIS layers, and updating excavation period codes with multilingual support.&#10;- Add switchable search mode with UI field toggling and multilingual feedback for improved user experience and error handling.&#10;- Enable form fields and table widgets during search and implement search parameter collection with input validation.&#10;- Add support for capturing and saving additional archaeological record fields including dimensions, catalog numbers, references, and excavation details.&#10;- Add support for additional form fields in search dictionary and handle empty searches with warning message.&#10;- Add support for selecting 'AND' or 'OR' logical operator in search queries with multilingual result messages and GIS layer updates.&#10;- Add record management and error handling methods for data update, loading, and table manipulation with encoding error logging and multilingual support.&#10;- Add method to reset all UI fields and tables to initial empty state, including new USM attributes and conditional date logic&#10;- Clear all input fields and reset UI components in the USM form to ensure a clean state for new data entry.&#10;- Clear all input fields and reset relevant UI tables to initial state when creating a new record.&#10;- Clear all form fields and populate them with data from DATA_LIST using the fill_fields method.&#10;- Populate UI fields with additional excavation record attributes to support Archeo 3.0 and ICCD alignment.&#10;- Populate UI fields with corresponding values from DATA_LIST, handling empty or missing numerical fields by setting them to empty strings.&#10;- Add TM field synchronization from TMA table and improve UI data restoration and form field handling with error logging.&#10;- Handle optional numeric input fields by setting them to None if left empty and update DATA_LIST_REC_TEMP to include new USM attributes and catalog fields for Archeo 3.0 and ICCD alignment.&#10;- Add comprehensive data extraction and comparison methods for form fields to support record validation and synchronization.&#10;- Add utility methods for tab enabling, directory access, data type casting, and CSV import into SQLite with platform-specific file handling&#10;- Add support for importing and filtering additional USM-related fields, including UI updates and error handling.&#10;- Add SQLPromptDialog UI for text-to-SQL conversion with mode selection, prompt history, and execution options.&#10;- Add support for Text2SQL API key management, model download, and SQL generation via API or local model with spatial view detection&#10;- Add support for identifying geometry columns and handling spatial queries with result validation and display in table format.&#10;- Add functionality to display SQL query results and geometry info in a table with support for SpatiaLite views and geometry validation&#10;- Add result table population, Excel export, graph plotting, and geometry alias detection functionalities&#10;- Implement feature selection and zoom based on table row selection by matching row data with layer fields and applying appropriate expressions.&#10;- Implement geometry type inference from SQL and add method to create spatial views in PostGIS with geometry registration.&#10;- Add support for creating and loading spatial layers from PostgreSQL and SpatiaLite views with dynamic geometry column selection and connection parameter parsing.&#10;- Add helper methods for detecting geometry columns and enhance spatial view creation for PostGIS and SpatiaLite compatibility.&#10;- Add GraphWindow for plotting data with percentage bars and USFilterDialog for filtering US records with search and" />
    <MESSAGE value="- Add initial implementation of US_USM.py.backup with GUI components, language selection, and report generation dependencies&#10;- Add UI sections for language selection, table filtering, and data validation with corresponding backend logic for retrieving and validating excavation data.&#10;- Add pottery data retrieval with filtering, implement checkable combo box for table selection, and create a styled report preview dialog with terminal output and clipboard/save functionality.&#10;- Implement mouse click handling on text edit to open local or external URLs, add logging with color-coded messages, and generate Word reports with TOC and headers.&#10;- Add HTML-to-Word conversion with heading, image, table, and markdown formatting support&#10;- Add support for bold, italic, images with captions, and HTML table conversion to Word document export&#10;- Add support for bolded table headers, image processing with thumbnail replacement and resizing, clipboard copy functionality, and vector database creation for RAG-based data retrieval.&#10;- Add prompt formatting, language-specific instructions, token estimation, and validation methods for archaeological data&#10;- Add image and markdown processing functions to format archaeological content for widget display in HTML.&#10;- Add HTML conversion logic for structured report formatting including headings, lists, tables, and images&#10;- Implement robust data conversion and validation logic with detailed logging and error handling for archaeological analysis steps.&#10;- Refactor report generation to dynamically summarize available data and conditionally retrieve and organize images by section and entity type.&#10;- Add support for pottery summaries, image grouping by entity type, and RAG-based processing for large datasets&#10;- Add RAG-based analysis with support for image-specific questions and integrated report generation per data section.&#10;- Add RAG-based fallback for token limit errors and improve error handling during section processing.&#10;- Add RAG-based error recovery with contextual image inclusion and post-processing to enhance report generation robustness and clarity.&#10;- Add methods to clean text and generate multilingual prompts and tables for materials, pottery, tombs, periodization, and structures data.&#10;- Add markdown table formatter, progress dialog class, and localized initialization for US form&#10;- Add new field mappings for Italian and German localization to support Archeo 3.0 and ICCD alignment.&#10;- Add German and English to Italian field name mappings for archaeological data conversion to support multilingual input normalization.&#10;- Add Italian and German translations for new USM-related fields and update SORT_ITEMS accordingly.&#10;- Add support for German localization of field labels and align them with existing English and Italian mappings for USM and archaeological data fields.&#10;- Add extensive new data fields, initialize GUI components, set up caching and signal connections, and implement natural sorting function for alphanumeric values.&#10;- Connect GUI elements to their respective event handlers and implement get_images_for_entities to retrieve media thumbnails for various entity types with detailed logging.&#10;- Add methods for vector database creation, RAG chain construction, and token-aware data chunking to support retrieval-augmented generation.&#10;- Add data analysis and validation methods for stratigraphy, materials, and pottery with token-aware chunking logic and truncation warnings.&#10;- Add functions to format and generate tables for archaeological data including materials, pottery, US, tombs, structures, and periodization for report generation.&#10;- Add analysis and validation tool generation methods and data processing functions for archaeological site, stratigraphy, materials, and pottery tables.&#10;- Add data processing functions for various archaeological tables with filtering by year or range and site context.&#10;- Add support for 'periodizzazione' and 'struttura' tables with structured extraction and enhance prompt generation for detailed archaeological reports&#10;- Add data extraction, filtering, and validation logic for multiple tables in report generation process.&#10;- Add missing data validation and report generation workflow with OpenAI agent integration and structured formatting.&#10;- Add report generation workflow with user prompts, section parsing, fallback content, and output to Word template&#10;- Add parsing and processing logic for report sections with fallback content for missing data and support for subsections in DOCX generation.&#10;- Improve heading parsing by supporting both hash-prefixed and underline styles and enhance image handling with validation and fallback paths.&#10;- Add logic to populate Word document with metadata, structured sections, formatting, and tables from report data.&#10;- Add method to convert markdown-formatted tables to Word tables with styling and error handling.&#10;- Add support for detecting and cleaning markdown-style headings and placeholders, including fallback handling for missing content with default section text and structured subsection processing.&#10;- Add support for parsing images and markdown tables in subsection content with error handling and formatting options&#10;- Add support for parsing headings, images, and markdown tables in report content and fallback to manual section insertion if placeholders are missing.&#10;- Add formatted tables for pottery, tombs, structures, and periodization to the document with headers and data, and ensure document has meaningful content before saving.&#10;- Improve table styling fallback logic and add robust error handling for applying styles and borders; implement sketchgpt feature for media selection and GPT window launch; add keyboard shortcuts dialog and localized user prompts and warnings.&#10;- Add progress dialog and detailed logging to rapporti update process, and implement area-specific data filtering for enhanced control and error tracking.&#10;- Implement robust update routine for US table entries with error logging, area correction, and UTF-8 validation.&#10;- Add error logging and improve data extraction from GraphML to CSV for archaeological data processing&#10;- Add CSV processing for US table import, deduplicate entries, and enhance relationship validation with inverse mapping for archaeological units&#10;- Add logic to handle and insert rapporti rows based on existing matches and validate inverse relationships in reports&#10;- Add automatic inverse relationship creation with validation and UI update for unit relationships, enhancing consistency and user feedback.&#10;- Add methods for refreshing data, inserting reference records, and filtering the 'Unità Stratigrafiche' table with support for both SQLite and PostgreSQL backends.&#10;- Add database query and UI update logic for filtering and saving 'Unità Stratigrafiche' records with multi-language support and error handling.&#10;- Add methods to populate period, phase, and dating comboboxes from the 'Periodizzazione' table with error handling and UI updates.&#10;- Add methods to update and display 'Dating' fields based on periodization data and enhance document handling and save logic&#10;- Add US navigation and selection logic with progress updates and conditional save prompts.&#10;- Add US record search and selection functionality with localized messages and UI state handling&#10;- Add database connection logic with multilingual error handling and UI initialization for empty and populated states.&#10;- Add multilingual error messages and customize GUI components based on user locale and context.&#10;- Add ComboBox delegates for multiple USM table columns using localized thesaurus data for documentation types, colors, inclusions, textures, and components.&#10;- Add support for drag-and-drop media upload with validation, map preview loading, and media database insertion including thumbnails and associations.&#10;- Add methods to associate media with entities, generate US records, and process media files with type-specific handling and validation&#10;- Add support for 3D model file types and improve media import with thumbnail generation, resize handling, tag assignment, and localized user messages.&#10;- Add multilingual support and logic for selecting and removing tags from US-related images with confirmation dialogs.&#10;- Add pagination, search filtering, and UI enhancements for displaying and tagging untagged images in QListWidget.&#10;- Implement image caching with LRU eviction and enhance QListWidget population with US entity details and pagination.&#10;- Implement navigation and filtering for paginated image lists and enhance item tagging with media-US association and thumbnail preview updates.&#10;- Add 3D model loading, thumbnail generation, and interactive viewer with measurement and debug tools&#10;- Add distance measurement, coordinate verification, and image export functions with debug messages and label rendering in 3D plot.&#10;- Add bounding box measurement toggle with labeled edges and implement 3D model thumbnail generation and media handling enhancements.&#10;- Add error handling for database queries and implement dynamic population of UI combo boxes based on query results with localization support.&#10;- Populate multiple combo boxes with sorted, unique values from thesaurus queries based on specific 'tipologia_sigla' codes.&#10;- Populate multiple combo boxes with sorted unique values from the thesaurus based on specific 'tipologia_sigla' filters for improved data entry consistency.&#10;- Populate multiple combo boxes with distinct, sorted values from the thesaurus based on specific 'tipologia_sigla' codes to support laterizi and litici material attributes.&#10;- Populate multiple comboBoxes with sorted, unique values from database queries based on different 'tipologia_sigla' codes for construction-related attributes.&#10;- Add site connection checks, localized user messages, and media list generation for photos and PDFs with error handling and configuration prompts.&#10;- Add support for additional archaeological USM data fields including dimensions and elevations with language localization for GIS-based descriptions.&#10;- Add extensive field mappings for archaeological data export including USM properties, ICCD alignment, and GIS-derived values&#10;- Add support for exporting US and photo metadata to PDF with multilingual options and progress tracking&#10;- Add German export options, file path setters, and GraphML conversion with UI integration and error handling&#10;- Add support for SQLite data export with recursive query handling for SU context and relationship mapping.&#10;- Add logic to parse and clean stratigraphic relationships, generate an Excel sheet with formatted columns, and display Harris Matrix image with matplotlib.&#10;- Add logic for interactive matrix generation and stratigraphic relationship validation with multilingual support&#10;- Implementa la generazione e salvataggio di report su errori di ordinamento con messaggi localizzati e gestione degli aggiornamenti al database.&#10;- Add UI handlers for GIS and preview toggle buttons, implement feature sorting and selection with multilingual support and error handling.&#10;- Add new record and save functionalities with UI updates and multilingual support for validation messages&#10;- Add interactive API key management and GPT-based error explanation with multilingual success messages for stratigraphic checks&#10;- Add input validation for required text fields and numeric float fields with warning messages for invalid or empty entries.&#10;- Add numeric and length validation with localized warnings for multiple input fields in the form.&#10;- Add input validation for multiple fields with localized error messages and remove strict numeric check on US field to allow alphanumeric values.&#10;- Add input validation for field length and logical consistency in period and phase selection, and implement automatic form check reporting per site.&#10;- Add stratigraphic relationship consistency check with multilingual logging and reciprocal validation&#10;- Add validation for reciprocal stratigraphic relationships and generate multilingual error reports when inconsistencies are found.&#10;- Comment out detailed relationship verification logic to simplify debugging and improve code maintainability.&#10;- Add function to validate consistency between stratigraphic definitions and relationships across different languages.&#10;- Add stratigraphic relationship report generation with multilingual support and logical consistency checks.&#10;- Add stratigraphic relationship validation logic with multilingual report generation for excavation records.&#10;- Add detailed temporal consistency checks for relationship types and generate corresponding multilingual report messages.&#10;- Add support for extracting and saving additional USM layer attributes and related table data from UI inputs with proper type handling and null checks.&#10;- Add new fields to data export for Archeo 3.0 and align with ICCD standards, including detailed USM and LAT attributes&#10;- Add data insertion logic with input validation, error handling, and UI row management for multiple table widgets&#10;- Refactor record navigation and implement site-based filtering in view_all to improve database interaction and user experience.&#10;- Add record navigation and multilingual record deletion confirmation with database cleanup and UI updates&#10;- Add methods for deleting filtered records, resetting search filters, showing selected GIS layers, and updating excavation period codes with multilingual support.&#10;- Add switchable search mode with UI field toggling and multilingual feedback for improved user experience and error handling.&#10;- Enable form fields and table widgets during search and implement search parameter collection with input validation.&#10;- Add support for capturing and saving additional archaeological record fields including dimensions, catalog numbers, references, and excavation details.&#10;- Add support for additional form fields in search dictionary and handle empty searches with warning message.&#10;- Add support for selecting 'AND' or 'OR' logical operator in search queries with multilingual result messages and GIS layer updates.&#10;- Add record management and error handling methods for data update, loading, and table manipulation with encoding error logging and multilingual support.&#10;- Add method to reset all UI fields and tables to initial empty state, including new USM attributes and conditional date logic&#10;- Clear all input fields and reset UI components in the USM form to ensure a clean state for new data entry.&#10;- Clear all input fields and reset relevant UI tables to initial state when creating a new record.&#10;- Clear all form fields and populate them with data from DATA_LIST using the fill_fields method.&#10;- Populate UI fields with additional excavation record attributes to support Archeo 3.0 and ICCD alignment.&#10;- Populate UI fields with corresponding values from DATA_LIST, handling empty or missing numerical fields by setting them to empty strings.&#10;- Add TM field synchronization from TMA table and improve UI data restoration and form field handling with error logging.&#10;- Handle optional numeric input fields by setting them to None if left empty and update DATA_LIST_REC_TEMP to include new USM attributes and catalog fields for Archeo 3.0 and ICCD alignment.&#10;- Add comprehensive data extraction and comparison methods for form fields to support record validation and synchronization.&#10;- Add utility methods for tab enabling, directory access, data type casting, and CSV import into SQLite with platform-specific file handling&#10;- Add support for importing and filtering additional USM-related fields, including UI updates and error handling.&#10;- Add SQLPromptDialog UI for text-to-SQL conversion with mode selection, prompt history, and execution options.&#10;- Add support for Text2SQL API key management, model download, and SQL generation via API or local model with spatial view detection&#10;- Add support for identifying geometry columns and handling spatial queries with result validation and display in table format.&#10;- Add functionality to display SQL query results and geometry info in a table with support for SpatiaLite views and geometry validation&#10;- Add result table population, Excel export, graph plotting, and geometry alias detection functionalities&#10;- Implement feature selection and zoom based on table row selection by matching row data with layer fields and applying appropriate expressions.&#10;- Implement geometry type inference from SQL and add method to create spatial views in PostGIS with geometry registration.&#10;- Add support for creating and loading spatial layers from PostgreSQL and SpatiaLite views with dynamic geometry column selection and connection parameter parsing.&#10;- Add helper methods for detecting geometry columns and enhance spatial view creation for PostGIS and SpatiaLite compatibility.&#10;- Add GraphWindow for plotting data with percentage bars and USFilterDialog for filtering US records with search and checkbox" />
    <MESSAGE value="- Add initial implementation of US_USM.py.backup with GUI components, language selection, and report generation dependencies&#10;- Add UI sections for language selection, table filtering, and data validation with corresponding backend logic for retrieving and validating excavation data.&#10;- Add pottery data retrieval with filtering, implement checkable combo box for table selection, and create a styled report preview dialog with terminal output and clipboard/save functionality.&#10;- Implement mouse click handling on text edit to open local or external URLs, add logging with color-coded messages, and generate Word reports with TOC and headers.&#10;- Add HTML-to-Word conversion with heading, image, table, and markdown formatting support&#10;- Add support for bold, italic, images with captions, and HTML table conversion to Word document export&#10;- Add support for bolded table headers, image processing with thumbnail replacement and resizing, clipboard copy functionality, and vector database creation for RAG-based data retrieval.&#10;- Add prompt formatting, language-specific instructions, token estimation, and validation methods for archaeological data&#10;- Add image and markdown processing functions to format archaeological content for widget display in HTML.&#10;- Add HTML conversion logic for structured report formatting including headings, lists, tables, and images&#10;- Implement robust data conversion and validation logic with detailed logging and error handling for archaeological analysis steps.&#10;- Refactor report generation to dynamically summarize available data and conditionally retrieve and organize images by section and entity type.&#10;- Add support for pottery summaries, image grouping by entity type, and RAG-based processing for large datasets&#10;- Add RAG-based analysis with support for image-specific questions and integrated report generation per data section.&#10;- Add RAG-based fallback for token limit errors and improve error handling during section processing.&#10;- Add RAG-based error recovery with contextual image inclusion and post-processing to enhance report generation robustness and clarity.&#10;- Add methods to clean text and generate multilingual prompts and tables for materials, pottery, tombs, periodization, and structures data.&#10;- Add markdown table formatter, progress dialog class, and localized initialization for US form&#10;- Add new field mappings for Italian and German localization to support Archeo 3.0 and ICCD alignment.&#10;- Add German and English to Italian field name mappings for archaeological data conversion to support multilingual input normalization.&#10;- Add Italian and German translations for new USM-related fields and update SORT_ITEMS accordingly.&#10;- Add support for German localization of field labels and align them with existing English and Italian mappings for USM and archaeological data fields.&#10;- Add extensive new data fields, initialize GUI components, set up caching and signal connections, and implement natural sorting function for alphanumeric values.&#10;- Connect GUI elements to their respective event handlers and implement get_images_for_entities to retrieve media thumbnails for various entity types with detailed logging.&#10;- Add methods for vector database creation, RAG chain construction, and token-aware data chunking to support retrieval-augmented generation.&#10;- Add data analysis and validation methods for stratigraphy, materials, and pottery with token-aware chunking logic and truncation warnings.&#10;- Add functions to format and generate tables for archaeological data including materials, pottery, US, tombs, structures, and periodization for report generation.&#10;- Add analysis and validation tool generation methods and data processing functions for archaeological site, stratigraphy, materials, and pottery tables.&#10;- Add data processing functions for various archaeological tables with filtering by year or range and site context.&#10;- Add support for 'periodizzazione' and 'struttura' tables with structured extraction and enhance prompt generation for detailed archaeological reports&#10;- Add data extraction, filtering, and validation logic for multiple tables in report generation process.&#10;- Add missing data validation and report generation workflow with OpenAI agent integration and structured formatting.&#10;- Add report generation workflow with user prompts, section parsing, fallback content, and output to Word template&#10;- Add parsing and processing logic for report sections with fallback content for missing data and support for subsections in DOCX generation.&#10;- Improve heading parsing by supporting both hash-prefixed and underline styles and enhance image handling with validation and fallback paths.&#10;- Add logic to populate Word document with metadata, structured sections, formatting, and tables from report data.&#10;- Add method to convert markdown-formatted tables to Word tables with styling and error handling.&#10;- Add support for detecting and cleaning markdown-style headings and placeholders, including fallback handling for missing content with default section text and structured subsection processing.&#10;- Add support for parsing images and markdown tables in subsection content with error handling and formatting options&#10;- Add support for parsing headings, images, and markdown tables in report content and fallback to manual section insertion if placeholders are missing.&#10;- Add formatted tables for pottery, tombs, structures, and periodization to the document with headers and data, and ensure document has meaningful content before saving.&#10;- Improve table styling fallback logic and add robust error handling for applying styles and borders; implement sketchgpt feature for media selection and GPT window launch; add keyboard shortcuts dialog and localized user prompts and warnings.&#10;- Add progress dialog and detailed logging to rapporti update process, and implement area-specific data filtering for enhanced control and error tracking.&#10;- Implement robust update routine for US table entries with error logging, area correction, and UTF-8 validation.&#10;- Add error logging and improve data extraction from GraphML to CSV for archaeological data processing&#10;- Add CSV processing for US table import, deduplicate entries, and enhance relationship validation with inverse mapping for archaeological units&#10;- Add logic to handle and insert rapporti rows based on existing matches and validate inverse relationships in reports&#10;- Add automatic inverse relationship creation with validation and UI update for unit relationships, enhancing consistency and user feedback.&#10;- Add methods for refreshing data, inserting reference records, and filtering the 'Unità Stratigrafiche' table with support for both SQLite and PostgreSQL backends.&#10;- Add database query and UI update logic for filtering and saving 'Unità Stratigrafiche' records with multi-language support and error handling.&#10;- Add methods to populate period, phase, and dating comboboxes from the 'Periodizzazione' table with error handling and UI updates.&#10;- Add methods to update and display 'Dating' fields based on periodization data and enhance document handling and save logic&#10;- Add US navigation and selection logic with progress updates and conditional save prompts.&#10;- Add US record search and selection functionality with localized messages and UI state handling&#10;- Add database connection logic with multilingual error handling and UI initialization for empty and populated states.&#10;- Add multilingual error messages and customize GUI components based on user locale and context.&#10;- Add ComboBox delegates for multiple USM table columns using localized thesaurus data for documentation types, colors, inclusions, textures, and components.&#10;- Add support for drag-and-drop media upload with validation, map preview loading, and media database insertion including thumbnails and associations.&#10;- Add methods to associate media with entities, generate US records, and process media files with type-specific handling and validation&#10;- Add support for 3D model file types and improve media import with thumbnail generation, resize handling, tag assignment, and localized user messages.&#10;- Add multilingual support and logic for selecting and removing tags from US-related images with confirmation dialogs.&#10;- Add pagination, search filtering, and UI enhancements for displaying and tagging untagged images in QListWidget.&#10;- Implement image caching with LRU eviction and enhance QListWidget population with US entity details and pagination.&#10;- Implement navigation and filtering for paginated image lists and enhance item tagging with media-US association and thumbnail preview updates.&#10;- Add 3D model loading, thumbnail generation, and interactive viewer with measurement and debug tools&#10;- Add distance measurement, coordinate verification, and image export functions with debug messages and label rendering in 3D plot.&#10;- Add bounding box measurement toggle with labeled edges and implement 3D model thumbnail generation and media handling enhancements.&#10;- Add error handling for database queries and implement dynamic population of UI combo boxes based on query results with localization support.&#10;- Populate multiple combo boxes with sorted, unique values from thesaurus queries based on specific 'tipologia_sigla' codes.&#10;- Populate multiple combo boxes with sorted unique values from the thesaurus based on specific 'tipologia_sigla' filters for improved data entry consistency.&#10;- Populate multiple combo boxes with distinct, sorted values from the thesaurus based on specific 'tipologia_sigla' codes to support laterizi and litici material attributes.&#10;- Populate multiple comboBoxes with sorted, unique values from database queries based on different 'tipologia_sigla' codes for construction-related attributes.&#10;- Add site connection checks, localized user messages, and media list generation for photos and PDFs with error handling and configuration prompts.&#10;- Add support for additional archaeological USM data fields including dimensions and elevations with language localization for GIS-based descriptions.&#10;- Add extensive field mappings for archaeological data export including USM properties, ICCD alignment, and GIS-derived values&#10;- Add support for exporting US and photo metadata to PDF with multilingual options and progress tracking&#10;- Add German export options, file path setters, and GraphML conversion with UI integration and error handling&#10;- Add support for SQLite data export with recursive query handling for SU context and relationship mapping.&#10;- Add logic to parse and clean stratigraphic relationships, generate an Excel sheet with formatted columns, and display Harris Matrix image with matplotlib.&#10;- Add logic for interactive matrix generation and stratigraphic relationship validation with multilingual support&#10;- Implementa la generazione e salvataggio di report su errori di ordinamento con messaggi localizzati e gestione degli aggiornamenti al database.&#10;- Add UI handlers for GIS and preview toggle buttons, implement feature sorting and selection with multilingual support and error handling.&#10;- Add new record and save functionalities with UI updates and multilingual support for validation messages&#10;- Add interactive API key management and GPT-based error explanation with multilingual success messages for stratigraphic checks&#10;- Add input validation for required text fields and numeric float fields with warning messages for invalid or empty entries.&#10;- Add numeric and length validation with localized warnings for multiple input fields in the form.&#10;- Add input validation for multiple fields with localized error messages and remove strict numeric check on US field to allow alphanumeric values.&#10;- Add input validation for field length and logical consistency in period and phase selection, and implement automatic form check reporting per site.&#10;- Add stratigraphic relationship consistency check with multilingual logging and reciprocal validation&#10;- Add validation for reciprocal stratigraphic relationships and generate multilingual error reports when inconsistencies are found.&#10;- Comment out detailed relationship verification logic to simplify debugging and improve code maintainability.&#10;- Add function to validate consistency between stratigraphic definitions and relationships across different languages.&#10;- Add stratigraphic relationship report generation with multilingual support and logical consistency checks.&#10;- Add stratigraphic relationship validation logic with multilingual report generation for excavation records.&#10;- Add detailed temporal consistency checks for relationship types and generate corresponding multilingual report messages.&#10;- Add support for extracting and saving additional USM layer attributes and related table data from UI inputs with proper type handling and null checks.&#10;- Add new fields to data export for Archeo 3.0 and align with ICCD standards, including detailed USM and LAT attributes&#10;- Add data insertion logic with input validation, error handling, and UI row management for multiple table widgets&#10;- Refactor record navigation and implement site-based filtering in view_all to improve database interaction and user experience.&#10;- Add record navigation and multilingual record deletion confirmation with database cleanup and UI updates&#10;- Add methods for deleting filtered records, resetting search filters, showing selected GIS layers, and updating excavation period codes with multilingual support.&#10;- Add switchable search mode with UI field toggling and multilingual feedback for improved user experience and error handling.&#10;- Enable form fields and table widgets during search and implement search parameter collection with input validation.&#10;- Add support for capturing and saving additional archaeological record fields including dimensions, catalog numbers, references, and excavation details.&#10;- Add support for additional form fields in search dictionary and handle empty searches with warning message.&#10;- Add support for selecting 'AND' or 'OR' logical operator in search queries with multilingual result messages and GIS layer updates.&#10;- Add record management and error handling methods for data update, loading, and table manipulation with encoding error logging and multilingual support.&#10;- Add method to reset all UI fields and tables to initial empty state, including new USM attributes and conditional date logic&#10;- Clear all input fields and reset UI components in the USM form to ensure a clean state for new data entry.&#10;- Clear all input fields and reset relevant UI tables to initial state when creating a new record.&#10;- Clear all form fields and populate them with data from DATA_LIST using the fill_fields method.&#10;- Populate UI fields with additional excavation record attributes to support Archeo 3.0 and ICCD alignment.&#10;- Populate UI fields with corresponding values from DATA_LIST, handling empty or missing numerical fields by setting them to empty strings.&#10;- Add TM field synchronization from TMA table and improve UI data restoration and form field handling with error logging.&#10;- Handle optional numeric input fields by setting them to None if left empty and update DATA_LIST_REC_TEMP to include new USM attributes and catalog fields for Archeo 3.0 and ICCD alignment.&#10;- Add comprehensive data extraction and comparison methods for form fields to support record validation and synchronization.&#10;- Add utility methods for tab enabling, directory access, data type casting, and CSV import into SQLite with platform-specific file handling&#10;- Add support for importing and filtering additional USM-related fields, including UI updates and error handling.&#10;- Add SQLPromptDialog UI for text-to-SQL conversion with mode selection, prompt history, and execution options.&#10;- Add support for Text2SQL API key management, model download, and SQL generation via API or local model with spatial view detection&#10;- Add support for identifying geometry columns and handling spatial queries with result validation and display in table format.&#10;- Add functionality to display SQL query results and geometry info in a table with support for SpatiaLite views and geometry validation&#10;- Add result table population, Excel export, graph plotting, and geometry alias detection functionalities&#10;- Implement feature selection and zoom based on table row selection by matching row data with layer fields and applying appropriate expressions.&#10;- Implement geometry type inference from SQL and add method to create spatial views in PostGIS with geometry registration.&#10;- Add support for creating and loading spatial layers from PostgreSQL and SpatiaLite views with dynamic geometry column selection and connection parameter parsing.&#10;- Add helper methods for detecting geometry columns and enhance spatial view creation for PostGIS and SpatiaLite compatibility.&#10;- Add GraphWindow for plotting data with percentage bars and USFilterDialog for filtering US records with search and checkbox UI" />
    <MESSAGE value="Add scripts and documentation for SQLite migration, including spatial fixes and metadata handling" />
    <option name="LAST_COMMIT_MESSAGE" value="Add scripts and documentation for SQLite migration, including spatial fixes and metadata handling" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/tabs/US_USM.py</url>
          <line>13318</line>
          <option name="timeStamp" value="1" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/pyarchinit$test_matrix.coverage" NAME="test_matrix Coverage Results" MODIFIED="1710867324893" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="" />
    <SUITE FILE_PATH="coverage/pyarchinit$reformat_dir.coverage" NAME="reformat_dir Coverage Results" MODIFIED="1713969472412" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
    <SUITE FILE_PATH="coverage/pyarchinit$request_commit.coverage" NAME="request_commit Coverage Results" MODIFIED="1710320666012" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
    <SUITE FILE_PATH="coverage/pyarchinit$archaeological_data_mapping.coverage" NAME="archaeological_data_mapping Coverage Results" MODIFIED="1724741563634" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/modules/utility" />
    <SUITE FILE_PATH="coverage/pyarchinit$update_entities_us_field.coverage" NAME="update_entities_us_field Coverage Results" MODIFIED="1753333512871" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/scripts" />
    <SUITE FILE_PATH="coverage/pyarchinit$t_4707.coverage" NAME="t_4707 Coverage Results" MODIFIED="1747300290716" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
    <SUITE FILE_PATH="coverage/pyarchinit$archeo_analysis.coverage" NAME="archeo_analysis Coverage Results" MODIFIED="1736870947709" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/modules/report" />
    <SUITE FILE_PATH="coverage/pyarchinit$US_USM.coverage" NAME="US_USM Coverage Results" MODIFIED="1709968936762" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tabs" />
    <SUITE FILE_PATH="coverage/pyarchinit$grok_1.coverage" NAME="grok-1 Coverage Results" MODIFIED="1710845630887" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
    <SUITE FILE_PATH="coverage/pyarchinit$.coverage" NAME=" Coverage Results" MODIFIED="1747300268328" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
    <SUITE FILE_PATH="coverage/pyarchinit$test_renem_file.coverage" NAME="test_renem_file Coverage Results" MODIFIED="1725894617454" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
    <SUITE FILE_PATH="coverage/pyarchinit$copy_excelfile.coverage" NAME="copy_excelfile Coverage Results" MODIFIED="1741628999797" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
    <SUITE FILE_PATH="coverage/pyarchinit$tokml.coverage" NAME="tokml Coverage Results" MODIFIED="1708847589878" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$USER_HOME$/Documents/pythonProject4" />
    <SUITE FILE_PATH="coverage/pyarchinit$update_forms_us_field.coverage" NAME="update_forms_us_field Coverage Results" MODIFIED="1753333560969" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/scripts" />
    <SUITE FILE_PATH="coverage/pyarchinit$__init__.coverage" NAME="__init__ Coverage Results" MODIFIED="1716619077243" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
    <SUITE FILE_PATH="coverage/pyarchinit$test.coverage" NAME="test Coverage Results" MODIFIED="1704214360433" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$USER_HOME$/Desktop" />
    <SUITE FILE_PATH="coverage/pyarchinit$autoemotive.coverage" NAME="autoemotive Coverage Results" MODIFIED="1714203834232" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
    <SUITE FILE_PATH="coverage/pyarchinit$train_groq.coverage" NAME="train_groq Coverage Results" MODIFIED="1747292508080" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
    <SUITE FILE_PATH="coverage/pyarchinit$requestcommit_flask.coverage" NAME="requestcommit_flask Coverage Results" MODIFIED="1710320563571" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
    <SUITE FILE_PATH="coverage/pyarchinit$skatch_gpt_US.coverage" NAME="skatch_gpt_US Coverage Results" MODIFIED="1727361282220" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/modules/utility" />
  </component>
</project>